cd /tmp/Nopol_Defects4J_Math_21;
export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 5 \
	--source src/main/java/ \
	--classpath "target/classes/:target/test-classes/:/tmp/Nopol_Defects4J_Math_21/target/classes/:/tmp/Nopol_Defects4J_Math_21/target/test-classes/:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
00:00:15.542 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
00:00:15.547 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/Nopol_Defects4J_Math_21/target/classes/, file:/tmp/Nopol_Defects4J_Math_21/target/test-classes/, file:/tmp/Nopol_Defects4J_Math_21/target/classes/, file:/tmp/Nopol_Defects4J_Math_21/target/test-classes/, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
00:00:15.547 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
00:00:15.547 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest]
00:00:15.550 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@66d33a', projectTests=[org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest], complianceLevel=5, outputFolder=., json=true}
00:00:15.551 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 24
00:00:15.558 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 397 MB
00:00:15.558 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
00:00:15.559 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 483 MB
00:00:15.559 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
00:00:15.560 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
00:00:15.560 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
00:08:39.294 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
00:08:39.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:365 which is executed by 1 tests
00:08:39.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:365
00:08:39.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
00:08:39.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:361 which is executed by 1 tests
00:08:39.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:361
00:08:39.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
00:08:39.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:360 which is executed by 1 tests
00:08:39.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:360
00:08:39.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
00:08:39.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:359 which is executed by 1 tests
00:08:39.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:359
00:08:39.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
00:08:39.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:358 which is executed by 1 tests
00:08:39.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:358
00:08:39.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
00:08:39.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:357 which is executed by 1 tests
00:08:39.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:357
00:08:39.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
00:08:39.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:356 which is executed by 1 tests
00:08:39.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:356
00:08:39.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
00:08:39.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:355 which is executed by 1 tests
00:08:39.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:355
00:08:39.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
00:08:39.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:354 which is executed by 1 tests
00:08:39.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:354
00:08:39.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
00:08:39.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RectangularCholeskyDecomposition:160 which is executed by 9 tests
1644006350
00:08:39.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
00:08:39.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:189 which is executed by 4 tests
1236997208
00:08:39.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
00:08:39.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:186 which is executed by 4 tests
1236997208
00:08:40.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007015086040782525
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005907356881056947
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:40.143 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (78 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007015086040782525
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005907356881056947]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007015086040782525
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005907356881056947    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:41.001 [pool-5-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (48 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00682575795458643
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005748080957356327
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:41.033 [pool-6-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (30 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00682575795458643
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005748080957356327]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00682575795458643
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005748080957356327    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:08:41.034 [pool-3-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
00:08:41.034 [pool-3-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00682575795458643
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005748080957356327]
00:08:41.034 [pool-3-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:186.
00:08:41.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
00:08:41.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:185 which is executed by 4 tests
1236997208
00:08:41.187 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00692987785973416
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005838426878550408
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:41.258 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (67 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00692987785973416
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005838426878550408]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00692987785973416
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005838426878550408    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:41.544 [pool-9-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (38 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006873998432802181
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005781923056377535
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:41.575 [pool-10-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006873998432802181
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005781923056377535]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006873998432802181
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005781923056377535    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:08:41.575 [pool-7-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
00:08:41.575 [pool-7-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006873998432802181
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005781923056377535]
00:08:41.576 [pool-7-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:185.
00:08:41.576 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
00:08:41.576 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:184 which is executed by 4 tests
1236997208
00:08:41.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00699108048280956
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005876220571074882
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:41.800 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (70 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00699108048280956
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005876220571074882]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00699108048280956
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005876220571074882    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:42.074 [pool-13-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (36 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007068888245498982
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059601865336332775
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:42.104 [pool-14-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007068888245498982
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059601865336332775]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007068888245498982
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059601865336332775    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:08:42.105 [pool-11-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
00:08:42.105 [pool-11-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007068888245498982
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059601865336332775]
00:08:42.105 [pool-11-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:184.
00:08:42.105 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
00:08:42.106 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:183 which is executed by 4 tests
1236997208
00:08:42.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
00:08:42.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:163 which is executed by 4 tests
1236997208
00:08:42.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
00:08:42.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:159 which is executed by 4 tests
1236997208
00:08:42.541 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00689590760072375
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058074289296044124
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:42.611 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (66 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00689590760072375
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058074289296044124]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00689590760072375
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058074289296044124    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.NumberIsTooSmallException: insufficient dimension 0, must be at least 2
    at org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.getResult(StorelessBivariateCovariance.java:111)
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.getData(StorelessCovariance.java:79)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:191)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:08:43.191 [pool-17-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (351 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[insufficient dimension 0, must be at least 2]
org.apache.commons.math3.exception.NumberIsTooSmallException: insufficient dimension 0, must be at least 2    at org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.getResult(StorelessBivariateCovariance.java:111)
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.getData(StorelessCovariance.java:79)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:191)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938586544501976
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005841995166582645
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:44.346 [pool-18-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1154 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938586544501976
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005841995166582645]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938586544501976
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005841995166582645    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:08:44.347 [pool-15-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): insufficient dimension 0, must be at least 2]
00:08:44.348 [pool-15-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938586544501976
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005841995166582645]
00:08:44.348 [pool-15-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:159.
00:08:44.348 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
00:08:44.348 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:158 which is executed by 4 tests
1236997208
00:08:44.493 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007010630856598027
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005902662708537726
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:44.568 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (71 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007010630856598027
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005902662708537726]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007010630856598027
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005902662708537726    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.NumberIsTooSmallException: insufficient dimension 0, must be at least 2
    at org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.getResult(StorelessBivariateCovariance.java:111)
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.getData(StorelessCovariance.java:79)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:191)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:08:45.273 [pool-21-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (480 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[insufficient dimension 0, must be at least 2]
org.apache.commons.math3.exception.NumberIsTooSmallException: insufficient dimension 0, must be at least 2    at org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.getResult(StorelessBivariateCovariance.java:111)
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.getData(StorelessCovariance.java:79)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:191)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007044899022046774
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005930589697280858
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:45.659 [pool-22-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (384 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007044899022046774
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005930589697280858]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007044899022046774
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005930589697280858    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:08:45.660 [pool-19-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): insufficient dimension 0, must be at least 2]
00:08:45.660 [pool-19-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007044899022046774
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005930589697280858]
00:08:45.660 [pool-19-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:158.
00:08:45.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
00:08:45.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:157 which is executed by 4 tests
1236997208
00:08:45.807 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006835461610746385
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005760930807581724
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:45.874 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006835461610746385
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005760930807581724]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006835461610746385
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005760930807581724    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.NumberIsTooSmallException: insufficient dimension 0, must be at least 2
    at org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.getResult(StorelessBivariateCovariance.java:111)
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.getData(StorelessCovariance.java:79)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:191)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:08:46.142 [pool-25-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (69 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[insufficient dimension 0, must be at least 2]
org.apache.commons.math3.exception.NumberIsTooSmallException: insufficient dimension 0, must be at least 2    at org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.getResult(StorelessBivariateCovariance.java:111)
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.getData(StorelessCovariance.java:79)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:191)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006973845422185897
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005864653091360412
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:46.297 [pool-26-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (153 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006973845422185897
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005864653091360412]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006973845422185897
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005864653091360412    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:08:46.298 [pool-23-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): insufficient dimension 0, must be at least 2]
00:08:46.299 [pool-23-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006973845422185897
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005864653091360412]
00:08:46.299 [pool-23-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:157.
00:08:46.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
00:08:46.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:151 which is executed by 4 tests
1236997208
00:08:46.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006865994885845219
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005776423104587392
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:46.509 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006865994885845219
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005776423104587392]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006865994885845219
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005776423104587392    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006950485350359183
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005850462347413773
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:46.930 [pool-29-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (218 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006950485350359183
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005850462347413773]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006950485350359183
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005850462347413773    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006997540893455852
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005891541414591521
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:47.074 [pool-30-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (143 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006997540893455852
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005891541414591521]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006997540893455852
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005891541414591521    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:08:47.075 [pool-27-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006950485350359183
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005850462347413773]
00:08:47.075 [pool-27-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006997540893455852
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005891541414591521]
00:08:47.076 [pool-27-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:151.
00:08:47.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006996182992754972
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058901139089007504
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:47.144 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (65 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006996182992754972
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058901139089007504]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006996182992754972
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058901139089007504    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006997114957384461
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005897785372208472
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:47.519 [pool-33-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (173 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006997114957384461
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005897785372208472]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006997114957384461
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005897785372208472    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.DimensionMismatchException: 4 != 4
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.increment(StorelessCovariance.java:60)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:188)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:08:47.533 [pool-34-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[4 != 4]
org.apache.commons.math3.exception.DimensionMismatchException: 4 != 4    at org.apache.commons.math3.stat.correlation.StorelessCovariance.increment(StorelessCovariance.java:60)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:188)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:08:47.533 [pool-31-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006997114957384461
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005897785372208472]
00:08:47.534 [pool-31-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): 4 != 4]
00:08:47.534 [pool-31-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:151.
00:08:47.534 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
00:08:47.534 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:150 which is executed by 4 tests
1236997208
00:08:47.684 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
00:08:47.684 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:121 which is executed by 4 tests
1236997208
00:08:47.846 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
00:08:47.847 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:120 which is executed by 4 tests
1236997208
00:08:50.410 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069819309408436
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005883574285457056
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:50.476 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069819309408436
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005883574285457056]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069819309408436
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005883574285457056    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.increment(StorelessCovariance.java:66)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:188)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:08:50.699 [pool-37-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.stat.correlation.StorelessCovariance.increment(StorelessCovariance.java:66)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:188)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006973216401904347
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058769175964269805
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:50.739 [pool-38-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006973216401904347
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058769175964269805]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006973216401904347
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058769175964269805    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:08:50.740 [pool-35-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): null]
00:08:50.741 [pool-35-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006973216401904347
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058769175964269805]
00:08:50.741 [pool-35-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:120.
00:08:50.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
00:08:50.741 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:109 which is executed by 4 tests
1236997208
00:08:50.885 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
00:08:50.885 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:99 which is executed by 4 tests
1236997208
00:08:51.026 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
00:08:51.026 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:87 which is executed by 4 tests
1236997208
00:08:51.167 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
00:08:51.167 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:84 which is executed by 4 tests
1236997208
00:08:51.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069835731204583515
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005890913911698552
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:51.375 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069835731204583515
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005890913911698552]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069835731204583515
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005890913911698552    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.increment(StorelessCovariance.java:64)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:188)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:08:51.580 [pool-41-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.stat.correlation.StorelessCovariance.increment(StorelessCovariance.java:64)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:188)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007023908091642891
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005920193122039256
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:51.622 [pool-42-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (41 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007023908091642891
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005920193122039256]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007023908091642891
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005920193122039256    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:08:51.623 [pool-39-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): null]
00:08:51.623 [pool-39-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007023908091642891
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005920193122039256]
00:08:51.623 [pool-39-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:84.
00:08:51.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
00:08:51.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:83 which is executed by 4 tests
1236997208
00:08:51.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006755810425274632
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005685709623637705
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:51.831 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006755810425274632
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005685709623637705]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006755810425274632
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005685709623637705    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.increment(StorelessCovariance.java:64)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:188)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:08:52.029 [pool-45-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.stat.correlation.StorelessCovariance.increment(StorelessCovariance.java:64)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:188)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069325904981756975
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005840506365853447
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:52.071 [pool-46-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (41 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069325904981756975
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005840506365853447]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069325904981756975
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005840506365853447    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:08:52.072 [pool-43-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): null]
00:08:52.072 [pool-43-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069325904981756975
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005840506365853447]
00:08:52.072 [pool-43-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:83.
00:08:52.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
00:08:52.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:82 which is executed by 4 tests
1236997208
00:08:52.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006813950141969801
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005728456559576923
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:52.288 [pool-48-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (70 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006813950141969801
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005728456559576923]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006813950141969801
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005728456559576923    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.increment(StorelessCovariance.java:64)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:188)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:08:52.486 [pool-49-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.stat.correlation.StorelessCovariance.increment(StorelessCovariance.java:64)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:188)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006826744989250957
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005742620876140277
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:52.526 [pool-50-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006826744989250957
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005742620876140277]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006826744989250957
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005742620876140277    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:08:52.526 [pool-47-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): null]
00:08:52.526 [pool-47-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006826744989250957
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005742620876140277]
00:08:52.526 [pool-47-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:82.
00:08:52.526 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
00:08:52.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:181 which is executed by 4 tests
-1006630263
00:08:52.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
00:08:52.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:177 which is executed by 4 tests
-1006630263
00:08:52.813 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007096419282554384
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005977713889203059
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:52.878 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007096419282554384
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005977713889203059]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007096419282554384
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005977713889203059    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:53.850 [pool-53-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (791 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006951283745568705
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005852274215840596
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:58.643 [pool-54-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4791 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006951283745568705
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005852274215840596]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006951283745568705
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005852274215840596    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:08:58.644 [pool-51-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
00:08:58.644 [pool-51-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006951283745568705
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005852274215840596]
00:08:58.644 [pool-51-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:177.
00:08:58.645 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
00:08:58.645 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:176 which is executed by 4 tests
-1006630263
00:08:58.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006940589157579788
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005841171882210519
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:58.860 [pool-56-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (61 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006940589157579788
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005841171882210519]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006940589157579788
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005841171882210519    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:08:59.239 [pool-57-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (194 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006923215358000476
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005830906372335905
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:00.110 [pool-58-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (869 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006923215358000476
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005830906372335905]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006923215358000476
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005830906372335905    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:00.110 [pool-55-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
00:09:00.110 [pool-55-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006923215358000476
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005830906372335905]
00:09:00.111 [pool-55-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:176.
00:09:00.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
00:09:00.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:175 which is executed by 4 tests
-1006630263
00:09:00.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0067331347521103636
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0056770854720933125
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:00.325 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (66 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0067331347521103636
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0056770854720933125]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0067331347521103636
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0056770854720933125    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006836305403690006
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057557332677942545
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:01.102 [pool-61-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (600 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006836305403690006
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057557332677942545]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006836305403690006
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057557332677942545    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006909928479447075
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005830272114399242
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:02.998 [pool-62-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1894 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006909928479447075
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005830272114399242]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006909928479447075
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005830272114399242    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:02.999 [pool-59-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006836305403690006
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057557332677942545]
00:09:02.999 [pool-59-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006909928479447075
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005830272114399242]
00:09:02.999 [pool-59-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:175.
00:09:02.999 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
00:09:02.999 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:174 which is executed by 4 tests
-1006630263
00:09:03.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069961623797398
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005895463230011401
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:03.213 [pool-64-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (61 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069961623797398
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005895463230011401]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069961623797398
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005895463230011401    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:03.470 [pool-65-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (73 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00698001994297944
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005885687779287415
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:03.682 [pool-66-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (211 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00698001994297944
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005885687779287415]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00698001994297944
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005885687779287415    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:03.682 [pool-63-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
00:09:03.682 [pool-63-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00698001994297944
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005885687779287415]
00:09:03.682 [pool-63-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:174.
00:09:03.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
00:09:03.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:173 which is executed by 4 tests
-1006630263
00:09:03.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
00:09:03.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:169 which is executed by 4 tests
-1006630263
00:09:04.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006828928811682803
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005750797556637819
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:04.164 [pool-68-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006828928811682803
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005750797556637819]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006828928811682803
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005750797556637819    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:04.502 [pool-69-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (167 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007072578716734328
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005953784327610576
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:04.951 [pool-70-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (448 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007072578716734328
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005953784327610576]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007072578716734328
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005953784327610576    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:04.952 [pool-67-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
00:09:04.952 [pool-67-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007072578716734328
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005953784327610576]
00:09:04.952 [pool-67-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:169.
00:09:04.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
00:09:04.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:168 which is executed by 4 tests
-1006630263
00:09:05.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0067953990565515505
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005727284622828561
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:05.157 [pool-72-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0067953990565515505
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005727284622828561]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0067953990565515505
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005727284622828561    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:05.400 [pool-73-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (68 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007061469210737714
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005942681741227628
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:05.735 [pool-74-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (334 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007061469210737714
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005942681741227628]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007061469210737714
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005942681741227628    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:05.736 [pool-71-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
00:09:05.736 [pool-71-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007061469210737714
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005942681741227628]
00:09:05.737 [pool-71-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:168.
00:09:05.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
00:09:05.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:115 which is executed by 6 tests
-1229025651
00:09:05.881 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070166026984776085
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005915475515963752
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:05.945 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (61 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070166026984776085
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005915475515963752]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070166026984776085
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005915475515963752    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:06.116 [pool-75-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
StorelessBivariateCovariance.java:64: error: missing return statement
    }
    ^
00:09:06.120 [pool-75-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
class StorelessBivariateCovariance {
    private double meanX;

    private double meanY;

    private double n;

    private double covarianceNumerator;

    private boolean biasCorrected;

    public StorelessBivariateCovariance() {
        this(true);
    }

    public StorelessBivariateCovariance(final boolean biasCorrection) {
        meanX = meanY = 0.0;
        n = 0;
        covarianceNumerator = 0.0;
        biasCorrected = biasCorrection;
    }

    public void increment(final double x, final double y) {
        (n)++;
        final double deltaX = x - (meanX);
        final double deltaY = y - (meanY);
        meanX += deltaX / (n);
        meanY += deltaY / (n);
        covarianceNumerator += ((((n) - 1.0) / (n)) * deltaX) * deltaY;
    }

    public double getN() {
        return n;
    }

    public double getResult() throws org.apache.commons.math3.exception.NumberIsTooSmallException {
        if ((n) < 2) {
            throw new org.apache.commons.math3.exception.NumberIsTooSmallException(org.apache.commons.math3.exception.util.LocalizedFormats.INSUFFICIENT_DIMENSION, n, 2, true);
        }
        if (biasCorrected) {
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(18).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectInput("org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.this.biasCorrected",org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.this.biasCorrected);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectInput("org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.this.covarianceNumerator",org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.this.covarianceNumerator);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectInput("org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.this.meanY",org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.this.meanY);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectInput("org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.this.n",org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.this.n);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectInput("org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.this.meanX",org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.this.meanX);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(18).collectionEnds();
            }
            if (runtimeAngelicValue)
                return (covarianceNumerator) / ((n) - 1.0);

        }else {
            return (covarianceNumerator) / (n);
        }
    }
}
00:09:06.120 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
00:09:06.120 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
00:09:06.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:114 which is executed by 6 tests
-1229025651
00:09:06.260 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006890611675067031
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005796311273083951
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:06.327 [pool-78-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006890611675067031
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005796311273083951]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006890611675067031
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005796311273083951    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007055123174894362
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005943280487187992
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:06.562 [pool-79-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (63 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007055123174894362
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005943280487187992]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007055123174894362
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005943280487187992    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006823386385828573
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005749188946624361
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:06.591 [pool-80-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006823386385828573
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005749188946624361]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006823386385828573
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005749188946624361    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:06.592 [pool-77-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007055123174894362
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005943280487187992]
00:09:06.592 [pool-77-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006823386385828573
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005749188946624361]
00:09:06.592 [pool-77-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:114.
00:09:06.592 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
00:09:06.592 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:110 which is executed by 6 tests
-1229025651
00:09:06.732 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00693190804679504
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005845073076600482
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:06.797 [pool-82-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00693190804679504
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005845073076600482]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00693190804679504
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005845073076600482    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006892553383227163
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005793841425827929
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:07.026 [pool-83-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (53 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006892553383227163
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005793841425827929]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006892553383227163
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005793841425827929    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006971353501883651
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005874996953240042
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:07.056 [pool-84-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006971353501883651
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005874996953240042]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006971353501883651
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005874996953240042    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:07.057 [pool-81-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006892553383227163
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005793841425827929]
00:09:07.057 [pool-81-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006971353501883651
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005874996953240042]
00:09:07.057 [pool-81-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:110.
00:09:07.057 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069554488417719745
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005862304482451856
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:07.120 [pool-86-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069554488417719745
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005862304482451856]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069554488417719745
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005862304482451856    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007094529102518046
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005975635263794251
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:07.342 [pool-87-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (55 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007094529102518046
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005975635263794251]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007094529102518046
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005975635263794251    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.NumberIsTooSmallException: insufficient dimension 10,000, must be at least 2
    at org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.getResult(StorelessBivariateCovariance.java:57)
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.getData(StorelessCovariance.java:186)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:191)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:09:07.363 [pool-88-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[insufficient dimension 10,000, must be at least 2]
org.apache.commons.math3.exception.NumberIsTooSmallException: insufficient dimension 10,000, must be at least 2    at org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.getResult(StorelessBivariateCovariance.java:57)
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.getData(StorelessCovariance.java:186)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:191)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:09:07.363 [pool-85-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007094529102518046
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005975635263794251]
00:09:07.363 [pool-85-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): insufficient dimension 10,000, must be at least 2]
00:09:07.363 [pool-85-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:110.
00:09:07.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
00:09:07.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:91 which is executed by 6 tests
-1229025651
00:09:07.503 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
00:09:07.503 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:90 which is executed by 6 tests
-1229025651
00:09:07.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006940577709415182
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005836664571596497
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:07.712 [pool-90-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (67 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006940577709415182
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005836664571596497]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006940577709415182
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005836664571596497    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:08.543 [pool-91-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (658 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007045099323086022
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005928738305826511
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:10.549 [pool-92-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2005 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007045099323086022
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005928738305826511]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007045099323086022
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005928738305826511    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:10.549 [pool-89-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
00:09:10.549 [pool-89-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007045099323086022
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005928738305826511]
00:09:10.549 [pool-89-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:90.
00:09:10.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
00:09:10.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:89 which is executed by 6 tests
-1229025651
00:09:10.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00674009345848487
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005675173964902327
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:10.755 [pool-94-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00674009345848487
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005675173964902327]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00674009345848487
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005675173964902327    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007002949886770719
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058963750995358446
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:17.429 [pool-95-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6504 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007002949886770719
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058963750995358446]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007002949886770719
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058963750995358446    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006978555292198031
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005882131068340823
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:19.486 [pool-96-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2055 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006978555292198031
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005882131068340823]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006978555292198031
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005882131068340823    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:19.487 [pool-93-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007002949886770719
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058963750995358446]
00:09:19.487 [pool-93-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006978555292198031
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005882131068340823]
00:09:19.487 [pool-93-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:89.
00:09:19.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
00:09:19.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:88 which is executed by 6 tests
-1229025651
00:09:19.634 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006827858670546788
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057524959244204055
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:19.700 [pool-98-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006827858670546788
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057524959244204055]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006827858670546788
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057524959244204055    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0071014609770115615
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005971299181840932
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:22.390 [pool-99-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2183 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0071014609770115615
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005971299181840932]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0071014609770115615
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005971299181840932    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006805035690724958
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005735959211362379
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:25.968 [pool-100-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3576 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006805035690724958
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005735959211362379]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006805035690724958
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005735959211362379    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:25.969 [pool-97-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0071014609770115615
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005971299181840932]
00:09:25.969 [pool-97-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006805035690724958
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005735959211362379]
00:09:25.969 [pool-97-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:88.
00:09:25.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
00:09:25.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:87 which is executed by 6 tests
-1229025651
00:09:27.674 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
00:09:27.674 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:86 which is executed by 6 tests
-1229025651
00:09:27.814 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
00:09:27.814 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:85 which is executed by 6 tests
-1229025651
00:09:27.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006936448633792179
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005830802002400569
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:28.019 [pool-102-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006936448633792179
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005830802002400569]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006936448633792179
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005830802002400569    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.NumberIsTooSmallException: insufficient dimension 0, must be at least 2
    at org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.getResult(StorelessBivariateCovariance.java:59)
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.getData(StorelessCovariance.java:186)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:191)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:09:28.646 [pool-103-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (452 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[insufficient dimension 0, must be at least 2]
org.apache.commons.math3.exception.NumberIsTooSmallException: insufficient dimension 0, must be at least 2    at org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.getResult(StorelessBivariateCovariance.java:59)
    at org.apache.commons.math3.stat.correlation.StorelessCovariance.getData(StorelessCovariance.java:186)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:191)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006930471347874989
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00583985983507505
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:34.027 [pool-104-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5380 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006930471347874989
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00583985983507505]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006930471347874989
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00583985983507505    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:34.028 [pool-101-thread-1] DEBUG tests.output - Failing tests with false: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): insufficient dimension 0, must be at least 2]
00:09:34.028 [pool-101-thread-1] DEBUG tests.output - Failing tests with true: 
[testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006930471347874989
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00583985983507505]
00:09:34.028 [pool-101-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:85.
00:09:34.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
00:09:34.029 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RectangularCholeskyDecomposition:171 which is executed by 6 tests
1644006350
00:09:34.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
00:09:34.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:464 which is executed by 74 tests
-1875222545
00:09:34.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
00:09:34.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:461 which is executed by 74 tests
-1875222545
00:09:38.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006858804449692447
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005769166965532939
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:38.956 [pool-106-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006858804449692447
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005769166965532939]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006858804449692447
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005769166965532939    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:39.223 [pool-107-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:09:39.225 [pool-108-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: -0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -0 at index 2
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:109)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(CorrelatedRandomVectorGenerator.java:96)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.<init>(CorrelatedRandomVectorGeneratorTest.java:63)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
00:09:39.239 [pool-109-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[-0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -0 at index 2]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: -0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -0 at index 2    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:109)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(CorrelatedRandomVectorGenerator.java:96)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.<init>(CorrelatedRandomVectorGeneratorTest.java:63)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:39.240 [pool-110-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:09:39.241 [pool-111-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007132725684940625
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006004447188359728
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:39.280 [pool-112-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (38 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007132725684940625
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006004447188359728]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007132725684940625
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006004447188359728    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:39.281 [pool-105-thread-1] DEBUG tests.output - Failing tests with false: 
[testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): -0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -0 at index 2]
00:09:39.281 [pool-105-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007132725684940625
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006004447188359728]
00:09:39.281 [pool-105-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:461.
00:09:39.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
00:09:39.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:460 which is executed by 74 tests
-1875222545
00:09:39.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006842942826647298
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005756480019148484
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:39.508 [pool-114-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (65 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006842942826647298
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005756480019148484]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006842942826647298
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005756480019148484    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:39.768 [pool-115-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:09:39.770 [pool-116-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: -0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -0 at index 2
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:109)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(CorrelatedRandomVectorGenerator.java:96)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.<init>(CorrelatedRandomVectorGeneratorTest.java:63)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
00:09:39.783 [pool-117-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[-0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -0 at index 2]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: -0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -0 at index 2    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:109)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(CorrelatedRandomVectorGenerator.java:96)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.<init>(CorrelatedRandomVectorGeneratorTest.java:63)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:39.784 [pool-118-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:09:39.785 [pool-119-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006933255894554475
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005831792839701187
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:39.825 [pool-120-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006933255894554475
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005831792839701187]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006933255894554475
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005831792839701187    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:39.826 [pool-113-thread-1] DEBUG tests.output - Failing tests with false: 
[testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): -0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -0 at index 2]
00:09:39.826 [pool-113-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006933255894554475
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005831792839701187]
00:09:39.826 [pool-113-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:460.
00:09:39.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
00:09:39.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:459 which is executed by 74 tests
-1875222545
00:09:39.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007009058285688344
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00590154036132131
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:40.055 [pool-122-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (69 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007009058285688344
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00590154036132131]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007009058285688344
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00590154036132131    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:40.296 [pool-123-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:09:40.297 [pool-124-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: -0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -0 at index 2
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:109)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(CorrelatedRandomVectorGenerator.java:96)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.<init>(CorrelatedRandomVectorGeneratorTest.java:63)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
00:09:40.309 [pool-125-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[-0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -0 at index 2]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: -0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -0 at index 2    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:109)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(CorrelatedRandomVectorGenerator.java:96)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.<init>(CorrelatedRandomVectorGeneratorTest.java:63)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:40.311 [pool-126-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:09:40.312 [pool-127-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070800817076893145
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005970040524135126
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:40.352 [pool-128-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070800817076893145
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005970040524135126]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070800817076893145
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005970040524135126    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:40.353 [pool-121-thread-1] DEBUG tests.output - Failing tests with false: 
[testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): -0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value -0 at index 2]
00:09:40.353 [pool-121-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070800817076893145
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005970040524135126]
00:09:40.353 [pool-121-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:459.
00:09:40.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
00:09:40.354 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:458 which is executed by 74 tests
-1875222545
00:09:40.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006876795115702811
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057952307092045095
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:40.576 [pool-130-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006876795115702811
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057952307092045095]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006876795115702811
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057952307092045095    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.01404597899988642>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:40.814 [pool-131-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.01404597899988642>]
java.lang.AssertionError: expected:<0.0> but was:<0.01404597899988642>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:09:46.232 [pool-132-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006935451858507445
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005835841610518311
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:46.276 [pool-133-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006935451858507445
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005835841610518311]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006935451858507445
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005835841610518311    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:46.278 [pool-134-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:09:46.279 [pool-135-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006836091252211319
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057535518239132544
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:46.308 [pool-136-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006836091252211319
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057535518239132544]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006836091252211319
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057535518239132544    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:46.308 [pool-129-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.01404597899988642>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006935451858507445
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005835841610518311]
00:09:46.308 [pool-129-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006836091252211319
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057535518239132544]
00:09:46.308 [pool-129-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:458.
00:09:46.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
00:09:46.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:457 which is executed by 74 tests
-1875222545
00:09:46.474 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
00:09:46.474 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:456 which is executed by 74 tests
-1875222545
00:09:46.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
00:09:46.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:272 which is executed by 79 tests
816641250
00:09:46.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
00:09:46.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:268 which is executed by 79 tests
816641250
00:09:47.022 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
00:09:47.022 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:266 which is executed by 79 tests
816641250
00:09:47.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007175184825090101
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0060442937018209825
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:47.273 [pool-138-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (65 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007175184825090101
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0060442937018209825]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007175184825090101
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0060442937018209825    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:52.834 [pool-137-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:173: error: ')' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                         ^
AbstractRealMatrix.java:173: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:173: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:173: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                ^
AbstractRealMatrix.java:173: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                          ^
AbstractRealMatrix.java:174: error: ')' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:174: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:174: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                         ^
AbstractRealMatrix.java:174: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                             ^
AbstractRealMatrix.java:174: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:176: error: ')' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                         ^
AbstractRealMatrix.java:176: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:176: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:176: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                ^
AbstractRealMatrix.java:176: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                          ^
00:09:57.956 [pool-137-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix extends org.apache.commons.math3.linear.RealLinearOperator implements org.apache.commons.math3.linear.RealMatrix {
    private static final org.apache.commons.math3.linear.RealMatrixFormat DEFAULT_FORMAT = org.apache.commons.math3.linear.RealMatrixFormat.getInstance(java.util.Locale.US);

    static {
        org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.getFormat().setMinimumFractionDigits(1);
    }

    protected AbstractRealMatrix() {
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) {
        if (rowDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(rowDimension);
        }
        if (columnDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(columnDimension);
        }
    }

    public abstract org.apache.commons.math3.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension);

    public abstract org.apache.commons.math3.linear.RealMatrix copy();

    public org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix subtract(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix multiply(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix preMultiply(final org.apache.commons.math3.linear.RealMatrix m) {
        return m.multiply(this);
    }

    public org.apache.commons.math3.linear.RealMatrix power(final int p) {
        if (p < 0) {
            throw new java.lang.IllegalArgumentException("p must be >= 0");
        }
        if (!(isSquare())) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(getRowDimension(), getColumnDimension());
        }
        if (p == 0) {
            return org.apache.commons.math3.linear.MatrixUtils.createRealIdentityMatrix(this.getRowDimension());
        }
        if (p == 1) {
            return this.copy();
        }
        final int power = p - 1;
        final char[] binaryRepresentation = java.lang.Integer.toBinaryString(power).toCharArray();
        final java.util.ArrayList<java.lang.Integer> nonZeroPositions = new java.util.ArrayList<java.lang.Integer>();
        int maxI = -1;
        for (int i = 0; i < (binaryRepresentation.length); ++i) {
            if ((binaryRepresentation[i]) == '1') {
                final int pos = ((binaryRepresentation.length) - i) - 1;
                nonZeroPositions.add(pos);
                if (maxI == (-1)) {
                    maxI = pos;
                }
            }
        }
        org.apache.commons.math3.linear.RealMatrix[] results = new org.apache.commons.math3.linear.RealMatrix[maxI + 1];
        results[0] = this.copy();
        for (int i = 1; i <= maxI; ++i) {
            results[i] = results[(i - 1)].multiply(results[(i - 1)]);
        }
        org.apache.commons.math3.linear.RealMatrix result = this.copy();
        for (java.lang.Integer i : nonZeroPositions) {
            result = result.multiply(results[i]);
        }
        return result;
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.endRow = endRow;
                columnSum = 0;
                maxColSum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                columnSum += org.apache.commons.math3.util.FastMath.abs(value);
                if (row == (endRow)) {
                    maxColSum = org.apache.commons.math3.util.FastMath.max(maxColSum, columnSum);
                    boolean spoonDefaultValue = false;
                    try {
                        spoonDefaultValue = true;
                    } catch (java.lang.Exception __NopolProcessorException) {
                    }
                    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                    if (fr.inria.lille.commons.trace.RuntimeValues.instance(30).isEnabled()) {
                        fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectionStarts();
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("column",column);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("row",row);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectInput("value",value);} catch (Exception ex1) {ex1.printStackTrace();};
                        fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectOutput(runtimeAngelicValue);
                        fr.inria.lille.commons.trace.RuntimeValues.instance(30).collectionEnds();
                    }
                    if (runtimeAngelicValue)
                        columnSum = 0;

                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return org.apache.commons.math3.util.FastMath.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException {
        org.apache.commons.math3.util.MathUtils.checkNotNull(subMatrix);
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_ROW);
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_COLUMN);
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getRowMatrix(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getColumnMatrix(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math3.linear.RealVector getRowVector(final int row) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math3.linear.RealVector getColumnVector(final int column) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column);

    public abstract void setEntry(int row, int column, double value);

    public void addToEntry(int row, int column, double increment) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) + increment));
    }

    public void multiplyEntry(int row, int column, double factor) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) * factor));
    }

    public org.apache.commons.math3.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Override
    public abstract int getRowDimension();

    @java.lang.Override
    public abstract int getColumnDimension();

    public double getTrace() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    @java.lang.Override
    public org.apache.commons.math3.linear.RealVector operate(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(operate(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealVector preMultiply(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(preMultiply(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Override
    public java.lang.String toString() {
        final java.lang.StringBuilder res = new java.lang.StringBuilder();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName);
        res.append(org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.format(this));
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math3.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math3.linear.RealMatrix m = ((org.apache.commons.math3.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math3.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
00:09:57.957 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
00:09:57.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
00:09:57.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:265 which is executed by 79 tests
816641250
00:09:58.175 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006878477835223564
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005794156840039609
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:09:58.243 [pool-140-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006878477835223564
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005794156840039609]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006878477835223564
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005794156840039609    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:09:59.771 [pool-139-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:172: error: ')' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                         ^
AbstractRealMatrix.java:172: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:172: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:172: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                ^
AbstractRealMatrix.java:172: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                          ^
AbstractRealMatrix.java:173: error: ')' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:173: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:173: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                         ^
AbstractRealMatrix.java:173: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                             ^
AbstractRealMatrix.java:173: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:175: error: ')' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                         ^
AbstractRealMatrix.java:175: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:175: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:175: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                ^
AbstractRealMatrix.java:175: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                          ^
00:09:59.938 [pool-139-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix extends org.apache.commons.math3.linear.RealLinearOperator implements org.apache.commons.math3.linear.RealMatrix {
    private static final org.apache.commons.math3.linear.RealMatrixFormat DEFAULT_FORMAT = org.apache.commons.math3.linear.RealMatrixFormat.getInstance(java.util.Locale.US);

    static {
        org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.getFormat().setMinimumFractionDigits(1);
    }

    protected AbstractRealMatrix() {
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) {
        if (rowDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(rowDimension);
        }
        if (columnDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(columnDimension);
        }
    }

    public abstract org.apache.commons.math3.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension);

    public abstract org.apache.commons.math3.linear.RealMatrix copy();

    public org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix subtract(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix multiply(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix preMultiply(final org.apache.commons.math3.linear.RealMatrix m) {
        return m.multiply(this);
    }

    public org.apache.commons.math3.linear.RealMatrix power(final int p) {
        if (p < 0) {
            throw new java.lang.IllegalArgumentException("p must be >= 0");
        }
        if (!(isSquare())) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(getRowDimension(), getColumnDimension());
        }
        if (p == 0) {
            return org.apache.commons.math3.linear.MatrixUtils.createRealIdentityMatrix(this.getRowDimension());
        }
        if (p == 1) {
            return this.copy();
        }
        final int power = p - 1;
        final char[] binaryRepresentation = java.lang.Integer.toBinaryString(power).toCharArray();
        final java.util.ArrayList<java.lang.Integer> nonZeroPositions = new java.util.ArrayList<java.lang.Integer>();
        int maxI = -1;
        for (int i = 0; i < (binaryRepresentation.length); ++i) {
            if ((binaryRepresentation[i]) == '1') {
                final int pos = ((binaryRepresentation.length) - i) - 1;
                nonZeroPositions.add(pos);
                if (maxI == (-1)) {
                    maxI = pos;
                }
            }
        }
        org.apache.commons.math3.linear.RealMatrix[] results = new org.apache.commons.math3.linear.RealMatrix[maxI + 1];
        results[0] = this.copy();
        for (int i = 1; i <= maxI; ++i) {
            results[i] = results[(i - 1)].multiply(results[(i - 1)]);
        }
        org.apache.commons.math3.linear.RealMatrix result = this.copy();
        for (java.lang.Integer i : nonZeroPositions) {
            result = result.multiply(results[i]);
        }
        return result;
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.endRow = endRow;
                columnSum = 0;
                maxColSum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                columnSum += org.apache.commons.math3.util.FastMath.abs(value);
                if (row == (endRow)) {
                    boolean spoonDefaultValue = false;
                    try {
                        spoonDefaultValue = true;
                    } catch (java.lang.Exception __NopolProcessorException) {
                    }
                    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                    if (fr.inria.lille.commons.trace.RuntimeValues.instance(31).isEnabled()) {
                        fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectionStarts();
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("column",column);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("row",row);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectInput("value",value);} catch (Exception ex1) {ex1.printStackTrace();};
                        fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectOutput(runtimeAngelicValue);
                        fr.inria.lille.commons.trace.RuntimeValues.instance(31).collectionEnds();
                    }
                    if (runtimeAngelicValue)
                        maxColSum = org.apache.commons.math3.util.FastMath.max(maxColSum, columnSum);

                    columnSum = 0;
                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return org.apache.commons.math3.util.FastMath.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException {
        org.apache.commons.math3.util.MathUtils.checkNotNull(subMatrix);
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_ROW);
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_COLUMN);
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getRowMatrix(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getColumnMatrix(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math3.linear.RealVector getRowVector(final int row) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math3.linear.RealVector getColumnVector(final int column) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column);

    public abstract void setEntry(int row, int column, double value);

    public void addToEntry(int row, int column, double increment) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) + increment));
    }

    public void multiplyEntry(int row, int column, double factor) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) * factor));
    }

    public org.apache.commons.math3.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Override
    public abstract int getRowDimension();

    @java.lang.Override
    public abstract int getColumnDimension();

    public double getTrace() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    @java.lang.Override
    public org.apache.commons.math3.linear.RealVector operate(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(operate(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealVector preMultiply(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(preMultiply(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Override
    public java.lang.String toString() {
        final java.lang.StringBuilder res = new java.lang.StringBuilder();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName);
        res.append(org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.format(this));
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math3.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math3.linear.RealMatrix m = ((org.apache.commons.math3.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math3.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
00:09:59.939 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
00:09:59.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
00:09:59.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:264 which is executed by 79 tests
816641250
00:10:01.470 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006972659193245356
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866997707532244
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:01.538 [pool-142-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006972659193245356
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866997707532244]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006972659193245356
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866997707532244    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:03.181 [pool-141-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:170: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:170: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:170: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:170: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:170: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:171: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                  ^
AbstractRealMatrix.java:171: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:171: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:171: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                         ^
AbstractRealMatrix.java:171: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                ^
AbstractRealMatrix.java:172: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:172: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:172: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:172: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:172: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                      ^
00:10:03.361 [pool-141-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix extends org.apache.commons.math3.linear.RealLinearOperator implements org.apache.commons.math3.linear.RealMatrix {
    private static final org.apache.commons.math3.linear.RealMatrixFormat DEFAULT_FORMAT = org.apache.commons.math3.linear.RealMatrixFormat.getInstance(java.util.Locale.US);

    static {
        org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.getFormat().setMinimumFractionDigits(1);
    }

    protected AbstractRealMatrix() {
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) {
        if (rowDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(rowDimension);
        }
        if (columnDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(columnDimension);
        }
    }

    public abstract org.apache.commons.math3.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension);

    public abstract org.apache.commons.math3.linear.RealMatrix copy();

    public org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix subtract(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix multiply(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix preMultiply(final org.apache.commons.math3.linear.RealMatrix m) {
        return m.multiply(this);
    }

    public org.apache.commons.math3.linear.RealMatrix power(final int p) {
        if (p < 0) {
            throw new java.lang.IllegalArgumentException("p must be >= 0");
        }
        if (!(isSquare())) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(getRowDimension(), getColumnDimension());
        }
        if (p == 0) {
            return org.apache.commons.math3.linear.MatrixUtils.createRealIdentityMatrix(this.getRowDimension());
        }
        if (p == 1) {
            return this.copy();
        }
        final int power = p - 1;
        final char[] binaryRepresentation = java.lang.Integer.toBinaryString(power).toCharArray();
        final java.util.ArrayList<java.lang.Integer> nonZeroPositions = new java.util.ArrayList<java.lang.Integer>();
        int maxI = -1;
        for (int i = 0; i < (binaryRepresentation.length); ++i) {
            if ((binaryRepresentation[i]) == '1') {
                final int pos = ((binaryRepresentation.length) - i) - 1;
                nonZeroPositions.add(pos);
                if (maxI == (-1)) {
                    maxI = pos;
                }
            }
        }
        org.apache.commons.math3.linear.RealMatrix[] results = new org.apache.commons.math3.linear.RealMatrix[maxI + 1];
        results[0] = this.copy();
        for (int i = 1; i <= maxI; ++i) {
            results[i] = results[(i - 1)].multiply(results[(i - 1)]);
        }
        org.apache.commons.math3.linear.RealMatrix result = this.copy();
        for (java.lang.Integer i : nonZeroPositions) {
            result = result.multiply(results[i]);
        }
        return result;
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.endRow = endRow;
                columnSum = 0;
                maxColSum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                columnSum += org.apache.commons.math3.util.FastMath.abs(value);
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = true;
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(32).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("row == (endRow)",row == (endRow));} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("column",column);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("row",row);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectInput("value",value);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(32).collectionEnds();
                }
                if (runtimeAngelicValue) if (row == (endRow)) {
                    maxColSum = org.apache.commons.math3.util.FastMath.max(maxColSum, columnSum);
                    columnSum = 0;
                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return org.apache.commons.math3.util.FastMath.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException {
        org.apache.commons.math3.util.MathUtils.checkNotNull(subMatrix);
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_ROW);
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_COLUMN);
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getRowMatrix(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getColumnMatrix(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math3.linear.RealVector getRowVector(final int row) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math3.linear.RealVector getColumnVector(final int column) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column);

    public abstract void setEntry(int row, int column, double value);

    public void addToEntry(int row, int column, double increment) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) + increment));
    }

    public void multiplyEntry(int row, int column, double factor) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) * factor));
    }

    public org.apache.commons.math3.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Override
    public abstract int getRowDimension();

    @java.lang.Override
    public abstract int getColumnDimension();

    public double getTrace() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    @java.lang.Override
    public org.apache.commons.math3.linear.RealVector operate(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(operate(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealVector preMultiply(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(preMultiply(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Override
    public java.lang.String toString() {
        final java.lang.StringBuilder res = new java.lang.StringBuilder();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName);
        res.append(org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.format(this));
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math3.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math3.linear.RealMatrix m = ((org.apache.commons.math3.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math3.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
00:10:03.361 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
00:10:03.361 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007036899043242222
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005919380263816871
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:03.427 [pool-144-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007036899043242222
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005919380263816871]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007036899043242222
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005919380263816871    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:04.845 [pool-143-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:170: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:170: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:170: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:170: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:170: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:171: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                  ^
AbstractRealMatrix.java:171: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:171: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:171: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                         ^
AbstractRealMatrix.java:171: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                ^
AbstractRealMatrix.java:172: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:172: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:172: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:172: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:172: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                      ^
00:10:06.260 [pool-143-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix extends org.apache.commons.math3.linear.RealLinearOperator implements org.apache.commons.math3.linear.RealMatrix {
    private static final org.apache.commons.math3.linear.RealMatrixFormat DEFAULT_FORMAT = org.apache.commons.math3.linear.RealMatrixFormat.getInstance(java.util.Locale.US);

    static {
        org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.getFormat().setMinimumFractionDigits(1);
    }

    protected AbstractRealMatrix() {
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) {
        if (rowDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(rowDimension);
        }
        if (columnDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(columnDimension);
        }
    }

    public abstract org.apache.commons.math3.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension);

    public abstract org.apache.commons.math3.linear.RealMatrix copy();

    public org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix subtract(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix multiply(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix preMultiply(final org.apache.commons.math3.linear.RealMatrix m) {
        return m.multiply(this);
    }

    public org.apache.commons.math3.linear.RealMatrix power(final int p) {
        if (p < 0) {
            throw new java.lang.IllegalArgumentException("p must be >= 0");
        }
        if (!(isSquare())) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(getRowDimension(), getColumnDimension());
        }
        if (p == 0) {
            return org.apache.commons.math3.linear.MatrixUtils.createRealIdentityMatrix(this.getRowDimension());
        }
        if (p == 1) {
            return this.copy();
        }
        final int power = p - 1;
        final char[] binaryRepresentation = java.lang.Integer.toBinaryString(power).toCharArray();
        final java.util.ArrayList<java.lang.Integer> nonZeroPositions = new java.util.ArrayList<java.lang.Integer>();
        int maxI = -1;
        for (int i = 0; i < (binaryRepresentation.length); ++i) {
            if ((binaryRepresentation[i]) == '1') {
                final int pos = ((binaryRepresentation.length) - i) - 1;
                nonZeroPositions.add(pos);
                if (maxI == (-1)) {
                    maxI = pos;
                }
            }
        }
        org.apache.commons.math3.linear.RealMatrix[] results = new org.apache.commons.math3.linear.RealMatrix[maxI + 1];
        results[0] = this.copy();
        for (int i = 1; i <= maxI; ++i) {
            results[i] = results[(i - 1)].multiply(results[(i - 1)]);
        }
        org.apache.commons.math3.linear.RealMatrix result = this.copy();
        for (java.lang.Integer i : nonZeroPositions) {
            result = result.multiply(results[i]);
        }
        return result;
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.endRow = endRow;
                columnSum = 0;
                maxColSum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                columnSum += org.apache.commons.math3.util.FastMath.abs(value);
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = row == (endRow);
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(33).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("row == (endRow)",row == (endRow));} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("column",column);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("row",row);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectInput("value",value);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(33).collectionEnds();
                }
                if (runtimeAngelicValue) {
                    maxColSum = org.apache.commons.math3.util.FastMath.max(maxColSum, columnSum);
                    columnSum = 0;
                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return org.apache.commons.math3.util.FastMath.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException {
        org.apache.commons.math3.util.MathUtils.checkNotNull(subMatrix);
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_ROW);
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_COLUMN);
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getRowMatrix(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getColumnMatrix(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math3.linear.RealVector getRowVector(final int row) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math3.linear.RealVector getColumnVector(final int column) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column);

    public abstract void setEntry(int row, int column, double value);

    public void addToEntry(int row, int column, double increment) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) + increment));
    }

    public void multiplyEntry(int row, int column, double factor) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) * factor));
    }

    public org.apache.commons.math3.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Override
    public abstract int getRowDimension();

    @java.lang.Override
    public abstract int getColumnDimension();

    public double getTrace() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    @java.lang.Override
    public org.apache.commons.math3.linear.RealVector operate(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(operate(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealVector preMultiply(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(preMultiply(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Override
    public java.lang.String toString() {
        final java.lang.StringBuilder res = new java.lang.StringBuilder();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName);
        res.append(org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.format(this));
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math3.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math3.linear.RealMatrix m = ((org.apache.commons.math3.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math3.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
00:10:06.261 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
00:10:06.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
00:10:06.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:263 which is executed by 79 tests
816641250
00:10:06.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007086661581528666
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005964332562202035
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:06.518 [pool-146-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007086661581528666
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005964332562202035]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007086661581528666
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005964332562202035    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:08.069 [pool-145-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:170: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:170: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:170: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:170: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:170: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:171: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                  ^
AbstractRealMatrix.java:171: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:171: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:171: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                         ^
AbstractRealMatrix.java:171: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                ^
AbstractRealMatrix.java:173: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:173: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:173: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:173: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:173: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                      ^
00:10:09.485 [pool-145-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix extends org.apache.commons.math3.linear.RealLinearOperator implements org.apache.commons.math3.linear.RealMatrix {
    private static final org.apache.commons.math3.linear.RealMatrixFormat DEFAULT_FORMAT = org.apache.commons.math3.linear.RealMatrixFormat.getInstance(java.util.Locale.US);

    static {
        org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.getFormat().setMinimumFractionDigits(1);
    }

    protected AbstractRealMatrix() {
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) {
        if (rowDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(rowDimension);
        }
        if (columnDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(columnDimension);
        }
    }

    public abstract org.apache.commons.math3.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension);

    public abstract org.apache.commons.math3.linear.RealMatrix copy();

    public org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix subtract(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix multiply(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix preMultiply(final org.apache.commons.math3.linear.RealMatrix m) {
        return m.multiply(this);
    }

    public org.apache.commons.math3.linear.RealMatrix power(final int p) {
        if (p < 0) {
            throw new java.lang.IllegalArgumentException("p must be >= 0");
        }
        if (!(isSquare())) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(getRowDimension(), getColumnDimension());
        }
        if (p == 0) {
            return org.apache.commons.math3.linear.MatrixUtils.createRealIdentityMatrix(this.getRowDimension());
        }
        if (p == 1) {
            return this.copy();
        }
        final int power = p - 1;
        final char[] binaryRepresentation = java.lang.Integer.toBinaryString(power).toCharArray();
        final java.util.ArrayList<java.lang.Integer> nonZeroPositions = new java.util.ArrayList<java.lang.Integer>();
        int maxI = -1;
        for (int i = 0; i < (binaryRepresentation.length); ++i) {
            if ((binaryRepresentation[i]) == '1') {
                final int pos = ((binaryRepresentation.length) - i) - 1;
                nonZeroPositions.add(pos);
                if (maxI == (-1)) {
                    maxI = pos;
                }
            }
        }
        org.apache.commons.math3.linear.RealMatrix[] results = new org.apache.commons.math3.linear.RealMatrix[maxI + 1];
        results[0] = this.copy();
        for (int i = 1; i <= maxI; ++i) {
            results[i] = results[(i - 1)].multiply(results[(i - 1)]);
        }
        org.apache.commons.math3.linear.RealMatrix result = this.copy();
        for (java.lang.Integer i : nonZeroPositions) {
            result = result.multiply(results[i]);
        }
        return result;
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.endRow = endRow;
                columnSum = 0;
                maxColSum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = true;
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(34).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("column",column);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("row",row);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectInput("value",value);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(34).collectionEnds();
                }
                if (runtimeAngelicValue)
                    columnSum += org.apache.commons.math3.util.FastMath.abs(value);

                if (row == (endRow)) {
                    maxColSum = org.apache.commons.math3.util.FastMath.max(maxColSum, columnSum);
                    columnSum = 0;
                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return org.apache.commons.math3.util.FastMath.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException {
        org.apache.commons.math3.util.MathUtils.checkNotNull(subMatrix);
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_ROW);
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_COLUMN);
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getRowMatrix(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getColumnMatrix(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math3.linear.RealVector getRowVector(final int row) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math3.linear.RealVector getColumnVector(final int column) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column);

    public abstract void setEntry(int row, int column, double value);

    public void addToEntry(int row, int column, double increment) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) + increment));
    }

    public void multiplyEntry(int row, int column, double factor) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) * factor));
    }

    public org.apache.commons.math3.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Override
    public abstract int getRowDimension();

    @java.lang.Override
    public abstract int getColumnDimension();

    public double getTrace() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    @java.lang.Override
    public org.apache.commons.math3.linear.RealVector operate(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(operate(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealVector preMultiply(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(preMultiply(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Override
    public java.lang.String toString() {
        final java.lang.StringBuilder res = new java.lang.StringBuilder();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName);
        res.append(org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.format(this));
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math3.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math3.linear.RealMatrix m = ((org.apache.commons.math3.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math3.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
00:10:09.486 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
00:10:09.486 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
00:10:09.486 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:259 which is executed by 79 tests
816641250
00:10:09.678 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
00:10:09.678 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:258 which is executed by 79 tests
816641250
00:10:09.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006934473778483196
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005839471204479602
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:09.934 [pool-148-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (71 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006934473778483196
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005839471204479602]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006934473778483196
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005839471204479602    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:11.347 [pool-147-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:165: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:165: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:165: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:165: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:165: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:167: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                  ^
AbstractRealMatrix.java:167: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:167: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:167: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                         ^
AbstractRealMatrix.java:167: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                ^
AbstractRealMatrix.java:169: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:169: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:169: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:169: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:169: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                      ^
00:10:11.509 [pool-147-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix extends org.apache.commons.math3.linear.RealLinearOperator implements org.apache.commons.math3.linear.RealMatrix {
    private static final org.apache.commons.math3.linear.RealMatrixFormat DEFAULT_FORMAT = org.apache.commons.math3.linear.RealMatrixFormat.getInstance(java.util.Locale.US);

    static {
        org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.getFormat().setMinimumFractionDigits(1);
    }

    protected AbstractRealMatrix() {
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) {
        if (rowDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(rowDimension);
        }
        if (columnDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(columnDimension);
        }
    }

    public abstract org.apache.commons.math3.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension);

    public abstract org.apache.commons.math3.linear.RealMatrix copy();

    public org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix subtract(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix multiply(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix preMultiply(final org.apache.commons.math3.linear.RealMatrix m) {
        return m.multiply(this);
    }

    public org.apache.commons.math3.linear.RealMatrix power(final int p) {
        if (p < 0) {
            throw new java.lang.IllegalArgumentException("p must be >= 0");
        }
        if (!(isSquare())) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(getRowDimension(), getColumnDimension());
        }
        if (p == 0) {
            return org.apache.commons.math3.linear.MatrixUtils.createRealIdentityMatrix(this.getRowDimension());
        }
        if (p == 1) {
            return this.copy();
        }
        final int power = p - 1;
        final char[] binaryRepresentation = java.lang.Integer.toBinaryString(power).toCharArray();
        final java.util.ArrayList<java.lang.Integer> nonZeroPositions = new java.util.ArrayList<java.lang.Integer>();
        int maxI = -1;
        for (int i = 0; i < (binaryRepresentation.length); ++i) {
            if ((binaryRepresentation[i]) == '1') {
                final int pos = ((binaryRepresentation.length) - i) - 1;
                nonZeroPositions.add(pos);
                if (maxI == (-1)) {
                    maxI = pos;
                }
            }
        }
        org.apache.commons.math3.linear.RealMatrix[] results = new org.apache.commons.math3.linear.RealMatrix[maxI + 1];
        results[0] = this.copy();
        for (int i = 1; i <= maxI; ++i) {
            results[i] = results[(i - 1)].multiply(results[(i - 1)]);
        }
        org.apache.commons.math3.linear.RealMatrix result = this.copy();
        for (java.lang.Integer i : nonZeroPositions) {
            result = result.multiply(results[i]);
        }
        return result;
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.endRow = endRow;
                columnSum = 0;
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = true;
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(35).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("endColumn",endColumn);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("startRow",startRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("columns",columns);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("startColumn",startColumn);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("endRow",endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectInput("rows",rows);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(35).collectionEnds();
                }
                if (runtimeAngelicValue)
                    maxColSum = 0;

            }

            public void visit(final int row, final int column, final double value) {
                columnSum += org.apache.commons.math3.util.FastMath.abs(value);
                if (row == (endRow)) {
                    maxColSum = org.apache.commons.math3.util.FastMath.max(maxColSum, columnSum);
                    columnSum = 0;
                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return org.apache.commons.math3.util.FastMath.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException {
        org.apache.commons.math3.util.MathUtils.checkNotNull(subMatrix);
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_ROW);
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_COLUMN);
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getRowMatrix(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getColumnMatrix(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math3.linear.RealVector getRowVector(final int row) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math3.linear.RealVector getColumnVector(final int column) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column);

    public abstract void setEntry(int row, int column, double value);

    public void addToEntry(int row, int column, double increment) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) + increment));
    }

    public void multiplyEntry(int row, int column, double factor) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) * factor));
    }

    public org.apache.commons.math3.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Override
    public abstract int getRowDimension();

    @java.lang.Override
    public abstract int getColumnDimension();

    public double getTrace() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    @java.lang.Override
    public org.apache.commons.math3.linear.RealVector operate(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(operate(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealVector preMultiply(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(preMultiply(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Override
    public java.lang.String toString() {
        final java.lang.StringBuilder res = new java.lang.StringBuilder();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName);
        res.append(org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.format(this));
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math3.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math3.linear.RealMatrix m = ((org.apache.commons.math3.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math3.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
00:10:11.510 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
00:10:11.510 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
00:10:11.510 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:257 which is executed by 79 tests
816641250
00:10:12.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006846805263078714
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005767504836267199
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:12.888 [pool-150-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006846805263078714
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005767504836267199]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006846805263078714
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005767504836267199    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:13.227 [pool-149-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:164: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:164: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:164: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:164: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:164: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:166: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                  ^
AbstractRealMatrix.java:166: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:166: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:166: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                         ^
AbstractRealMatrix.java:166: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                ^
AbstractRealMatrix.java:168: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:168: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:168: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:168: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:168: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                      ^
00:10:14.554 [pool-149-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix extends org.apache.commons.math3.linear.RealLinearOperator implements org.apache.commons.math3.linear.RealMatrix {
    private static final org.apache.commons.math3.linear.RealMatrixFormat DEFAULT_FORMAT = org.apache.commons.math3.linear.RealMatrixFormat.getInstance(java.util.Locale.US);

    static {
        org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.getFormat().setMinimumFractionDigits(1);
    }

    protected AbstractRealMatrix() {
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) {
        if (rowDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(rowDimension);
        }
        if (columnDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(columnDimension);
        }
    }

    public abstract org.apache.commons.math3.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension);

    public abstract org.apache.commons.math3.linear.RealMatrix copy();

    public org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix subtract(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix multiply(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix preMultiply(final org.apache.commons.math3.linear.RealMatrix m) {
        return m.multiply(this);
    }

    public org.apache.commons.math3.linear.RealMatrix power(final int p) {
        if (p < 0) {
            throw new java.lang.IllegalArgumentException("p must be >= 0");
        }
        if (!(isSquare())) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(getRowDimension(), getColumnDimension());
        }
        if (p == 0) {
            return org.apache.commons.math3.linear.MatrixUtils.createRealIdentityMatrix(this.getRowDimension());
        }
        if (p == 1) {
            return this.copy();
        }
        final int power = p - 1;
        final char[] binaryRepresentation = java.lang.Integer.toBinaryString(power).toCharArray();
        final java.util.ArrayList<java.lang.Integer> nonZeroPositions = new java.util.ArrayList<java.lang.Integer>();
        int maxI = -1;
        for (int i = 0; i < (binaryRepresentation.length); ++i) {
            if ((binaryRepresentation[i]) == '1') {
                final int pos = ((binaryRepresentation.length) - i) - 1;
                nonZeroPositions.add(pos);
                if (maxI == (-1)) {
                    maxI = pos;
                }
            }
        }
        org.apache.commons.math3.linear.RealMatrix[] results = new org.apache.commons.math3.linear.RealMatrix[maxI + 1];
        results[0] = this.copy();
        for (int i = 1; i <= maxI; ++i) {
            results[i] = results[(i - 1)].multiply(results[(i - 1)]);
        }
        org.apache.commons.math3.linear.RealMatrix result = this.copy();
        for (java.lang.Integer i : nonZeroPositions) {
            result = result.multiply(results[i]);
        }
        return result;
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.endRow = endRow;
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = true;
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(36).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("endColumn",endColumn);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("startRow",startRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("columns",columns);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("startColumn",startColumn);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("endRow",endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectInput("rows",rows);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(36).collectionEnds();
                }
                if (runtimeAngelicValue)
                    columnSum = 0;

                maxColSum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                columnSum += org.apache.commons.math3.util.FastMath.abs(value);
                if (row == (endRow)) {
                    maxColSum = org.apache.commons.math3.util.FastMath.max(maxColSum, columnSum);
                    columnSum = 0;
                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return org.apache.commons.math3.util.FastMath.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException {
        org.apache.commons.math3.util.MathUtils.checkNotNull(subMatrix);
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_ROW);
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_COLUMN);
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getRowMatrix(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getColumnMatrix(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math3.linear.RealVector getRowVector(final int row) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math3.linear.RealVector getColumnVector(final int column) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column);

    public abstract void setEntry(int row, int column, double value);

    public void addToEntry(int row, int column, double increment) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) + increment));
    }

    public void multiplyEntry(int row, int column, double factor) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) * factor));
    }

    public org.apache.commons.math3.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Override
    public abstract int getRowDimension();

    @java.lang.Override
    public abstract int getColumnDimension();

    public double getTrace() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    @java.lang.Override
    public org.apache.commons.math3.linear.RealVector operate(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(operate(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealVector preMultiply(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(preMultiply(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Override
    public java.lang.String toString() {
        final java.lang.StringBuilder res = new java.lang.StringBuilder();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName);
        res.append(org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.format(this));
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math3.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math3.linear.RealMatrix m = ((org.apache.commons.math3.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math3.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
00:10:14.554 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
00:10:14.554 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
00:10:14.555 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:256 which is executed by 79 tests
816641250
00:10:14.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007150850807861129
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006014493214101406
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:14.788 [pool-152-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007150850807861129
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006014493214101406]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007150850807861129
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006014493214101406    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:16.422 [pool-151-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:163: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:163: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:163: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:163: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:163: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:165: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                  ^
AbstractRealMatrix.java:165: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:165: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:165: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                         ^
AbstractRealMatrix.java:165: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                ^
AbstractRealMatrix.java:167: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:167: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:167: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:167: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:167: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                      ^
00:10:17.831 [pool-151-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix extends org.apache.commons.math3.linear.RealLinearOperator implements org.apache.commons.math3.linear.RealMatrix {
    private static final org.apache.commons.math3.linear.RealMatrixFormat DEFAULT_FORMAT = org.apache.commons.math3.linear.RealMatrixFormat.getInstance(java.util.Locale.US);

    static {
        org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.getFormat().setMinimumFractionDigits(1);
    }

    protected AbstractRealMatrix() {
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) {
        if (rowDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(rowDimension);
        }
        if (columnDimension < 1) {
            throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(columnDimension);
        }
    }

    public abstract org.apache.commons.math3.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension);

    public abstract org.apache.commons.math3.linear.RealMatrix copy();

    public org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix subtract(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix multiply(final org.apache.commons.math3.linear.RealMatrix m) {
        org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealMatrix preMultiply(final org.apache.commons.math3.linear.RealMatrix m) {
        return m.multiply(this);
    }

    public org.apache.commons.math3.linear.RealMatrix power(final int p) {
        if (p < 0) {
            throw new java.lang.IllegalArgumentException("p must be >= 0");
        }
        if (!(isSquare())) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(getRowDimension(), getColumnDimension());
        }
        if (p == 0) {
            return org.apache.commons.math3.linear.MatrixUtils.createRealIdentityMatrix(this.getRowDimension());
        }
        if (p == 1) {
            return this.copy();
        }
        final int power = p - 1;
        final char[] binaryRepresentation = java.lang.Integer.toBinaryString(power).toCharArray();
        final java.util.ArrayList<java.lang.Integer> nonZeroPositions = new java.util.ArrayList<java.lang.Integer>();
        int maxI = -1;
        for (int i = 0; i < (binaryRepresentation.length); ++i) {
            if ((binaryRepresentation[i]) == '1') {
                final int pos = ((binaryRepresentation.length) - i) - 1;
                nonZeroPositions.add(pos);
                if (maxI == (-1)) {
                    maxI = pos;
                }
            }
        }
        org.apache.commons.math3.linear.RealMatrix[] results = new org.apache.commons.math3.linear.RealMatrix[maxI + 1];
        results[0] = this.copy();
        for (int i = 1; i <= maxI; ++i) {
            results[i] = results[(i - 1)].multiply(results[(i - 1)]);
        }
        org.apache.commons.math3.linear.RealMatrix result = this.copy();
        for (java.lang.Integer i : nonZeroPositions) {
            result = result.multiply(results[i]);
        }
        return result;
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = true;
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(37).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("endColumn",endColumn);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("startRow",startRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math3.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("columns",columns);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("startColumn",startColumn);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("endRow",endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectInput("rows",rows);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(37).collectionEnds();
                }
                if (runtimeAngelicValue)
                    this.endRow = endRow;

                columnSum = 0;
                maxColSum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                columnSum += org.apache.commons.math3.util.FastMath.abs(value);
                if (row == (endRow)) {
                    maxColSum = org.apache.commons.math3.util.FastMath.max(maxColSum, columnSum);
                    columnSum = 0;
                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math3.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return org.apache.commons.math3.util.FastMath.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math3.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math3.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException {
        org.apache.commons.math3.util.MathUtils.checkNotNull(subMatrix);
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_ROW);
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.AT_LEAST_ONE_COLUMN);
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getRowMatrix(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math3.linear.RealMatrix getColumnMatrix(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math3.linear.RealMatrix matrix) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math3.linear.RealVector getRowVector(final int row) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math3.linear.RealVector getColumnVector(final int column) {
        return new org.apache.commons.math3.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math3.linear.RealVector vector) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) {
        org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math3.linear.MatrixDimensionMismatchException(array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column);

    public abstract void setEntry(int row, int column, double value);

    public void addToEntry(int row, int column, double increment) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) + increment));
    }

    public void multiplyEntry(int row, int column, double factor) {
        org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, row, column);
        setEntry(row, column, ((getEntry(row, column)) * factor));
    }

    public org.apache.commons.math3.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math3.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Override
    public abstract int getRowDimension();

    @java.lang.Override
    public abstract int getColumnDimension();

    public double getTrace() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math3.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    @java.lang.Override
    public org.apache.commons.math3.linear.RealVector operate(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(operate(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math3.linear.RealVector preMultiply(final org.apache.commons.math3.linear.RealVector v) {
        try {
            return new org.apache.commons.math3.linear.ArrayRealVector(preMultiply(((org.apache.commons.math3.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw new org.apache.commons.math3.exception.DimensionMismatchException(v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math3.linear.ArrayRealVector(out, false);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor) {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Override
    public java.lang.String toString() {
        final java.lang.StringBuilder res = new java.lang.StringBuilder();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName);
        res.append(org.apache.commons.math3.linear.AbstractRealMatrix.DEFAULT_FORMAT.format(this));
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math3.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math3.linear.RealMatrix m = ((org.apache.commons.math3.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math3.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
00:10:17.832 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
00:10:17.832 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
00:10:17.832 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:241 which is executed by 79 tests
816641250
00:10:18.109 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
00:10:18.109 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.GaussianRandomGenerator:44 which is executed by 10 tests
-764342858
00:10:18.245 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
00:10:18.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:158 which is executed by 105 tests
816641250
00:10:19.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
00:10:19.671 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:154 which is executed by 105 tests
816641250
00:10:19.835 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070847996842108105
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059673567427278446
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:19.901 [pool-154-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070847996842108105
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059673567427278446]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070847996842108105
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059673567427278446    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.052330871>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:21.668 [pool-155-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.052330871>]
java.lang.AssertionError: expected:<0.0> but was:<0.052330871>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:10:21.683 [pool-156-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007129820254537583
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005994802261698809
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:21.724 [pool-157-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007129820254537583
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005994802261698809]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007129820254537583
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005994802261698809    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:21.726 [pool-158-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:21.727 [pool-159-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006932625004028874
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005838854606429521
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:21.755 [pool-160-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006932625004028874
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005838854606429521]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006932625004028874
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005838854606429521    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:21.756 [pool-153-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.052330871>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007129820254537583
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005994802261698809]
00:10:21.757 [pool-153-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006932625004028874
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005838854606429521]
00:10:21.757 [pool-153-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:154.
00:10:21.757 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
00:10:21.757 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:152 which is executed by 105 tests
816641250
00:10:21.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007104353743285658
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005980398645112325
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:21.988 [pool-162-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007104353743285658
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005980398645112325]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007104353743285658
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005980398645112325    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.052330871>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:23.635 [pool-163-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.052330871>]
java.lang.AssertionError: expected:<0.0> but was:<0.052330871>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:10:23.649 [pool-164-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006944709486493142
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005849692281620677
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:23.691 [pool-165-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006944709486493142
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005849692281620677]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006944709486493142
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005849692281620677    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:23.694 [pool-166-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:23.695 [pool-167-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007026596367037844
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005915261490623545
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:23.724 [pool-168-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007026596367037844
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005915261490623545]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007026596367037844
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005915261490623545    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:23.725 [pool-161-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.052330871>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006944709486493142
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005849692281620677]
00:10:23.725 [pool-161-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007026596367037844
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005915261490623545]
00:10:23.725 [pool-161-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:152.
00:10:23.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
00:10:23.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:151 which is executed by 105 tests
816641250
00:10:23.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007101843398527688
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005985689568099498
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:23.965 [pool-170-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007101843398527688
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005985689568099498]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007101843398527688
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005985689568099498    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.052330871>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:29.521 [pool-171-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.052330871>]
java.lang.AssertionError: expected:<0.0> but was:<0.052330871>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:10:29.543 [pool-172-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007032465581029473
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005920113371914961
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:29.592 [pool-173-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (46 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007032465581029473
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005920113371914961]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007032465581029473
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005920113371914961    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:29.593 [pool-174-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:29.594 [pool-175-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006965341724159138
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058627956453201555
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:29.623 [pool-176-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006965341724159138
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058627956453201555]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006965341724159138
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058627956453201555    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:29.623 [pool-169-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.052330871>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007032465581029473
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005920113371914961]
00:10:29.624 [pool-169-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006965341724159138
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058627956453201555]
00:10:29.624 [pool-169-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:151.
00:10:29.624 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
00:10:29.624 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:150 which is executed by 105 tests
816641250
00:10:29.797 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
00:10:29.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:149 which is executed by 105 tests
816641250
00:10:29.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069942288271064934
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005883740326074078
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:30.028 [pool-178-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069942288271064934
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005883740326074078]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069942288271064934
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005883740326074078    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.052330871>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:31.781 [pool-179-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.052330871>]
java.lang.AssertionError: expected:<0.0> but was:<0.052330871>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:10:31.795 [pool-180-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007110569940654337
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005988551236722992
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:31.838 [pool-181-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (41 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007110569940654337
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005988551236722992]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007110569940654337
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005988551236722992    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:31.840 [pool-182-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:31.840 [pool-183-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006888831997980475
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005798833226776487
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:31.869 [pool-184-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006888831997980475
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005798833226776487]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006888831997980475
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005798833226776487    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:31.870 [pool-177-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.052330871>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007110569940654337
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005988551236722992]
00:10:31.870 [pool-177-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006888831997980475
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005798833226776487]
00:10:31.870 [pool-177-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:149.
00:10:31.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
00:10:31.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:148 which is executed by 105 tests
816641250
00:10:32.047 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068813927462768355
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005792655406199596
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:32.115 [pool-186-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (65 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068813927462768355
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005792655406199596]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068813927462768355
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005792655406199596    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.052330871>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:33.827 [pool-187-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (24 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.052330871>]
java.lang.AssertionError: expected:<0.0> but was:<0.052330871>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:10:33.841 [pool-188-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00707224344233404
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005948330060396781
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:33.883 [pool-189-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00707224344233404
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005948330060396781]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00707224344233404
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005948330060396781    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:33.884 [pool-190-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:33.885 [pool-191-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006866129938421597
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005774578736863182
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:33.914 [pool-192-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006866129938421597
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005774578736863182]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006866129938421597
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005774578736863182    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:33.914 [pool-185-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.052330871>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00707224344233404
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005948330060396781]
00:10:33.914 [pool-185-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006866129938421597
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005774578736863182]
00:10:33.915 [pool-185-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:148.
00:10:33.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
00:10:33.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:147 which is executed by 105 tests
816641250
00:10:34.085 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
00:10:34.085 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:146 which is executed by 105 tests
816641250
00:10:34.248 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
00:10:34.248 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:145 which is executed by 105 tests
816641250
00:10:34.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
00:10:34.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:144 which is executed by 105 tests
816641250
00:10:34.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
00:10:34.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:142 which is executed by 105 tests
816641250
00:10:34.735 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006886990624895507
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005804191738849348
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:34.805 [pool-194-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (67 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006886990624895507
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005804191738849348]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006886990624895507
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005804191738849348    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:36.333 [pool-195-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:36.334 [pool-196-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007115012102387965
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059911377388878854
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:36.375 [pool-197-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007115012102387965
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059911377388878854]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007115012102387965
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059911377388878854    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:36.377 [pool-198-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:36.378 [pool-199-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006995614629335475
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058998237633313974
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:36.407 [pool-200-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006995614629335475
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058998237633313974]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006995614629335475
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058998237633313974    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:36.407 [pool-193-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007115012102387965
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059911377388878854]
00:10:36.407 [pool-193-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006995614629335475
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058998237633313974]
00:10:36.407 [pool-193-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:142.
00:10:36.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
00:10:36.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:81 which is executed by 115 tests
1308483921
00:10:36.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
00:10:36.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:545 which is executed by 131 tests
1308483921
00:10:36.746 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
00:10:36.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:541 which is executed by 131 tests
1308483921
00:10:38.085 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007150074307313317
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006032082984242324
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:38.150 [pool-202-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (61 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007150074307313317
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006032082984242324]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007150074307313317
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006032082984242324    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:38.514 [pool-203-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:38.515 [pool-204-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006925735731695232
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005834336344615588
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:38.560 [pool-205-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (43 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006925735731695232
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005834336344615588]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006925735731695232
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005834336344615588    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:38.561 [pool-206-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:38.562 [pool-207-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007045246214623305
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059387211359693826
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:38.591 [pool-208-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007045246214623305
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059387211359693826]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007045246214623305
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059387211359693826    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:38.591 [pool-201-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006925735731695232
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005834336344615588]
00:10:38.591 [pool-201-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007045246214623305
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059387211359693826]
00:10:38.591 [pool-201-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.MatrixUtils:541.
00:10:38.591 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070236857540317355
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00591204051051113
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:38.658 [pool-210-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070236857540317355
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00591204051051113]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070236857540317355
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00591204051051113    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:38.937 [pool-211-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:38.939 [pool-212-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00690117800767819
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005820428511720375
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:38.982 [pool-213-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (41 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00690117800767819
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005820428511720375]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00690117800767819
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005820428511720375    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.DimensionMismatchException: 4 != 4
    at org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:221)
    at org.apache.commons.math3.linear.AbstractRealMatrix.multiply(AbstractRealMatrix.java:142)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:85)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:10:38.993 [pool-214-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[4 != 4]
org.apache.commons.math3.exception.DimensionMismatchException: 4 != 4    at org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:221)
    at org.apache.commons.math3.linear.AbstractRealMatrix.multiply(AbstractRealMatrix.java:142)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:85)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.exception.DimensionMismatchException: 4 != 4
    at org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:221)
    at org.apache.commons.math3.linear.AbstractRealMatrix.multiply(AbstractRealMatrix.java:142)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:60)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:10:38.995 [pool-215-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[4 != 4]
org.apache.commons.math3.exception.DimensionMismatchException: 4 != 4    at org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:221)
    at org.apache.commons.math3.linear.AbstractRealMatrix.multiply(AbstractRealMatrix.java:142)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:60)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.exception.DimensionMismatchException: 3 != 3
    at org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:221)
    at org.apache.commons.math3.linear.AbstractRealMatrix.multiply(AbstractRealMatrix.java:142)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.<init>(CorrelatedRandomVectorGeneratorTest.java:49)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
00:10:38.997 [pool-216-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[3 != 3]
org.apache.commons.math3.exception.DimensionMismatchException: 3 != 3    at org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:221)
    at org.apache.commons.math3.linear.AbstractRealMatrix.multiply(AbstractRealMatrix.java:142)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.<init>(CorrelatedRandomVectorGeneratorTest.java:49)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)

00:10:38.997 [pool-209-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00690117800767819
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005820428511720375]
00:10:38.997 [pool-209-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 4 != 4, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 4 != 4, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): 3 != 3]
00:10:38.997 [pool-209-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.MatrixUtils:541.
00:10:38.997 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
00:10:38.997 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$5:598 which is executed by 162 tests
816641250
00:10:39.167 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
00:10:39.167 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$5:597 which is executed by 162 tests
816641250
00:10:39.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007095277704506944
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005976243534467818
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:39.399 [pool-218-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007095277704506944
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005976243534467818]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007095277704506944
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005976243534467818    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.052330871>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:44.880 [pool-219-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.052330871>]
java.lang.AssertionError: expected:<0.0> but was:<0.052330871>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:10:44.893 [pool-220-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069285664063811585
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005833340278993558
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:44.934 [pool-221-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069285664063811585
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005833340278993558]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069285664063811585
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005833340278993558    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:44.935 [pool-222-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:44.936 [pool-223-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007116769689035091
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059972796819377245
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:44.965 [pool-224-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007116769689035091
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059972796819377245]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007116769689035091
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059972796819377245    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:44.966 [pool-217-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.052330871>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069285664063811585
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005833340278993558]
00:10:44.966 [pool-217-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007116769689035091
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059972796819377245]
00:10:44.966 [pool-217-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$5:597.
00:10:44.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
00:10:44.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:602 which is executed by 162 tests
816641250
00:10:45.141 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
00:10:45.141 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:592 which is executed by 162 tests
816641250
00:10:45.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006939492650264515
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058484591939593844
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:45.373 [pool-226-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006939492650264515
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058484591939593844]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006939492650264515
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058484591939593844    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.052330871>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:47.060 [pool-227-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.052330871>]
java.lang.AssertionError: expected:<0.0> but was:<0.052330871>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:10:47.074 [pool-228-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006894286688805546
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005816103103288731
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:47.116 [pool-229-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006894286688805546
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005816103103288731]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006894286688805546
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005816103103288731    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:47.118 [pool-230-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:47.119 [pool-231-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006980513806174389
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005875518820147325
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:47.147 [pool-232-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006980513806174389
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005875518820147325]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006980513806174389
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005875518820147325    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:47.148 [pool-225-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.052330871>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006894286688805546
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005816103103288731]
00:10:47.148 [pool-225-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006980513806174389
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005875518820147325]
00:10:47.148 [pool-225-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:592.
00:10:47.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
00:10:47.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:591 which is executed by 162 tests
816641250
00:10:47.338 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
00:10:47.338 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:590 which is executed by 162 tests
816641250
00:10:47.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
00:10:47.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:589 which is executed by 162 tests
816641250
00:10:47.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
00:10:47.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:401 which is executed by 163 tests
-1875222545
00:10:48.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
00:10:48.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:398 which is executed by 163 tests
-1875222545
00:10:49.135 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006948401286581994
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058570447611997626
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:49.208 [pool-234-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (69 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006948401286581994
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058570447611997626]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006948401286581994
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058570447611997626    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.052330871>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:49.431 [pool-235-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.052330871>]
java.lang.AssertionError: expected:<0.0> but was:<0.052330871>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:10:49.442 [pool-236-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007159503919623397
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006034860762441347
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:49.488 [pool-237-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (44 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007159503919623397
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006034860762441347]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007159503919623397
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006034860762441347    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:49.490 [pool-238-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:49.491 [pool-239-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006921826019519793
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005833104130804697
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:49.520 [pool-240-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006921826019519793
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005833104130804697]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006921826019519793
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005833104130804697    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:49.520 [pool-233-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.052330871>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007159503919623397
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006034860762441347]
00:10:49.520 [pool-233-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006921826019519793
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005833104130804697]
00:10:49.520 [pool-233-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:398.
00:10:49.520 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
00:10:49.520 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:397 which is executed by 163 tests
-1875222545
00:10:49.671 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069217250133752906
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058250078888577115
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:49.737 [pool-242-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069217250133752906
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058250078888577115]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069217250133752906
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058250078888577115    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.052330871>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:49.945 [pool-243-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.052330871>]
java.lang.AssertionError: expected:<0.0> but was:<0.052330871>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:10:49.958 [pool-244-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938357442075792
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005844941472033643
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:50.001 [pool-245-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (41 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938357442075792
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005844941472033643]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938357442075792
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005844941472033643    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:50.003 [pool-246-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:50.004 [pool-247-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069923725466633155
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00588959767750609
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:50.032 [pool-248-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069923725466633155
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00588959767750609]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069923725466633155
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00588959767750609    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:50.033 [pool-241-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.052330871>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938357442075792
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005844941472033643]
00:10:50.033 [pool-241-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069923725466633155
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00588959767750609]
00:10:50.033 [pool-241-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:397.
00:10:50.033 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
00:10:50.033 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:396 which is executed by 163 tests
-1875222545
00:10:50.183 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
00:10:50.184 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:395 which is executed by 163 tests
-1875222545
00:10:50.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006851128901709554
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005769335355097882
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:50.401 [pool-250-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006851128901709554
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005769335355097882]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006851128901709554
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005769335355097882    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.052330871>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:50.609 [pool-251-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.052330871>]
java.lang.AssertionError: expected:<0.0> but was:<0.052330871>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:10:50.619 [pool-252-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007032283519662951
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059284611364919726
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:50.660 [pool-253-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007032283519662951
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059284611364919726]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007032283519662951
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059284611364919726    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:50.662 [pool-254-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:50.663 [pool-255-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006934118867375025
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058363215471823075
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:50.691 [pool-256-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006934118867375025
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058363215471823075]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006934118867375025
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058363215471823075    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:50.692 [pool-249-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.052330871>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007032283519662951
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059284611364919726]
00:10:50.692 [pool-249-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006934118867375025
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058363215471823075]
00:10:50.692 [pool-249-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:395.
00:10:50.692 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
00:10:50.692 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:394 which is executed by 163 tests
-1875222545
00:10:53.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007047716604299905
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005933331610387874
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:53.157 [pool-258-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (65 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007047716604299905
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005933331610387874]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007047716604299905
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005933331610387874    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:53.380 [pool-259-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:53.381 [pool-260-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006782012903758617
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005709913641042327
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:53.426 [pool-261-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (43 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006782012903758617
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005709913641042327]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006782012903758617
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005709913641042327    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:53.427 [pool-262-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:53.428 [pool-263-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00696125023163423
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866356158269988
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:53.458 [pool-264-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00696125023163423
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866356158269988]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00696125023163423
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866356158269988    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:10:53.458 [pool-257-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006782012903758617
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005709913641042327]
00:10:53.458 [pool-257-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00696125023163423
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866356158269988]
00:10:53.458 [pool-257-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:394.
00:10:53.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
00:10:53.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:393 which is executed by 163 tests
-1875222545
00:10:53.608 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
00:10:53.608 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:392 which is executed by 163 tests
-1875222545
00:10:53.758 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
00:10:53.758 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:860 which is executed by 164 tests
816641250
00:10:53.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
00:10:53.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor:34 which is executed by 164 tests
-69848058
00:10:54.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
00:10:54.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor:41 which is executed by 168 tests
-69848058
00:10:54.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
00:10:54.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:108 which is executed by 84 tests
816641250
00:10:54.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
00:10:54.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:104 which is executed by 84 tests
816641250
00:10:54.518 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:54.537 [pool-266-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 4
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:10:56.077 [pool-267-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:56.079 [pool-268-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:56.080 [pool-269-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:56.081 [pool-270-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:10:56.081 [pool-265-thread-1] DEBUG tests.output - Failing tests with false: 
[testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null]
00:10:56.082 [pool-265-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null]
00:10:56.082 [pool-265-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:104.
00:10:56.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
00:10:56.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:103 which is executed by 84 tests
816641250
00:10:56.242 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:56.261 [pool-272-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 4
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:10:57.944 [pool-273-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:57.945 [pool-274-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:57.947 [pool-275-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:57.947 [pool-276-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:10:57.948 [pool-271-thread-1] DEBUG tests.output - Failing tests with false: 
[testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null]
00:10:57.948 [pool-271-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null]
00:10:57.948 [pool-271-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:103.
00:10:57.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
00:10:57.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:102 which is executed by 84 tests
816641250
00:10:58.119 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:58.138 [pool-278-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 4
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:10:59.776 [pool-279-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:59.778 [pool-280-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:10:59.779 [pool-281-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:10:59.779 [pool-282-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:10:59.779 [pool-277-thread-1] DEBUG tests.output - Failing tests with false: 
[testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null]
00:10:59.779 [pool-277-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null]
00:10:59.780 [pool-277-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:102.
00:10:59.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
00:10:59.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:101 which is executed by 84 tests
816641250
00:10:59.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
00:10:59.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:100 which is executed by 84 tests
816641250
00:11:00.109 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
00:11:00.109 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:99 which is executed by 84 tests
816641250
00:11:00.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
00:11:00.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:97 which is executed by 84 tests
816641250
00:11:01.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:01.599 [pool-284-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 4
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:02.014 [pool-285-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:02.015 [pool-286-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:02.016 [pool-287-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:02.017 [pool-288-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:11:02.017 [pool-283-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null]
00:11:02.017 [pool-283-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null]
00:11:02.017 [pool-283-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:97.
00:11:02.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
00:11:02.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:246 which is executed by 193 tests
-1875222545
00:11:03.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
00:11:03.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:138 which is executed by 193 tests
-1875222545
00:11:03.451 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
00:11:03.451 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:512 which is executed by 200 tests
-1875222545
00:11:03.603 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
00:11:03.603 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:510 which is executed by 200 tests
-1875222545
00:11:03.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007079231245067626
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005956991030035986
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:03.822 [pool-290-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007079231245067626
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005956991030035986]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007079231245067626
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005956991030035986    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:84)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:11:04.046 [pool-291-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (22 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:84)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:11:04.049 [pool-292-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(CorrelatedRandomVectorGenerator.java:96)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.<init>(CorrelatedRandomVectorGeneratorTest.java:63)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
00:11:04.056 [pool-293-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(CorrelatedRandomVectorGenerator.java:96)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.<init>(CorrelatedRandomVectorGeneratorTest.java:63)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:04.057 [pool-294-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:04.058 [pool-295-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938810247582965
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005829866645343411
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:04.097 [pool-296-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (38 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938810247582965
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005829866645343411]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938810247582965
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005829866645343411    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:04.098 [pool-289-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
00:11:04.098 [pool-289-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938810247582965
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005829866645343411]
00:11:04.098 [pool-289-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:510.
00:11:04.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
00:11:04.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:509 which is executed by 200 tests
-1875222545
00:11:04.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0071292251401712916
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006002409859426399
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:04.316 [pool-298-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0071292251401712916
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006002409859426399]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0071292251401712916
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006002409859426399    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:84)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:11:04.526 [pool-299-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (22 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:84)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:11:04.529 [pool-300-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(CorrelatedRandomVectorGenerator.java:96)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.<init>(CorrelatedRandomVectorGeneratorTest.java:63)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
00:11:04.535 [pool-301-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(CorrelatedRandomVectorGenerator.java:96)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.<init>(CorrelatedRandomVectorGeneratorTest.java:63)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:04.536 [pool-302-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:04.538 [pool-303-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007017244760046746
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005904950846119138
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:04.578 [pool-304-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007017244760046746
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005904950846119138]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007017244760046746
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005904950846119138    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:04.579 [pool-297-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
00:11:04.579 [pool-297-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007017244760046746
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005904950846119138]
00:11:04.579 [pool-297-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:509.
00:11:04.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
00:11:04.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:507 which is executed by 200 tests
-1875222545
00:11:04.731 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
00:11:04.732 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:506 which is executed by 200 tests
-1875222545
00:11:06.040 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
00:11:06.041 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:528 which is executed by 103 tests
1308483921
00:11:06.210 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
00:11:06.210 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:523 which is executed by 103 tests
1308483921
00:11:06.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:06.390 [pool-306-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 4
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:06.659 [pool-307-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:06.660 [pool-308-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:06.661 [pool-309-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:06.662 [pool-310-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:11:06.662 [pool-305-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null]
00:11:06.662 [pool-305-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null]
00:11:06.662 [pool-305-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.MatrixUtils:523.
00:11:06.663 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:06.681 [pool-312-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 4
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:06.936 [pool-313-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:06.937 [pool-314-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

org.apache.commons.math3.linear.MatrixDimensionMismatchException: got 4x4 but expected 4x4
    at org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(MatrixUtils.java:215)
    at org.apache.commons.math3.linear.AbstractRealMatrix.subtract(AbstractRealMatrix.java:97)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:11:06.947 [pool-315-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[got 4x4 but expected 4x4]
org.apache.commons.math3.linear.MatrixDimensionMismatchException: got 4x4 but expected 4x4    at org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(MatrixUtils.java:215)
    at org.apache.commons.math3.linear.AbstractRealMatrix.subtract(AbstractRealMatrix.java:97)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.linear.MatrixDimensionMismatchException: got 4x4 but expected 4x4
    at org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(MatrixUtils.java:215)
    at org.apache.commons.math3.linear.AbstractRealMatrix.subtract(AbstractRealMatrix.java:97)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:67)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:11:06.948 [pool-316-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[got 4x4 but expected 4x4]
org.apache.commons.math3.linear.MatrixDimensionMismatchException: got 4x4 but expected 4x4    at org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(MatrixUtils.java:215)
    at org.apache.commons.math3.linear.AbstractRealMatrix.subtract(AbstractRealMatrix.java:97)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:67)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:11:06.948 [pool-311-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null]
00:11:06.949 [pool-311-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): got 4x4 but expected 4x4, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): got 4x4 but expected 4x4]
00:11:06.949 [pool-311-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.MatrixUtils:523.
00:11:06.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
00:11:06.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:304 which is executed by 273 tests
-1875222545
00:11:07.102 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
00:11:07.102 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:303 which is executed by 273 tests
-1875222545
00:11:07.252 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070575005866921935
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005940829416730053
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:07.319 [pool-318-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070575005866921935
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005940829416730053]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070575005866921935
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005940829416730053    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:07.531 [pool-319-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (22 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:11:07.542 [pool-320-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:07.562 [pool-321-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:07.564 [pool-322-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:07.565 [pool-323-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070908637387522445
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059705607522602564
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:07.594 [pool-324-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070908637387522445
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059705607522602564]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070908637387522445
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059705607522602564    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:07.594 [pool-317-thread-1] DEBUG tests.output - Failing tests with false: 
[testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = 0.0
 Elements at index 2 differ.  expected = 0.009881156 observed = 0.0
 Elements at index 3 differ.  expected = 0.010499559 observed = 0.0]
00:11:07.595 [pool-317-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070908637387522445
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059705607522602564]
00:11:07.595 [pool-317-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:303.
00:11:07.595 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
00:11:07.595 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:302 which is executed by 273 tests
-1875222545
00:11:09.051 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007050740691906673
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005938338774858743
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:09.120 [pool-326-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007050740691906673
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005938338774858743]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007050740691906673
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005938338774858743    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:09.339 [pool-327-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:09.341 [pool-328-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006881379034465544
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057909715770086915
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:09.382 [pool-329-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006881379034465544
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057909715770086915]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006881379034465544
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057909715770086915    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:09.384 [pool-330-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:09.385 [pool-331-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007030820251381496
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005919719963690152
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:09.414 [pool-332-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007030820251381496
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005919719963690152]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007030820251381496
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005919719963690152    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:09.414 [pool-325-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006881379034465544
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057909715770086915]
00:11:09.414 [pool-325-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007030820251381496
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005919719963690152]
00:11:09.415 [pool-325-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:302.
00:11:09.415 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
00:11:09.415 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:527 which is executed by 274 tests
-1875222545
00:11:09.566 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
00:11:09.566 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:526 which is executed by 274 tests
-1875222545
00:11:09.717 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006893319129533698
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005807572375169111
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:09.784 [pool-334-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006893319129533698
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005807572375169111]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006893319129533698
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005807572375169111    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.ArrayIndexOutOfBoundsException: 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:79)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:84)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:11:09.995 [pool-335-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0]
java.lang.ArrayIndexOutOfBoundsException: 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:79)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:84)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math3.exception.NotStrictlyPositiveException: 0 is smaller than, or equal to, the minimum (0)
    at org.apache.commons.math3.linear.AbstractRealMatrix.<init>(AbstractRealMatrix.java:64)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:11)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(Array2DRowRealMatrix.java:53)
    at org.apache.commons.math3.linear.AbstractRealMatrix.transpose(AbstractRealMatrix.java:591)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:60)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:10.005 [pool-336-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0)]
org.apache.commons.math3.exception.NotStrictlyPositiveException: 0 is smaller than, or equal to, the minimum (0)    at org.apache.commons.math3.linear.AbstractRealMatrix.<init>(AbstractRealMatrix.java:64)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:11)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(Array2DRowRealMatrix.java:53)
    at org.apache.commons.math3.linear.AbstractRealMatrix.transpose(AbstractRealMatrix.java:591)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:60)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.DimensionMismatchException: 4 != 0
    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(CorrelatedRandomVectorGenerator.java:92)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:176)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:10.011 [pool-337-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[4 != 0]
org.apache.commons.math3.exception.DimensionMismatchException: 4 != 0    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(CorrelatedRandomVectorGenerator.java:92)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:176)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:10.013 [pool-338-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:10.014 [pool-339-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006851106881546014
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005760764068066371
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:10.054 [pool-340-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006851106881546014
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005760764068066371]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006851106881546014
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005760764068066371    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:10.054 [pool-333-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0), testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): 4 != 0]
00:11:10.054 [pool-333-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006851106881546014
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005760764068066371]
00:11:10.054 [pool-333-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:526.
00:11:10.055 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
00:11:10.055 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:290 which is executed by 274 tests
-1875222545
00:11:10.206 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
00:11:10.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:286 which is executed by 274 tests
-1875222545
00:11:10.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
00:11:10.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:284 which is executed by 274 tests
-1875222545
00:11:10.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006996768775536452
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058927116068791
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:10.576 [pool-342-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (65 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006996768775536452
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058927116068791]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006996768775536452
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058927116068791    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:84)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:11:11.964 [pool-343-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:84)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:11:11.967 [pool-344-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = NaN
 Elements at index 2 differ.  expected = 0.009881156 observed = NaN
 Elements at index 3 differ.  expected = 0.010499559 observed = NaN
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:11.991 [pool-345-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (23 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = NaN
 Elements at index 2 differ.  expected = 0.009881156 observed = NaN
 Elements at index 3 differ.  expected = 0.010499559 observed = NaN]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = NaN
 Elements at index 2 differ.  expected = 0.009881156 observed = NaN
 Elements at index 3 differ.  expected = 0.010499559 observed = NaN    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:11.993 [pool-346-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:11.994 [pool-347-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007048450661640757
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005927298343780472
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:12.022 [pool-348-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007048450661640757
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005927298343780472]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007048450661640757
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005927298343780472    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:12.023 [pool-341-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = NaN
 Elements at index 2 differ.  expected = 0.009881156 observed = NaN
 Elements at index 3 differ.  expected = 0.010499559 observed = NaN]
00:11:12.023 [pool-341-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007048450661640757
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005927298343780472]
00:11:12.024 [pool-341-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:284.
00:11:12.024 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
00:11:12.024 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:281 which is executed by 274 tests
-1875222545
00:11:12.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006913324425830088
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005822820282580281
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:12.240 [pool-350-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006913324425830088
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005822820282580281]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006913324425830088
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005822820282580281    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:12.446 [pool-351-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:12.447 [pool-352-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938443197833266
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005834435809427071
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:12.488 [pool-353-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938443197833266
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005834435809427071]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938443197833266
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005834435809427071    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:12.489 [pool-354-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:12.490 [pool-355-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006747138895759034
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005664148398197717
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:12.519 [pool-356-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006747138895759034
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005664148398197717]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006747138895759034
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005664148398197717    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:12.519 [pool-349-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006938443197833266
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005834435809427071]
00:11:12.519 [pool-349-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006747138895759034
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005664148398197717]
00:11:12.519 [pool-349-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:281.
00:11:12.520 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006956307050778336
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005859084274682883
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:12.583 [pool-358-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (61 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006956307050778336
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005859084274682883]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006956307050778336
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005859084274682883    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:12.788 [pool-359-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:12.789 [pool-360-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007003627714865121
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00590081523334628
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:12.830 [pool-361-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007003627714865121
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00590081523334628]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007003627714865121
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00590081523334628    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.DimensionMismatchException: 4 != 4
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:166)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:12.839 [pool-362-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[4 != 4]
org.apache.commons.math3.exception.DimensionMismatchException: 4 != 4    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:166)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.DimensionMismatchException: 4 != 4
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:166)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:53)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:12.840 [pool-363-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[4 != 4]
org.apache.commons.math3.exception.DimensionMismatchException: 4 != 4    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:166)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:53)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.DimensionMismatchException: 4 != 4
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:166)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:174)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
00:11:12.841 [pool-364-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[4 != 4]
org.apache.commons.math3.exception.DimensionMismatchException: 4 != 4    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:166)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:174)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)

00:11:12.842 [pool-357-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007003627714865121
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00590081523334628]
00:11:12.842 [pool-357-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 4 != 4, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 4 != 4, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): 4 != 4]
00:11:12.842 [pool-357-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:281.
00:11:12.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #127
00:11:12.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:280 which is executed by 274 tests
-1875222545
00:11:12.992 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00694081308745483
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005840006412236282
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:13.059 [pool-366-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00694081308745483
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005840006412236282]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00694081308745483
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005840006412236282    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:84)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:11:13.266 [pool-367-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:84)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:11:13.268 [pool-368-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0]
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException: 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:101)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:62)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = NaN
 Elements at index 2 differ.  expected = 0.009881156 observed = NaN
 Elements at index 3 differ.  expected = 0.010499559 observed = NaN
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:13.291 [pool-369-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = NaN
 Elements at index 2 differ.  expected = 0.009881156 observed = NaN
 Elements at index 3 differ.  expected = 0.010499559 observed = NaN]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = NaN
 Elements at index 2 differ.  expected = 0.009881156 observed = NaN
 Elements at index 3 differ.  expected = 0.010499559 observed = NaN    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:13.292 [pool-370-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:13.293 [pool-371-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070493485626895525
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005938558731153137
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:13.322 [pool-372-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070493485626895525
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005938558731153137]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070493485626895525
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005938558731153137    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:13.322 [pool-365-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0): not positive definite matrix: value 0 at index 0, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0
 Elements at index 1 differ.  expected = 0.01039469 observed = NaN
 Elements at index 2 differ.  expected = 0.009881156 observed = NaN
 Elements at index 3 differ.  expected = 0.010499559 observed = NaN]
00:11:13.322 [pool-365-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070493485626895525
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005938558731153137]
00:11:13.322 [pool-365-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:280.
00:11:13.323 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #128
00:11:13.323 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:279 which is executed by 274 tests
-1875222545
00:11:13.471 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00676046155772177
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00569870000470759
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:14.681 [pool-374-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00676046155772177
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00569870000470759]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00676046155772177
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00569870000470759    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:164)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:14.901 [pool-375-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:164)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:164)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:53)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:14.902 [pool-376-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:164)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:53)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:164)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:174)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
00:11:14.909 [pool-377-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:164)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:174)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:14.911 [pool-378-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:14.911 [pool-379-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006939046470472134
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005844282619491286
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:14.951 [pool-380-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006939046470472134
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005844282619491286]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006939046470472134
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005844282619491286    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:14.951 [pool-373-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): null]
00:11:14.951 [pool-373-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006939046470472134
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005844282619491286]
00:11:14.951 [pool-373-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:279.
00:11:14.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #129
00:11:14.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:276 which is executed by 274 tests
-1875222545
00:11:15.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006857848984361018
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005766810699780769
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:15.167 [pool-382-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006857848984361018
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005766810699780769]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006857848984361018
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005766810699780769    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:15.373 [pool-383-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:15.374 [pool-384-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006943805619082247
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005844426999211395
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:15.414 [pool-385-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (38 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006943805619082247
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005844426999211395]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006943805619082247
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005844426999211395    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:15.416 [pool-386-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:15.416 [pool-387-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006922536942121951
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005824394658124716
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:15.445 [pool-388-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006922536942121951
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005824394658124716]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006922536942121951
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005824394658124716    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:15.445 [pool-381-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006943805619082247
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005844426999211395]
00:11:15.445 [pool-381-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006922536942121951
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005824394658124716]
00:11:15.445 [pool-381-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:276.
00:11:15.445 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006963777785262282
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005872542397744259
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:15.511 [pool-390-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006963777785262282
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005872542397744259]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006963777785262282
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005872542397744259    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:15.714 [pool-391-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:15.715 [pool-392-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007043915037679358
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005930236429503846
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:15.755 [pool-393-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007043915037679358
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005930236429503846]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007043915037679358
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005930236429503846    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.NoDataException: matrix must have at least one column
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:161)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:15.766 [pool-394-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[matrix must have at least one column]
org.apache.commons.math3.exception.NoDataException: matrix must have at least one column    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:161)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.NoDataException: matrix must have at least one column
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:161)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:53)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:15.767 [pool-395-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[matrix must have at least one column]
org.apache.commons.math3.exception.NoDataException: matrix must have at least one column    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:161)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:53)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.NoDataException: matrix must have at least one column
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:161)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:174)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
00:11:15.768 [pool-396-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[matrix must have at least one column]
org.apache.commons.math3.exception.NoDataException: matrix must have at least one column    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:161)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:362)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:174)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)

00:11:15.768 [pool-389-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007043915037679358
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005930236429503846]
00:11:15.768 [pool-389-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): matrix must have at least one column, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): matrix must have at least one column, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): matrix must have at least one column]
00:11:15.768 [pool-389-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:276.
00:11:15.768 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #130
00:11:15.768 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:275 which is executed by 274 tests
-1875222545
00:11:15.918 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #131
00:11:15.918 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:271 which is executed by 274 tests
-1875222545
00:11:16.066 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006901201148335108
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005815868086116877
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:16.138 [pool-398-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (68 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006901201148335108
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005815868086116877]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006901201148335108
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005815868086116877    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:16.339 [pool-399-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:17.603 [pool-400-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006974992746979759
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005869949811350834
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:17.645 [pool-401-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006974992746979759
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005869949811350834]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006974992746979759
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005869949811350834    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:17.647 [pool-402-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:17.648 [pool-403-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007002562465530801
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005891594302549124
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:17.677 [pool-404-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007002562465530801
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005891594302549124]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007002562465530801
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005891594302549124    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:17.677 [pool-397-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006974992746979759
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005869949811350834]
00:11:17.677 [pool-397-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007002562465530801
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005891594302549124]
00:11:17.677 [pool-397-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:271.
00:11:17.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068796817412390115
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057973074769817595
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:17.749 [pool-406-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (69 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068796817412390115
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057973074769817595]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068796817412390115
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057973074769817595    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:17.974 [pool-407-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:17.975 [pool-408-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007058387024631622
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005940120005913325
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:18.016 [pool-409-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007058387024631622
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005940120005913325]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007058387024631622
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005940120005913325    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.NoDataException: matrix must have at least one row
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:156)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:361)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:18.026 [pool-410-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[matrix must have at least one row]
org.apache.commons.math3.exception.NoDataException: matrix must have at least one row    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:156)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:361)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.NoDataException: matrix must have at least one row
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:156)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:361)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:53)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:18.026 [pool-411-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[matrix must have at least one row]
org.apache.commons.math3.exception.NoDataException: matrix must have at least one row    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:156)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:361)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:53)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.NoDataException: matrix must have at least one row
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:156)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:361)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:174)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
00:11:18.027 [pool-412-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[matrix must have at least one row]
org.apache.commons.math3.exception.NoDataException: matrix must have at least one row    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:156)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:361)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:174)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)

00:11:18.027 [pool-405-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007058387024631622
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005940120005913325]
00:11:18.028 [pool-405-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): matrix must have at least one row, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): matrix must have at least one row, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): matrix must have at least one row]
00:11:18.028 [pool-405-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:271.
00:11:18.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #132
00:11:18.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:270 which is executed by 274 tests
-1875222545
00:11:18.177 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #133
00:11:18.177 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:269 which is executed by 274 tests
-1875222545
00:11:18.326 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069008049613962395
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005818633324420992
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:18.393 [pool-414-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069008049613962395
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005818633324420992]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069008049613962395
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005818633324420992    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:18.594 [pool-415-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:18.595 [pool-416-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068665243065479335
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005776550106749262
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:18.636 [pool-417-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068665243065479335
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005776550106749262]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068665243065479335
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005776550106749262    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:18.637 [pool-418-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:18.638 [pool-419-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070220511884850805
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005910591645819459
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:18.666 [pool-420-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070220511884850805
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005910591645819459]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070220511884850805
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005910591645819459    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:18.666 [pool-413-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068665243065479335
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005776550106749262]
00:11:18.667 [pool-413-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070220511884850805
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005910591645819459]
00:11:18.667 [pool-413-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:269.
00:11:18.667 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #134
00:11:18.667 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:266 which is executed by 274 tests
-1875222545
00:11:18.815 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006951944393613307
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005859004379885005
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:18.882 [pool-422-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006951944393613307
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005859004379885005]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006951944393613307
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005859004379885005    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:19.085 [pool-423-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:19.086 [pool-424-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006878089953485535
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005797775003586253
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:19.130 [pool-425-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (41 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006878089953485535
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005797775003586253]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006878089953485535
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005797775003586253    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:19.131 [pool-426-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:19.132 [pool-427-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069855072921673695
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005882832790975527
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:19.160 [pool-428-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069855072921673695
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005882832790975527]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069855072921673695
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005882832790975527    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:19.160 [pool-421-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006878089953485535
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005797775003586253]
00:11:19.160 [pool-421-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069855072921673695
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005882832790975527]
00:11:19.161 [pool-421-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:266.
00:11:19.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068675379311658735
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057897120160837565
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:19.228 [pool-430-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (65 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068675379311658735
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057897120160837565]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068675379311658735
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057897120160837565    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:20.657 [pool-431-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:20.659 [pool-432-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006999848608008719
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005895902015063165
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:20.701 [pool-433-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006999848608008719
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005895902015063165]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006999848608008719
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005895902015063165    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.MathIllegalStateException: first 0 columns are not initialized yet
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:150)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:20.711 [pool-434-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[first 0 columns are not initialized yet]
org.apache.commons.math3.exception.MathIllegalStateException: first 0 columns are not initialized yet    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:150)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.MathIllegalStateException: first 0 columns are not initialized yet
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:150)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:53)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:20.712 [pool-435-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[first 0 columns are not initialized yet]
org.apache.commons.math3.exception.MathIllegalStateException: first 0 columns are not initialized yet    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:150)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:53)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.MathIllegalStateException: first 0 columns are not initialized yet
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:150)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:174)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
00:11:20.713 [pool-436-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[first 0 columns are not initialized yet]
org.apache.commons.math3.exception.MathIllegalStateException: first 0 columns are not initialized yet    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:150)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:174)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)

00:11:20.714 [pool-429-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006999848608008719
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005895902015063165]
00:11:20.714 [pool-429-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): first 0 columns are not initialized yet, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): first 0 columns are not initialized yet, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): first 0 columns are not initialized yet]
00:11:20.714 [pool-429-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:266.
00:11:20.714 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #135
00:11:20.714 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:263 which is executed by 274 tests
-1875222545
00:11:20.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006901218588465039
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005824466219504277
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:20.932 [pool-438-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (65 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006901218588465039
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005824466219504277]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006901218588465039
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005824466219504277    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:21.132 [pool-439-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:21.133 [pool-440-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006912637772360918
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005808549810135779
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:21.174 [pool-441-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006912637772360918
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005808549810135779]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006912637772360918
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005808549810135779    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:21.175 [pool-442-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:21.176 [pool-443-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006822784975936085
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005734111573664741
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:21.204 [pool-444-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006822784975936085
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005734111573664741]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006822784975936085
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005734111573664741    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:21.204 [pool-437-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006912637772360918
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005808549810135779]
00:11:21.204 [pool-437-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006822784975936085
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005734111573664741]
00:11:21.204 [pool-437-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:263.
00:11:21.204 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006901243548745391
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005809117319054605
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:21.270 [pool-446-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006901243548745391
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005809117319054605]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006901243548745391
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005809117319054605    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:21.474 [pool-447-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:21.475 [pool-448-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006857378651717715
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005765360172850789
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:21.517 [pool-449-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006857378651717715
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005765360172850789]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006857378651717715
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005765360172850789    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.MathIllegalStateException: first 0 rows are not initialized yet
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:147)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:21.526 [pool-450-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[first 0 rows are not initialized yet]
org.apache.commons.math3.exception.MathIllegalStateException: first 0 rows are not initialized yet    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:147)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.MathIllegalStateException: first 0 rows are not initialized yet
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:147)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:53)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:21.527 [pool-451-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[first 0 rows are not initialized yet]
org.apache.commons.math3.exception.MathIllegalStateException: first 0 rows are not initialized yet    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:147)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:53)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.MathIllegalStateException: first 0 rows are not initialized yet
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:147)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:174)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
00:11:21.529 [pool-452-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[first 0 rows are not initialized yet]
org.apache.commons.math3.exception.MathIllegalStateException: first 0 rows are not initialized yet    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:147)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:174)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)

00:11:21.529 [pool-445-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006857378651717715
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005765360172850789]
00:11:21.529 [pool-445-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): first 0 rows are not initialized yet, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): first 0 rows are not initialized yet, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): first 0 rows are not initialized yet]
00:11:21.529 [pool-445-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:263.
00:11:21.529 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #136
00:11:21.530 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:262 which is executed by 274 tests
-1875222545
00:11:21.679 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068648198299621245
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005784103855233351
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:21.744 [pool-454-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068648198299621245
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005784103855233351]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068648198299621245
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005784103855233351    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.ArrayIndexOutOfBoundsException: 0
    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:79)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:84)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:11:21.947 [pool-455-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0]
java.lang.ArrayIndexOutOfBoundsException: 0    at org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(RectangularCholeskyDecomposition.java:79)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:84)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math3.exception.NotStrictlyPositiveException: 0 is smaller than, or equal to, the minimum (0)
    at org.apache.commons.math3.linear.AbstractRealMatrix.<init>(AbstractRealMatrix.java:64)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:11)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(Array2DRowRealMatrix.java:53)
    at org.apache.commons.math3.linear.AbstractRealMatrix.transpose(AbstractRealMatrix.java:591)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:60)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:21.957 [pool-456-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[0 is smaller than, or equal to, the minimum (0)]
org.apache.commons.math3.exception.NotStrictlyPositiveException: 0 is smaller than, or equal to, the minimum (0)    at org.apache.commons.math3.linear.AbstractRealMatrix.<init>(AbstractRealMatrix.java:64)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:11)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(Array2DRowRealMatrix.java:53)
    at org.apache.commons.math3.linear.AbstractRealMatrix.transpose(AbstractRealMatrix.java:591)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:60)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.DimensionMismatchException: 4 != 0
    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(CorrelatedRandomVectorGenerator.java:92)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:176)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:21.964 [pool-457-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[4 != 0]
org.apache.commons.math3.exception.DimensionMismatchException: 4 != 0    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(CorrelatedRandomVectorGenerator.java:92)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:176)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:184)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:21.966 [pool-458-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:21.966 [pool-459-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006863479975147863
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00577491498314661
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:22.005 [pool-460-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (38 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006863479975147863
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00577491498314661]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006863479975147863
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00577491498314661    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:22.005 [pool-453-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): 0 is smaller than, or equal to, the minimum (0), testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): 4 != 0]
00:11:22.005 [pool-453-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006863479975147863
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00577491498314661]
00:11:22.005 [pool-453-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:262.
00:11:22.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070108264166154595
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005904830146549852
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:22.070 [pool-462-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070108264166154595
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005904830146549852]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070108264166154595
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005904830146549852    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math3.exception.OutOfRangeException: row index (0)
    at org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:404)
    at org.apache.commons.math3.linear.AbstractRealMatrix.setSubMatrix(AbstractRealMatrix.java:419)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:169)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
00:11:23.401 [pool-463-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[row index (0)]
org.apache.commons.math3.exception.OutOfRangeException: row index (0)    at org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:404)
    at org.apache.commons.math3.linear.AbstractRealMatrix.setSubMatrix(AbstractRealMatrix.java:419)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:169)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)

org.apache.commons.math3.exception.OutOfRangeException: row index (0)
    at org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:404)
    at org.apache.commons.math3.linear.AbstractRealMatrix.setSubMatrix(AbstractRealMatrix.java:419)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:169)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)
00:11:23.403 [pool-464-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[row index (0)]
org.apache.commons.math3.exception.OutOfRangeException: row index (0)    at org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:404)
    at org.apache.commons.math3.linear.AbstractRealMatrix.setSubMatrix(AbstractRealMatrix.java:419)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:169)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:134)

org.apache.commons.math3.exception.OutOfRangeException: row index (0)
    at org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:404)
    at org.apache.commons.math3.linear.AbstractRealMatrix.setSubMatrix(AbstractRealMatrix.java:419)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:169)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:174)
00:11:23.410 [pool-465-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[row index (0)]
org.apache.commons.math3.exception.OutOfRangeException: row index (0)    at org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:404)
    at org.apache.commons.math3.linear.AbstractRealMatrix.setSubMatrix(AbstractRealMatrix.java:419)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:169)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:360)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:16)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.createSampler(CorrelatedRandomVectorGeneratorTest.java:174)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:23.412 [pool-466-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:23.412 [pool-467-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007149411373469672
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006028195032492744
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:23.458 [pool-468-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (45 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007149411373469672
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006028195032492744]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007149411373469672
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006028195032492744    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:23.459 [pool-461-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): row index (0), testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): row index (0), testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): row index (0)]
00:11:23.459 [pool-461-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007149411373469672
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006028195032492744]
00:11:23.459 [pool-461-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:262.
00:11:23.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #137
00:11:23.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:296 which is executed by 274 tests
-1875222545
00:11:23.616 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #138
00:11:23.616 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:295 which is executed by 274 tests
-1875222545
00:11:23.765 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069343237307039115
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005832864251917165
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:23.838 [pool-470-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (70 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069343237307039115
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005832864251917165]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069343237307039115
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005832864251917165    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:24.047 [pool-471-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:24.049 [pool-472-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007044809200933241
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059386460947816475
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:27.550 [pool-473-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3499 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007044809200933241
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059386460947816475]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007044809200933241
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059386460947816475    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:27.606 [pool-474-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (54 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:27.609 [pool-475-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006919329359687445
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005821699916392319
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:30.979 [pool-476-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3369 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006919329359687445
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005821699916392319]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006919329359687445
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005821699916392319    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:30.979 [pool-469-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007044809200933241
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059386460947816475]
00:11:30.979 [pool-469-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006919329359687445
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005821699916392319]
00:11:30.979 [pool-469-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:295.
00:11:30.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #139
00:11:30.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3523 which is executed by 334 tests
1033054629
00:11:32.312 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #140
00:11:32.312 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3520 which is executed by 334 tests
1033054629
00:11:32.505 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006973778283094172
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005867457885107725
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:32.571 [pool-478-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006973778283094172
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005867457885107725]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006973778283094172
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005867457885107725    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:36.538 [pool-479-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:36.539 [pool-480-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006974791468376108
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00588375362331666
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:36.580 [pool-481-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006974791468376108
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00588375362331666]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006974791468376108
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00588375362331666    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:36.581 [pool-482-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:36.582 [pool-483-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006810504993409229
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057326499225022745
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:36.610 [pool-484-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006810504993409229
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057326499225022745]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006810504993409229
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057326499225022745    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:36.610 [pool-477-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006974791468376108
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00588375362331666]
00:11:36.610 [pool-477-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006810504993409229
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057326499225022745]
00:11:36.610 [pool-477-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.util.FastMath:3520.
00:11:36.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070628006503774
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005943675653657585
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:36.675 [pool-486-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070628006503774
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005943675653657585]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070628006503774
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005943675653657585    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:43.845 [pool-487-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (26 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:43.847 [pool-488-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00689471194492831
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005805337206519374
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:43.888 [pool-489-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00689471194492831
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005805337206519374]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00689471194492831
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005805337206519374    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:43.889 [pool-490-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:43.890 [pool-491-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006862287879676306
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005788512390285796
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:43.919 [pool-492-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006862287879676306
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005788512390285796]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006862287879676306
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005788512390285796    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:43.919 [pool-485-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00689471194492831
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005805337206519374]
00:11:43.919 [pool-485-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006862287879676306
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005788512390285796]
00:11:43.919 [pool-485-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.util.FastMath:3520.
00:11:43.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #141
00:11:43.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3519 which is executed by 334 tests
1033054629
00:11:44.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #142
00:11:44.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3514 which is executed by 337 tests
1033054629
00:11:45.838 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007015242398880308
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00590594225172144
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:45.906 [pool-494-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (65 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007015242398880308
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00590594225172144]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007015242398880308
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00590594225172144    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:49.463 [pool-495-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:49.464 [pool-496-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006906734039037087
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005816856795260549
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:49.505 [pool-497-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006906734039037087
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005816856795260549]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006906734039037087
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005816856795260549    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:49.506 [pool-498-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:49.507 [pool-499-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006972758898278903
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005871219549690662
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:49.535 [pool-500-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006972758898278903
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005871219549690662]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006972758898278903
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005871219549690662    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:49.535 [pool-493-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006906734039037087
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005816856795260549]
00:11:49.535 [pool-493-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006972758898278903
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005871219549690662]
00:11:49.535 [pool-493-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.util.FastMath:3514.
00:11:49.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069994115789652174
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005897609188662568
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:49.601 [pool-502-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069994115789652174
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005897609188662568]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069994115789652174
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005897609188662568    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:53.068 [pool-503-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:53.069 [pool-504-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007032289547653639
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005911882875807607
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:53.110 [pool-505-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007032289547653639
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005911882875807607]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007032289547653639
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005911882875807607    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:53.111 [pool-506-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:67)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:53.112 [pool-507-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:67)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006838728269835936
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005753675296867273
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:53.141 [pool-508-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006838728269835936
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005753675296867273]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006838728269835936
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005753675296867273    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:11:53.141 [pool-501-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<0.0180652917341963>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): null, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007032289547653639
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005911882875807607]
00:11:53.141 [pool-501-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<NaN>, testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest): expected:<0.0> but was:<NaN>, testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest): Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006838728269835936
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005753675296867273]
00:11:53.141 [pool-501-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.util.FastMath:3514.
00:11:53.141 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #143
00:11:53.141 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:391 which is executed by 357 tests
1308483921
00:11:53.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #144
00:11:53.317 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:390 which is executed by 357 tests
1308483921
00:11:53.479 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006880629547455042
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057959944857598495
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:53.545 [pool-510-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006880629547455042
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057959944857598495]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006880629547455042
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0057959944857598495    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:11:55.132 [pool-511-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:11:55.135 [pool-512-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.OutOfMemoryError: GC overhead limit exceeded
    at fr.inria.lille.commons.trace.collector.ValueCollector.collectFrom(ValueCollector.java:19)
    at fr.inria.lille.commons.trace.RuntimeValues.collectInput(RuntimeValues.java:89)
    at org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(MatrixUtils.java:155)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(Array2DRowRealMatrix.java:295)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.nextVector(CorrelatedRandomVectorGenerator.java:177)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:188)
00:12:49.400 [pool-513-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (54263 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[GC overhead limit exceeded]
java.lang.OutOfMemoryError: GC overhead limit exceeded    at fr.inria.lille.commons.trace.collector.ValueCollector.collectFrom(ValueCollector.java:19)
    at fr.inria.lille.commons.trace.RuntimeValues.collectInput(RuntimeValues.java:89)
    at org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(MatrixUtils.java:155)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(Array2DRowRealMatrix.java:295)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.nextVector(CorrelatedRandomVectorGenerator.java:177)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:188)

00:16:15.628 [pool-509-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
00:16:15.628 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
00:16:15.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #145
00:16:15.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:389 which is executed by 357 tests
1308483921
00:16:15.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006842216087969636
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005763603241384851
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:16:15.881 [pool-516-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006842216087969636
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005763603241384851]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006842216087969636
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005763603241384851    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:16:16.169 [pool-517-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:16.172 [pool-518-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.OutOfMemoryError: GC overhead limit exceeded
    at fr.inria.lille.commons.trace.collector.ValueCollector.collectFrom(ValueCollector.java:19)
    at fr.inria.lille.commons.trace.RuntimeValues.collectInput(RuntimeValues.java:89)
    at org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(MatrixUtils.java:151)
    at org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(Array2DRowRealMatrix.java:295)
java.lang.OutOfMemoryError: GC overhead limit exceeded
    at java.util.Arrays.copyOf(Arrays.java:3332)
    at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124)
    at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448)
    at java.lang.StringBuilder.append(StringBuilder.java:136)
    at java.lang.StackTraceElement.toString(StackTraceElement.java:172)
    at xxl.java.junit.TestCasesListener.testFailure(TestCasesListener.java:47)
00:17:14.939 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.lang.OutOfMemoryError: GC overhead limit exceeded
00:17:16.175 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #146
00:17:16.175 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:323 which is executed by 360 tests
java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.util.concurrent.FutureTask.report(FutureTask.java:122)
	at java.util.concurrent.FutureTask.get(FutureTask.java:206)
	at fr.inria.lille.repair.Main.main(Main.java:106)
Caused by: java.lang.OutOfMemoryError: GC overhead limit exceeded

Usage: java -jar nopol.jar
                          [(-m|--mode) <repair|ranking>] (-e|--type) <condition|precondition|pre_then_cond|loop|arithmetic> [(-o|--oracle) <angelic|symbolic>] [(-y|--synthesis) <smt|dynamoth>] [(-l|--solver) <z3|cvc4>] [(-p|--solver-path) <solverPath>] (-s|--source) source1:source2:...:sourceN  (-c|--classpath) <classpath> [(-t|--test) test1:test2:...:testN ] [--complianceLevel <complianceLevel>] [--maxTime <maxTime>] [--maxTimeType <maxTimeType>] [(-z|--flocal) < cocospoon|dumb|gzoltar>] [--output <outputFolder>] [--json[:<outputJson>]]

  [(-m|--mode) <repair|ranking>]
        Define the mode of execution. (default: repair)

  (-e|--type) <condition|precondition|pre_then_cond|loop|arithmetic>
        The repair type (example fixing only conditions, or adding
        precondition). REQUIRED OPTION (default: condition)

  [(-o|--oracle) <angelic|symbolic>]
        Define the oracle (only used with repair mode). (default: angelic)

  [(-y|--synthesis) <smt|dynamoth>]
        Define the patch synthesis. (default: smt)

  [(-l|--solver) <z3|cvc4>]
        Define the solver (only used with smt synthesis). (default: z3)

  [(-p|--solver-path) <solverPath>]
        Define the solver binary path (only used with smt synthesis).

  (-s|--source) source1:source2:...:sourceN 
        Define the path to the source code of the project.

  (-c|--classpath) <classpath>
        Define the classpath of the project.

  [(-t|--test) test1:test2:...:testN ]
        Define the tests of the project (both failing and passing),
        fully-qualified, separated with ':' (even if the classpath contains
        other tests, only those are considered.

  [--complianceLevel <complianceLevel>]
        The compliance level of the project. (default: 7)

  [--maxTime <maxTime>]
        The maximum time execution in minute for the whole execution of
        Nopol.(default: 10)

  [--maxTimeType <maxTimeType>]
        The maximum time execution in minute for one type of patch. (default: 5)

  [(-z|--flocal) < cocospoon|dumb|gzoltar>]
        Define the fault localizer to be used. (default: gzoltar)

  [--output <outputFolder>]
        Define the location where the patches will be saved. (default: .)

  [--json[:<outputJson>]]
        Output a json file in the current working directory.

Command exited with non-zero status 255
5377.21user 28.83system 17:13.43elapsed 523%CPU (0avgtext+0avgdata 4628708maxresident)k
51368inputs+12664outputs (4major+1900715minor)pagefaults 0swaps


Node: petitprince-11.luxembourg.grid5000.fr



Date: Thu Nov 29 00:17:27 EST 2018

