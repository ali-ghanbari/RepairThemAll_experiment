cd /tmp/DynaMoth_Defects4J_Math_21;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -d64 -Xmx4g -Xms1g -XX:MaxPermSize=1024m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSClassUnloadingEnabled -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis dynamoth \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 5 \
	--source src/main/java/ \
	--classpath "target/classes/:target/test-classes/:/tmp/DynaMoth_Defects4J_Math_21/target/classes/:/tmp/DynaMoth_Defects4J_Math_21/target/test-classes/:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1024m; support was removed in 8.0
10:26:27.474 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
10:26:27.503 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/DynaMoth_Defects4J_Math_21/target/classes/, file:/tmp/DynaMoth_Defects4J_Math_21/target/test-classes/, file:/tmp/DynaMoth_Defects4J_Math_21/target/classes/, file:/tmp/DynaMoth_Defects4J_Math_21/target/test-classes/, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
10:26:27.503 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
10:26:27.504 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest]
10:26:27.507 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@2ff4f00f', projectTests=[org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest], complianceLevel=5, outputFolder=., json=true}
10:26:27.508 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 4
10:26:27.524 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 905 MB
10:26:27.524 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
10:26:27.524 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 990 MB
10:26:27.524 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
10:26:27.525 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
10:26:27.525 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
10:34:39.213 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
10:34:39.213 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:365 which is executed by 1 tests
10:34:39.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:365
10:34:39.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
10:34:39.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:361 which is executed by 1 tests
10:34:39.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:361
10:34:39.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
10:34:39.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:360 which is executed by 1 tests
10:34:39.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:360
10:34:39.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
10:34:39.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:359 which is executed by 1 tests
10:34:39.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:359
10:34:39.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
10:34:39.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:358 which is executed by 1 tests
10:34:39.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:358
10:34:39.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
10:34:39.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:357 which is executed by 1 tests
10:34:39.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:357
10:34:39.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
10:34:39.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:356 which is executed by 1 tests
10:34:39.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:356
10:34:39.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
10:34:39.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:355 which is executed by 1 tests
10:34:39.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:355
10:34:39.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
10:34:39.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:354 which is executed by 1 tests
10:34:39.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:354
10:34:39.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
10:34:39.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RectangularCholeskyDecomposition:160 which is executed by 9 tests
1644006350
10:34:39.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
10:34:39.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:189 which is executed by 4 tests
1236997208
10:34:39.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
10:34:39.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:186 which is executed by 4 tests
1236997208
10:34:39.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069629279222649205
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866865944051798
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:40.110 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (113 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069629279222649205
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866865944051798]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069629279222649205
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866865944051798    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:41.073 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
10:34:41.073 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:185 which is executed by 4 tests
1236997208
10:34:41.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006941830095211209
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005848383711319403
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:41.316 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (67 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006941830095211209
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005848383711319403]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006941830095211209
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005848383711319403    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:41.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
10:34:41.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:184 which is executed by 4 tests
1236997208
10:34:41.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007019498508350817
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005902512298670079
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:41.863 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007019498508350817
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005902512298670079]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007019498508350817
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005902512298670079    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:42.149 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
10:34:42.150 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:183 which is executed by 4 tests
1236997208
10:34:42.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
10:34:42.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:163 which is executed by 4 tests
1236997208
10:34:42.605 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
10:34:42.605 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:159 which is executed by 4 tests
1236997208
10:34:42.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00690442250665059
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005810474357834836
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:42.867 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (90 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00690442250665059
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005810474357834836]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00690442250665059
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005810474357834836    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:43.185 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
10:34:43.185 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:158 which is executed by 4 tests
1236997208
10:34:43.352 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007036924886673333
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005934697332295326
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:43.465 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (100 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007036924886673333
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005934697332295326]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007036924886673333
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005934697332295326    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:43.750 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
10:34:43.751 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:157 which is executed by 4 tests
1236997208
10:34:43.918 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006902645779879251
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058168223811820696
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:43.983 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (61 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006902645779879251
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058168223811820696]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006902645779879251
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058168223811820696    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:44.294 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
10:34:44.294 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:151 which is executed by 4 tests
1236997208
10:34:44.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069725912884296875
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005876128188575568
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:44.558 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (95 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069725912884296875
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005876128188575568]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069725912884296875
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005876128188575568    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:44.851 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006904084685635192
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005813990968776797
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:44.915 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (61 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006904084685635192
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005813990968776797]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006904084685635192
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005813990968776797    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:45.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
10:34:45.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:150 which is executed by 4 tests
1236997208
10:34:45.355 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
10:34:45.355 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:121 which is executed by 4 tests
1236997208
10:34:45.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
10:34:45.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:120 which is executed by 4 tests
1236997208
10:34:45.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007044695009434056
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005934963698624758
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:45.752 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007044695009434056
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005934963698624758]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007044695009434056
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005934963698624758    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:46.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
10:34:46.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:109 which is executed by 4 tests
1236997208
10:34:46.211 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
10:34:46.211 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:99 which is executed by 4 tests
1236997208
10:34:46.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
10:34:46.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:87 which is executed by 4 tests
1236997208
10:34:46.542 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
10:34:46.542 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:84 which is executed by 4 tests
1236997208
10:34:46.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006984591269052229
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005874103580391055
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:46.775 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (65 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006984591269052229
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005874103580391055]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006984591269052229
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005874103580391055    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:47.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
10:34:47.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:83 which is executed by 4 tests
1236997208
10:34:47.195 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007210936583041229
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00606555635172248
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:47.259 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (61 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007210936583041229
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00606555635172248]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007210936583041229
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00606555635172248    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:47.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
10:34:47.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessCovariance:82 which is executed by 4 tests
1236997208
10:34:47.728 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0071435287680592175
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006010626008219574
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:47.810 [pool-48-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (80 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0071435287680592175
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006010626008219574]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0071435287680592175
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006010626008219574    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:48.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
10:34:48.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:181 which is executed by 4 tests
-1006630263
10:34:48.240 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
10:34:48.241 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:177 which is executed by 4 tests
-1006630263
10:34:48.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070044785678768364
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005899502656826172
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:48.477 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (69 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070044785678768364
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005899502656826172]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070044785678768364
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005899502656826172    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:48.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
10:34:48.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:176 which is executed by 4 tests
-1006630263
10:34:48.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007108089094791023
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005988358858208036
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:49.009 [pool-56-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (71 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007108089094791023
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005988358858208036]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007108089094791023
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005988358858208036    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:49.344 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
10:34:49.344 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:175 which is executed by 4 tests
-1006630263
10:34:49.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007084412755561756
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005973744461604264
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:49.576 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (65 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007084412755561756
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005973744461604264]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007084412755561756
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005973744461604264    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:49.896 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
10:34:49.896 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:174 which is executed by 4 tests
-1006630263
10:34:50.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007051743738898889
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00593598424632723
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:50.130 [pool-64-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007051743738898889
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00593598424632723]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007051743738898889
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00593598424632723    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:50.503 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
10:34:50.503 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:173 which is executed by 4 tests
-1006630263
10:34:50.666 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
10:34:50.666 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:169 which is executed by 4 tests
-1006630263
10:34:50.839 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006970688263387367
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866051469326307
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:50.952 [pool-68-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (110 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006970688263387367
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866051469326307]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006970688263387367
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866051469326307    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:51.226 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
10:34:51.226 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:168 which is executed by 4 tests
-1006630263
10:34:51.389 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006876394075916498
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005789159620404641
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:51.450 [pool-72-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006876394075916498
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005789159620404641]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006876394075916498
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005789159620404641    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:51.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
10:34:51.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:115 which is executed by 6 tests
-1229025651
10:34:51.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007006897347090925
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005903710287206197
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:51.934 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (57 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007006897347090925
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005903710287206197]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007006897347090925
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005903710287206197    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:52.120 [pool-75-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
StorelessBivariateCovariance.java:54: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:34:52.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
10:34:52.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:114 which is executed by 6 tests
-1229025651
10:34:52.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006858432332906716
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005782103621611157
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:52.385 [pool-78-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (97 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006858432332906716
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005782103621611157]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006858432332906716
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005782103621611157    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:52.674 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
10:34:52.674 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:110 which is executed by 6 tests
-1229025651
10:34:52.836 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006925033812934356
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005832669291914718
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:52.896 [pool-82-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (57 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006925033812934356
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005832669291914718]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006925033812934356
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005832669291914718    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:53.172 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007085764659235067
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005963818714303796
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:53.235 [pool-86-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007085764659235067
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005963818714303796]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007085764659235067
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005963818714303796    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:53.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
10:34:53.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:91 which is executed by 6 tests
-1229025651
10:34:53.653 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
10:34:53.653 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:90 which is executed by 6 tests
-1229025651
10:34:53.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070694779067982695
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00595267930709165
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:53.888 [pool-90-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (65 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070694779067982695
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00595267930709165]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070694779067982695
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00595267930709165    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:54.202 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
10:34:54.202 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:89 which is executed by 6 tests
-1229025651
10:34:54.364 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070181012002515425
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005907190158014259
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:54.430 [pool-94-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070181012002515425
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005907190158014259]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070181012002515425
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005907190158014259    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:54.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
10:34:54.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:88 which is executed by 6 tests
-1229025651
10:34:54.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007099679464640057
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005983077611336961
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:55.033 [pool-98-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (88 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007099679464640057
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005983077611336961]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007099679464640057
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005983077611336961    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:55.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
10:34:55.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:87 which is executed by 6 tests
-1229025651
10:34:55.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
10:34:55.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:86 which is executed by 6 tests
-1229025651
10:34:55.701 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
10:34:55.701 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance:85 which is executed by 6 tests
-1229025651
10:34:55.878 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006924543190211678
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058228735732805455
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:55.961 [pool-102-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (80 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006924543190211678
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058228735732805455]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006924543190211678
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058228735732805455    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:56.221 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
10:34:56.221 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.RectangularCholeskyDecomposition:171 which is executed by 6 tests
1644006350
10:34:56.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
10:34:56.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:464 which is executed by 74 tests
-1875222545
10:34:56.568 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
10:34:56.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:461 which is executed by 74 tests
-1875222545
10:34:56.750 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006878277027608554
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005793249903255296
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:56.856 [pool-106-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (97 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006878277027608554
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005793249903255296]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006878277027608554
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005793249903255296    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:57.223 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
10:34:57.223 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:460 which is executed by 74 tests
-1875222545
10:34:57.409 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069088337667393114
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005809672168124663
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:57.521 [pool-114-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (101 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069088337667393114
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005809672168124663]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069088337667393114
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005809672168124663    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:57.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
10:34:57.846 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:459 which is executed by 74 tests
-1875222545
10:34:58.025 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006973391352665888
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058760741651861514
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:58.109 [pool-122-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (80 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006973391352665888
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058760741651861514]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006973391352665888
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058760741651861514    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:58.430 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
10:34:58.431 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:458 which is executed by 74 tests
-1875222545
10:34:58.608 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006977782493743002
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005882848713657725
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:34:58.674 [pool-130-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006977782493743002
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005882848713657725]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006977782493743002
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005882848713657725    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:34:59.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
10:34:59.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:457 which is executed by 74 tests
-1875222545
10:34:59.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
10:34:59.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:456 which is executed by 74 tests
-1875222545
10:34:59.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
10:34:59.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:272 which is executed by 79 tests
816641250
10:34:59.599 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
10:34:59.599 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:268 which is executed by 79 tests
816641250
10:34:59.800 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
10:34:59.801 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:266 which is executed by 79 tests
816641250
10:35:00.008 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069125919549200875
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005822873102645319
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:00.080 [pool-138-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (68 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069125919549200875
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005822873102645319]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069125919549200875
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005822873102645319    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:00.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
10:35:00.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:265 which is executed by 79 tests
816641250
10:35:01.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006827220568298404
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005745003686642814
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:01.128 [pool-146-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (104 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006827220568298404
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005745003686642814]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006827220568298404
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005745003686642814    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:01.689 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
10:35:01.689 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:264 which is executed by 79 tests
816641250
10:35:01.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007024047923824557
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005909385750893358
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:02.010 [pool-154-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007024047923824557
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005909385750893358]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007024047923824557
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005909385750893358    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:02.528 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006884274079155924
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005801378793433937
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:02.595 [pool-162-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006884274079155924
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005801378793433937]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006884274079155924
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005801378793433937    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:03.097 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
10:35:03.097 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:263 which is executed by 79 tests
816641250
10:35:03.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006712261914276416
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005655922838539905
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:03.363 [pool-170-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006712261914276416
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005655922838539905]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006712261914276416
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005655922838539905    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:03.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
10:35:03.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:259 which is executed by 79 tests
816641250
10:35:04.100 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
10:35:04.100 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:258 which is executed by 79 tests
816641250
10:35:04.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007048943462970363
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059246604339366305
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:04.367 [pool-178-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007048943462970363
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059246604339366305]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007048943462970363
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059246604339366305    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:04.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
10:35:04.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:257 which is executed by 79 tests
816641250
10:35:05.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006997371635745928
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005884518729237794
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:05.165 [pool-186-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006997371635745928
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005884518729237794]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006997371635745928
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005884518729237794    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:05.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
10:35:05.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$1:256 which is executed by 79 tests
816641250
10:35:05.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007029084275700352
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005921721482012685
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:05.949 [pool-194-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (72 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007029084275700352
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005921721482012685]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007029084275700352
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005921721482012685    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:06.518 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
10:35:06.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:241 which is executed by 79 tests
816641250
10:35:06.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
10:35:06.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.GaussianRandomGenerator:44 which is executed by 10 tests
-764342858
10:35:06.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
10:35:06.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:158 which is executed by 105 tests
816641250
10:35:07.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
10:35:07.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:154 which is executed by 105 tests
816641250
10:35:07.324 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070143179460441605
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005900276538937718
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:07.390 [pool-202-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070143179460441605
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005900276538937718]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070143179460441605
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005900276538937718    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:07.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
10:35:07.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:152 which is executed by 105 tests
816641250
10:35:08.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070724281997334385
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005954626285102705
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:08.189 [pool-210-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070724281997334385
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005954626285102705]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070724281997334385
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005954626285102705    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:08.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
10:35:08.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:151 which is executed by 105 tests
816641250
10:35:08.879 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006837027207974432
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005765239304582048
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:08.944 [pool-218-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006837027207974432
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005765239304582048]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006837027207974432
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005765239304582048    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:09.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
10:35:09.493 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:150 which is executed by 105 tests
816641250
10:35:09.679 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
10:35:09.679 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:149 which is executed by 105 tests
816641250
10:35:09.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007007775628762286
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059026862655297135
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:09.927 [pool-226-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007007775628762286
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059026862655297135]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007007775628762286
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0059026862655297135    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:10.455 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
10:35:10.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:148 which is executed by 105 tests
816641250
10:35:10.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007035818666785999
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005927497065332908
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:10.749 [pool-234-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (104 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007035818666785999
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005927497065332908]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007035818666785999
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005927497065332908    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:11.287 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
10:35:11.287 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:147 which is executed by 105 tests
816641250
10:35:11.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
10:35:11.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:146 which is executed by 105 tests
816641250
10:35:11.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
10:35:11.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:145 which is executed by 105 tests
816641250
10:35:11.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
10:35:11.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:144 which is executed by 105 tests
816641250
10:35:12.029 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
10:35:12.029 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:142 which is executed by 105 tests
816641250
10:35:12.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007012407751599843
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005910791052461175
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:12.280 [pool-242-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007012407751599843
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005910791052461175]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007012407751599843
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005910791052461175    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:12.808 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
10:35:12.808 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:81 which is executed by 115 tests
1308483921
10:35:13.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
10:35:13.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:545 which is executed by 131 tests
1308483921
10:35:13.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
10:35:13.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:541 which is executed by 131 tests
1308483921
10:35:13.391 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068670991081671235
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00578790925289726
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:13.463 [pool-250-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (66 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068670991081671235
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00578790925289726]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0068670991081671235
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00578790925289726    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:13.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006955929614376111
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005850237388324165
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:14.027 [pool-258-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (91 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006955929614376111
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005850237388324165]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006955929614376111
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005850237388324165    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:14.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
10:35:14.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$5:598 which is executed by 162 tests
816641250
10:35:14.604 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
10:35:14.604 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix$5:597 which is executed by 162 tests
816641250
10:35:14.791 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006880729702152319
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005797456718085467
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:14.856 [pool-266-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006880729702152319
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005797456718085467]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006880729702152319
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005797456718085467    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:15.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
10:35:15.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:602 which is executed by 162 tests
816641250
10:35:15.574 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
10:35:15.574 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:592 which is executed by 162 tests
816641250
10:35:15.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00699039093435435
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005892531373177287
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:15.836 [pool-274-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (71 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00699039093435435
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005892531373177287]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00699039093435435
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005892531373177287    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:16.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
10:35:16.406 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:591 which is executed by 162 tests
816641250
10:35:16.594 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
10:35:16.594 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:590 which is executed by 162 tests
816641250
10:35:16.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
10:35:16.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:589 which is executed by 162 tests
816641250
10:35:16.998 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
10:35:16.998 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:401 which is executed by 163 tests
-1875222545
10:35:17.172 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
10:35:17.172 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:398 which is executed by 163 tests
-1875222545
10:35:17.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007023256627438769
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005919665697564362
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:17.410 [pool-282-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007023256627438769
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005919665697564362]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007023256627438769
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005919665697564362    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:17.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
10:35:17.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:397 which is executed by 163 tests
-1875222545
10:35:17.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007121387026248476
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005997733008573343
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:18.004 [pool-290-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007121387026248476
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005997733008573343]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007121387026248476
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005997733008573343    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:18.335 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
10:35:18.335 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:396 which is executed by 163 tests
-1875222545
10:35:18.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
10:35:18.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:395 which is executed by 163 tests
-1875222545
10:35:18.681 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00698979401658189
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005881932982623216
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:18.747 [pool-298-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (59 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00698979401658189
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005881932982623216]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00698979401658189
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005881932982623216    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:19.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
10:35:19.092 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:394 which is executed by 163 tests
-1875222545
10:35:19.273 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069584755928720375
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005851199280299613
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:19.374 [pool-306-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (98 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069584755928720375
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005851199280299613]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069584755928720375
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005851199280299613    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:19.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
10:35:19.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:393 which is executed by 163 tests
-1875222545
10:35:19.879 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
10:35:19.879 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:392 which is executed by 163 tests
-1875222545
10:35:20.053 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
10:35:20.053 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:860 which is executed by 164 tests
816641250
10:35:20.242 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
10:35:20.242 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor:34 which is executed by 164 tests
-69848058
10:35:20.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
10:35:20.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor:41 which is executed by 168 tests
-69848058
10:35:20.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
10:35:20.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:108 which is executed by 84 tests
816641250
10:35:20.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
10:35:20.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:104 which is executed by 84 tests
816641250
10:35:20.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:35:20.956 [pool-314-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 4
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

10:35:21.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
10:35:21.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:103 which is executed by 84 tests
816641250
10:35:21.557 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:35:21.576 [pool-320-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 4
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

10:35:21.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
10:35:21.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:102 which is executed by 84 tests
816641250
10:35:22.172 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:35:22.191 [pool-326-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 4
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

10:35:22.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
10:35:22.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:101 which is executed by 84 tests
816641250
10:35:22.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
10:35:22.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:100 which is executed by 84 tests
816641250
10:35:22.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
10:35:22.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:99 which is executed by 84 tests
816641250
10:35:23.157 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
10:35:23.157 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.AbstractRealMatrix:97 which is executed by 84 tests
816641250
10:35:23.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:35:23.358 [pool-332-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 4
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

10:35:23.760 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
10:35:23.760 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:246 which is executed by 193 tests
-1875222545
10:35:23.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
10:35:23.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:138 which is executed by 193 tests
-1875222545
10:35:24.109 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
10:35:24.109 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:512 which is executed by 200 tests
-1875222545
10:35:24.283 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
10:35:24.283 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:510 which is executed by 200 tests
-1875222545
10:35:24.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007005576524108398
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005895870078504293
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:24.519 [pool-338-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007005576524108398
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005895870078504293]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007005576524108398
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005895870078504293    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:24.804 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
10:35:24.804 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:509 which is executed by 200 tests
-1875222545
10:35:24.978 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007145354488997773
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006023935996769511
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:25.045 [pool-346-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007145354488997773
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006023935996769511]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007145354488997773
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.006023935996769511    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:25.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
10:35:25.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:507 which is executed by 200 tests
-1875222545
10:35:25.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
10:35:25.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:506 which is executed by 200 tests
-1875222545
10:35:25.680 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
10:35:25.680 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:528 which is executed by 103 tests
1308483921
10:35:25.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
10:35:25.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:523 which is executed by 103 tests
1308483921
10:35:26.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:35:26.065 [pool-354-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 4
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

10:35:26.338 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:35:26.356 [pool-360-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (17 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 4
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

10:35:26.643 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
10:35:26.643 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:304 which is executed by 273 tests
-1875222545
10:35:26.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
10:35:26.817 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:303 which is executed by 273 tests
-1875222545
10:35:26.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006849477607186939
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005758361167858885
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:27.051 [pool-366-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (59 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006849477607186939
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005758361167858885]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006849477607186939
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005758361167858885    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:27.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
10:35:27.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:302 which is executed by 273 tests
-1875222545
10:35:27.503 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006900863384922345
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005811232537582188
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:27.569 [pool-374-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006900863384922345
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005811232537582188]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006900863384922345
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005811232537582188    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:27.869 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
10:35:27.869 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:527 which is executed by 274 tests
-1875222545
10:35:28.049 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
10:35:28.049 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:526 which is executed by 274 tests
-1875222545
10:35:28.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006903879652644555
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00580977980426452
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:28.304 [pool-382-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (67 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006903879652644555
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00580977980426452]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006903879652644555
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00580977980426452    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:28.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
10:35:28.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:290 which is executed by 274 tests
-1875222545
10:35:28.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
10:35:28.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:286 which is executed by 274 tests
-1875222545
10:35:28.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
10:35:28.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:284 which is executed by 274 tests
-1875222545
10:35:29.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006967642804739399
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005872853954927212
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:29.221 [pool-390-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (79 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006967642804739399
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005872853954927212]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006967642804739399
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005872853954927212    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:29.524 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
10:35:29.524 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:281 which is executed by 274 tests
-1875222545
10:35:29.695 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 2 differ.  expected = 0.023006616 observed = 0.02196684024400409
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:168)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:29.757 [pool-398-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (59 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 2 differ.  expected = 0.023006616 observed = 0.02196684024400409]
java.lang.AssertionError: Array comparison failure
 Elements at index 2 differ.  expected = 0.023006616 observed = 0.02196684024400409    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:168)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:30.066 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007102858160111589
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005994488097771558
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:30.132 [pool-406-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007102858160111589
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005994488097771558]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007102858160111589
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005994488097771558    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:30.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #127
10:35:30.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:280 which is executed by 274 tests
-1875222545
10:35:30.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0071082578917221586
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005980648781424141
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:30.756 [pool-414-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (62 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0071082578917221586
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005980648781424141]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0071082578917221586
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005980648781424141    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:31.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #128
10:35:31.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:279 which is executed by 274 tests
-1875222545
10:35:31.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069678410786568135
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005864192186811462
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:31.332 [pool-422-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069678410786568135
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005864192186811462]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069678410786568135
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005864192186811462    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:31.593 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #129
10:35:31.594 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:276 which is executed by 274 tests
-1875222545
10:35:31.764 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006928031730595105
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005829016803623589
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:31.825 [pool-430-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006928031730595105
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005829016803623589]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006928031730595105
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005829016803623589    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:32.130 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069620044310738935
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005851652067148534
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:32.191 [pool-438-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069620044310738935
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005851652067148534]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069620044310738935
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005851652067148534    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:32.461 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #130
10:35:32.461 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:275 which is executed by 274 tests
-1875222545
10:35:32.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #131
10:35:32.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:271 which is executed by 274 tests
-1875222545
10:35:32.809 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006932926966701918
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005836575580293632
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:32.874 [pool-446-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (61 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006932926966701918
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005836575580293632]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006932926966701918
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005836575580293632    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:33.196 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006930792939670381
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005829870417688878
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:33.256 [pool-454-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006930792939670381
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005829870417688878]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006930792939670381
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005829870417688878    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:33.524 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #132
10:35:33.524 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:270 which is executed by 274 tests
-1875222545
10:35:33.695 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #133
10:35:33.695 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:269 which is executed by 274 tests
-1875222545
10:35:33.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007014117629185721
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005913580541993264
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:33.928 [pool-462-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007014117629185721
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005913580541993264]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007014117629185721
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005913580541993264    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:34.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #134
10:35:34.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:266 which is executed by 274 tests
-1875222545
10:35:34.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006836049708615151
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005757716065367526
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:34.485 [pool-470-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006836049708615151
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005757716065367526]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006836049708615151
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005757716065367526    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:34.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007020022273507743
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005915229782200875
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:34.832 [pool-478-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007020022273507743
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005915229782200875]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007020022273507743
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005915229782200875    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:35.097 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #135
10:35:35.097 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:263 which is executed by 274 tests
-1875222545
10:35:35.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007052096752518461
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005939858673867107
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:35.328 [pool-486-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007052096752518461
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005939858673867107]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007052096752518461
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005939858673867107    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:35.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007046181508021539
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005938564718749811
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:35.678 [pool-494-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007046181508021539
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005938564718749811]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007046181508021539
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005938564718749811    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:35.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #136
10:35:35.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:262 which is executed by 274 tests
-1875222545
10:35:36.115 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006976792119122446
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058743089962920506
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:36.176 [pool-502-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006976792119122446
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058743089962920506]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006976792119122446
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.0058743089962920506    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:36.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007057117568852916
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005938650109705509
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:36.501 [pool-510-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007057117568852916
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005938650109705509]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007057117568852916
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005938650109705509    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:36.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #137
10:35:36.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:296 which is executed by 274 tests
-1875222545
10:35:36.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #138
10:35:36.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:295 which is executed by 274 tests
-1875222545
10:35:37.118 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006984540766474326
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005873880185305181
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:37.179 [pool-518-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006984540766474326
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005873880185305181]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006984540766474326
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005873880185305181    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:37.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #139
10:35:37.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3523 which is executed by 334 tests
1033054629
10:35:37.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #140
10:35:37.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3520 which is executed by 334 tests
1033054629
10:35:37.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069757957147477696
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005879246775882022
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:38.049 [pool-526-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (102 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069757957147477696
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005879246775882022]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069757957147477696
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005879246775882022    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:39.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006929121583951263
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005832180908591265
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:39.148 [pool-534-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006929121583951263
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005832180908591265]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006929121583951263
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005832180908591265    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:40.132 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #141
10:35:40.132 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3519 which is executed by 334 tests
1033054629
10:35:40.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #142
10:35:40.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3514 which is executed by 337 tests
1033054629
10:35:40.567 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006957304872567152
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005869100866555593
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:40.647 [pool-542-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (77 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006957304872567152
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005869100866555593]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006957304872567152
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005869100866555593    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:41.680 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006811562888742071
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005737570063068579
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:41.745 [pool-550-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (61 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006811562888742071
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005737570063068579]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006811562888742071
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005737570063068579    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:42.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #143
10:35:42.705 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:391 which is executed by 357 tests
1308483921
10:35:42.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #144
10:35:42.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:390 which is executed by 357 tests
1308483921
10:35:43.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070395772694707495
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005926595902259907
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:43.137 [pool-558-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070395772694707495
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005926595902259907]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0070395772694707495
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005926595902259907    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:43.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #145
10:35:43.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:389 which is executed by 357 tests
1308483921
10:35:43.688 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00683368106426206
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005754137495168689
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:43.749 [pool-566-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00683368106426206
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005754137495168689]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00683368106426206
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005754137495168689    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:44.105 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #146
10:35:44.106 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:323 which is executed by 360 tests
-1875222545
10:35:44.277 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #147
10:35:44.277 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.Array2DRowRealMatrix:329 which is executed by 361 tests
-1875222545
10:35:44.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #148
10:35:44.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:103 which is executed by 41 tests
10:35:44.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:103
10:35:44.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #149
10:35:44.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:102 which is executed by 41 tests
10:35:44.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:102
10:35:44.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #150
10:35:44.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:407 which is executed by 390 tests
1308483921
10:35:44.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #151
10:35:44.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:402 which is executed by 390 tests
1308483921
10:35:44.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007026893742476804
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005911895488933604
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:44.879 [pool-574-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007026893742476804
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005911895488933604]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007026893742476804
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005911895488933604    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:45.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007007045397903623
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005898297039516855
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:45.297 [pool-582-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007007045397903623
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005898297039516855]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007007045397903623
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005898297039516855    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:45.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #152
10:35:45.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:422 which is executed by 391 tests
1308483921
10:35:45.809 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #153
10:35:45.809 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:418 which is executed by 391 tests
1308483921
10:35:45.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007035155152447726
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005929896214173364
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:46.057 [pool-590-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007035155152447726
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005929896214173364]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007035155152447726
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005929896214173364    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:46.447 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006954969317876614
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866842168366805
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:46.511 [pool-598-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (61 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006954969317876614
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866842168366805]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006954969317876614
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005866842168366805    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:46.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #154
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:367 which is executed by 45 tests
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:367
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #155
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:364 which is executed by 45 tests
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:364
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #156
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:353 which is executed by 45 tests
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:353
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #157
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:352 which is executed by 45 tests
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:352
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #158
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:351 which is executed by 45 tests
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:351
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #159
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:343 which is executed by 45 tests
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:343
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #160
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.TestUtils:342 which is executed by 45 tests
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.commons.math3.TestUtils:342
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #161
10:35:46.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:287 which is executed by 46 tests
627790943
10:35:46.998 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #162
10:35:46.998 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:134 which is executed by 184 tests
1308483921
10:35:47.188 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #163
10:35:47.189 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.linear.MatrixUtils:130 which is executed by 184 tests
1308483921
10:35:47.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:35:47.387 [pool-606-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 4
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

10:35:47.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
10:35:47.666 [pool-612-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16 ms)
<> Total tests run: 6
<> Ignored tests: 0
<> Failed tests: 4
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

10:35:47.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #164
10:35:47.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3508 which is executed by 424 tests
1033054629
10:35:48.152 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069258255186832205
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005831506499710627
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:48.216 [pool-618-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069258255186832205
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005831506499710627]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069258255186832205
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005831506499710627    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:49.183 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #165
10:35:49.183 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3511 which is executed by 497 tests
1033054629
10:35:49.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069494981664291935
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005852477925782394
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:49.457 [pool-626-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069494981664291935
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005852477925782394]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.0069494981664291935
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005852477925782394    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:50.436 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #166
10:35:50.436 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3510 which is executed by 570 tests
1033054629
10:35:50.647 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00685699633403804
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00577741606364211
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:50.713 [pool-634-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00685699633403804
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00577741606364211]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.00685699633403804
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00577741606364211    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:51.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006979796284885778
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005877885236743594
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:51.726 [pool-642-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006979796284885778
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005877885236743594]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006979796284885778
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005877885236743594    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:52.654 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #167
10:35:52.654 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3507 which is executed by 594 tests
1033054629
10:35:52.866 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006728347401365008
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005671762402736046
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:52.929 [pool-650-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (60 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006728347401365008
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005671762402736046]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006728347401365008
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005671762402736046    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:53.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006929649052330853
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00582187728180303
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:35:53.906 [pool-658-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (58 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006929649052330853
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00582187728180303]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006929649052330853
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00582187728180303    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:35:54.832 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #168
10:35:54.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:601 which is executed by 81 tests
1857420685
10:35:55.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #169
10:35:55.006 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:578 which is executed by 81 tests
1857420685
10:35:55.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:36:04.166 [pool-666-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8984 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:36:04.590 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:36:13.640 [pool-670-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9045 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:36:14.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #170
10:36:14.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:570 which is executed by 81 tests
1857420685
10:36:14.187 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #171
10:36:14.187 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:568 which is executed by 81 tests
1857420685
10:36:14.356 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:36:23.385 [pool-674-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9025 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:36:23.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #172
10:36:23.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:564 which is executed by 81 tests
1857420685
10:36:23.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:36:32.918 [pool-678-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8964 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:36:33.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #173
10:36:33.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:563 which is executed by 81 tests
1857420685
10:36:33.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:36:42.570 [pool-682-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9105 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:36:42.982 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:36:51.977 [pool-686-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8991 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:36:52.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #174
10:36:52.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:562 which is executed by 81 tests
1857420685
10:36:52.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:37:01.542 [pool-690-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9029 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:37:01.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #175
10:37:01.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:561 which is executed by 81 tests
1857420685
10:37:02.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:37:11.152 [pool-694-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9072 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:37:11.524 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #176
10:37:11.525 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:559 which is executed by 81 tests
1857420685
10:37:11.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:37:20.916 [pool-698-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9214 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:37:21.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #177
10:37:21.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:555 which is executed by 81 tests
1857420685
10:37:21.438 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:37:30.453 [pool-702-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9009 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:37:30.836 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #178
10:37:30.836 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:554 which is executed by 81 tests
1857420685
10:37:31.004 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:37:40.072 [pool-706-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9063 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:37:40.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:37:49.531 [pool-710-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9087 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:37:49.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #179
10:37:49.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:551 which is executed by 81 tests
1857420685
10:37:50.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:37:59.073 [pool-714-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9008 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:37:59.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #180
10:37:59.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:550 which is executed by 81 tests
1857420685
10:37:59.609 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:38:08.600 [pool-718-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (8986 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:38:08.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #181
10:38:08.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:549 which is executed by 81 tests
1857420685
10:38:09.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:38:18.163 [pool-722-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9041 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:38:18.530 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:38:27.586 [pool-726-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9052 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

10:38:27.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #182
10:38:27.943 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:546 which is executed by 81 tests
1857420685
10:38:28.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:38:37.191 [pool-730-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9074 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:38:37.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #183
10:38:37.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:545 which is executed by 81 tests
1857420685
10:38:37.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:38:46.752 [pool-734-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9021 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:38:47.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #184
10:38:47.114 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:544 which is executed by 81 tests
1857420685
10:38:47.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:38:56.501 [pool-738-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9211 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:38:56.856 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:39:05.997 [pool-742-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9136 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:39:06.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #185
10:39:06.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:541 which is executed by 81 tests
1857420685
10:39:06.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:39:15.670 [pool-746-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9037 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:39:16.041 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #186
10:39:16.041 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:540 which is executed by 81 tests
1857420685
10:39:16.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:39:25.360 [pool-750-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9146 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:39:25.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:39:34.752 [pool-754-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9022 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:39:35.127 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #187
10:39:35.127 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:538 which is executed by 81 tests
1857420685
10:39:35.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:39:44.547 [pool-758-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9248 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:39:44.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #188
10:39:44.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:537 which is executed by 81 tests
1857420685
10:39:45.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:39:54.236 [pool-762-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9155 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:39:54.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #189
10:39:54.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:535 which is executed by 81 tests
1857420685
10:39:54.786 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #190
10:39:54.786 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:533 which is executed by 81 tests
1857420685
10:39:54.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #191
10:39:54.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:532 which is executed by 81 tests
1857420685
10:39:55.120 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #192
10:39:55.120 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:531 which is executed by 81 tests
1857420685
10:39:55.287 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #193
10:39:55.287 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:530 which is executed by 81 tests
1857420685
10:39:55.454 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #194
10:39:55.454 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:332 which is executed by 81 tests
1857420685
10:39:55.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #195
10:39:55.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:331 which is executed by 81 tests
1857420685
10:39:55.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:04.840 [pool-766-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9042 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:05.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #196
10:40:05.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:269 which is executed by 81 tests
1857420685
10:40:05.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #197
10:40:05.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:251 which is executed by 81 tests
1857420685
10:40:05.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #198
10:40:05.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1488 which is executed by 81 tests
68623
10:40:05.758 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #199
10:40:05.759 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1485 which is executed by 81 tests
68623
10:40:05.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:15.309 [pool-770-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9345 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:15.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #200
10:40:15.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1484 which is executed by 81 tests
68623
10:40:16.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:25.136 [pool-774-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9085 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:25.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #201
10:40:25.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1482 which is executed by 81 tests
68623
10:40:25.817 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:34.828 [pool-778-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9006 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:35.438 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:44.740 [pool-782-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9297 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:45.213 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #202
10:40:45.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1476 which is executed by 81 tests
68623
10:40:45.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:54.490 [pool-786-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9071 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:54.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:04.031 [pool-790-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9073 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:04.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #203
10:41:04.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1470 which is executed by 81 tests
68623
10:41:04.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:13.814 [pool-794-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9102 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:14.378 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:23.652 [pool-798-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9270 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:24.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #204
10:41:24.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1463 which is executed by 81 tests
68623
10:41:24.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:33.345 [pool-802-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9001 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:33.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:42.938 [pool-806-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9075 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:43.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #205
10:41:43.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1460 which is executed by 81 tests
68623
10:41:43.598 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:52.666 [pool-810-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9063 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:53.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #206
10:41:53.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1459 which is executed by 81 tests
68623
10:41:53.360 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:42:02.599 [pool-814-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9235 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

10:45:22.891 [pool-813-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:45:22.891 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:45:22.891 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #207
10:45:22.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1458 which is executed by 81 tests
68623
10:45:23.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #208
10:45:23.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1457 which is executed by 81 tests
68623
10:45:23.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:45:32.451 [pool-817-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9147 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:46:13.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #209
10:46:13.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1456 which is executed by 81 tests
68623
10:46:13.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #210
10:46:13.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1454 which is executed by 81 tests
68623
10:46:14.073 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:46:23.164 [pool-821-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9087 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:46:23.758 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:46:32.990 [pool-825-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9229 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:46:33.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #211
10:46:33.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1438 which is executed by 81 tests
68623
10:46:33.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:46:42.863 [pool-829-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9135 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:46:43.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #212
10:46:43.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1437 which is executed by 81 tests
68623
10:46:43.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:46:52.743 [pool-833-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9188 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:46:53.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #213
10:46:53.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1419 which is executed by 81 tests
68623
10:46:53.415 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:47:02.580 [pool-837-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9161 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:47:03.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #214
10:47:03.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1418 which is executed by 81 tests
68623
10:47:03.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #215
10:47:03.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:642 which is executed by 81 tests
68623
10:47:03.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #216
10:47:03.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:217 which is executed by 83 tests
1648821820
10:47:03.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #217
10:47:03.711 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:216 which is executed by 83 tests
1648821820
10:47:03.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:47:12.999 [pool-841-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9121 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:47:13.344 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #218
10:47:13.344 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:207 which is executed by 84 tests
1648821820
10:47:13.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #219
10:47:13.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:205 which is executed by 84 tests
1648821820
10:47:13.671 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:47:22.758 [pool-845-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9083 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:47:23.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #220
10:47:23.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:203 which is executed by 84 tests
1648821820
10:47:23.281 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:47:32.435 [pool-849-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9150 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:47:32.876 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #221
10:47:32.876 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:199 which is executed by 84 tests
1648821820
10:47:33.039 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:47:42.284 [pool-853-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9241 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:47:42.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #222
10:47:42.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:198 which is executed by 84 tests
1648821820
10:47:42.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:47:51.934 [pool-857-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9136 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:47:52.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #223
10:47:52.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:197 which is executed by 84 tests
1648821820
10:47:52.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:48:01.692 [pool-861-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9188 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:48:02.041 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:48:11.193 [pool-865-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9147 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:48:11.543 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #224
10:48:11.543 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:196 which is executed by 84 tests
1648821820
10:48:11.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:48:20.839 [pool-869-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9127 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:48:21.182 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #225
10:48:21.182 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:195 which is executed by 84 tests
1648821820
10:48:21.356 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:48:30.550 [pool-873-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9190 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:48:30.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #226
10:48:30.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:194 which is executed by 84 tests
1648821820
10:48:31.056 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #227
10:48:31.056 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:193 which is executed by 84 tests
1648821820
10:48:31.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #228
10:48:31.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:192 which is executed by 84 tests
1648821820
10:48:31.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #229
10:48:31.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:191 which is executed by 84 tests
1648821820
10:48:31.558 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:48:40.705 [pool-877-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9143 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:48:41.065 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #230
10:48:41.065 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:187 which is executed by 84 tests
1648821820
10:48:41.228 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:48:50.478 [pool-881-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9246 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:48:50.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #231
10:48:50.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:186 which is executed by 84 tests
1648821820
10:48:51.006 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:49:00.114 [pool-885-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9103 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:49:00.471 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:49:09.597 [pool-889-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9122 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:49:09.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #232
10:49:09.953 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:184 which is executed by 84 tests
1648821820
10:49:10.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:49:19.263 [pool-893-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9142 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:49:19.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #233
10:49:19.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:183 which is executed by 84 tests
1648821820
10:49:19.785 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:49:28.957 [pool-897-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9168 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:49:29.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #234
10:49:29.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:182 which is executed by 84 tests
1648821820
10:49:29.465 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:49:38.551 [pool-901-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9082 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:49:38.894 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:49:48.011 [pool-905-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9113 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:49:48.361 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #235
10:49:48.362 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:181 which is executed by 84 tests
1648821820
10:49:48.524 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:49:57.670 [pool-909-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9141 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:49:58.049 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #236
10:49:58.049 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:180 which is executed by 84 tests
1648821820
10:49:58.212 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:50:07.381 [pool-913-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9165 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:50:07.738 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #237
10:50:07.738 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:179 which is executed by 84 tests
1648821820
10:50:07.903 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #238
10:50:07.904 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:178 which is executed by 84 tests
1648821820
10:50:08.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #239
10:50:08.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:177 which is executed by 84 tests
1648821820
10:50:08.231 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #240
10:50:08.231 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:176 which is executed by 84 tests
1648821820
10:50:08.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:50:17.550 [pool-917-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9150 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:50:17.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #241
10:50:17.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:174 which is executed by 84 tests
1648821820
10:50:18.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #242
10:50:18.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:173 which is executed by 84 tests
1648821820
10:50:18.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #243
10:50:18.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:172 which is executed by 84 tests
1648821820
10:50:18.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:50:27.541 [pool-921-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9147 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:50:27.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #244
10:50:27.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:167 which is executed by 84 tests
1648821820
10:50:28.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:50:37.304 [pool-925-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9229 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:50:37.652 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:50:46.858 [pool-929-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9202 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:50:47.221 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #245
10:50:47.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.MathUtils:267 which is executed by 777 tests
-1550426518
10:50:47.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #246
10:50:47.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.MathUtils:264 which is executed by 782 tests
-1550426518
10:50:47.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006792694572261182
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005725903584060885
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:50:47.634 [pool-933-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (82 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006792694572261182
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005725903584060885]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006792694572261182
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005725903584060885    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:50:47.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006890605727645152
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005797870621658494
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:50:47.970 [pool-941-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (68 ms)
<> Total tests run: 11
<> Ignored tests: 0
<> Failed tests: 5
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testMath789(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[expected:<0.0> but was:<0.0180652917341963>]
java.lang.AssertionError: expected:<0.0> but was:<0.0180652917341963>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testFullRank(org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006890605727645152
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005797870621658494]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006890605727645152
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005797870621658494    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:50:48.242 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #247
10:50:48.242 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:155 which is executed by 129 tests
1648821820
10:50:48.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #248
10:50:48.419 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:154 which is executed by 129 tests
1648821820
10:50:48.581 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:50:57.800 [pool-949-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9215 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:50:58.199 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #249
10:50:58.199 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:151 which is executed by 129 tests
1648821820
10:50:58.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:51:07.517 [pool-953-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9149 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:51:07.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #250
10:51:07.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:150 which is executed by 129 tests
1648821820
10:51:08.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:51:17.192 [pool-957-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9127 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:51:17.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #251
10:51:17.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:147 which is executed by 129 tests
1648821820
10:51:17.763 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:51:26.927 [pool-961-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9160 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:51:27.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #252
10:51:27.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:146 which is executed by 129 tests
1648821820
10:51:27.447 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:51:36.729 [pool-965-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9277 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:51:37.095 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #253
10:51:37.095 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:144 which is executed by 129 tests
1648821820
10:51:37.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #254
10:51:37.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:257 which is executed by 129 tests
627790943
10:51:37.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #255
10:51:37.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:375 which is executed by 1556 tests
1033054629
10:51:37.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #256
10:51:37.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2992 which is executed by 1594 tests
1033054629
10:51:37.848 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #257
10:51:37.849 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3464 which is executed by 295 tests
1033054629
10:51:38.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #258
10:51:38.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:321 which is executed by 741 tests
627790943
10:51:38.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #259
10:51:38.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:319 which is executed by 741 tests
627790943
10:51:38.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #260
10:51:38.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:315 which is executed by 741 tests
627790943
10:51:38.556 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007008906272385829
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005903925525075697
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:51:38.620 [pool-969-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (61 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007008906272385829
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005903925525075697]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.007008906272385829
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005903925525075697    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:51:38.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: Array comparison failure
 Elements at index 2 differ.  expected = 0.019023866 observed = 0.02002514508240843
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:51:38.947 [pool-973-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (44 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 2 differ.  expected = 0.019023866 observed = 0.02002514508240843]
java.lang.AssertionError: Array comparison failure
 Elements at index 2 differ.  expected = 0.019023866 observed = 0.02002514508240843    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:167)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:51:39.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #261
10:51:39.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:312 which is executed by 741 tests
627790943
10:51:39.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006986940625028456
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005894384055852838
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:51:39.463 [pool-977-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (64 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006986940625028456
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005894384055852838]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006986940625028456
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.005894384055852838    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:51:39.750 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006853882599232068
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00576781909229419
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:51:39.815 [pool-981-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (63 ms)
<> Total tests run: 5
<> Ignored tests: 0
<> Failed tests: 1
~ testSampleWithZeroCovariance(org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006853882599232068
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00576781909229419]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.013445532 observed = 0.006853882599232068
 Elements at index 3 differ.  expected = 0.009881156 observed = 0.00576781909229419    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampler(CorrelatedRandomVectorGeneratorTest.java:193)
    at org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance(CorrelatedRandomVectorGeneratorTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:51:40.081 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #262
10:51:40.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:309 which is executed by 741 tests
627790943
10:51:40.247 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #263
10:51:40.247 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.Precision:308 which is executed by 741 tests
627790943
10:51:40.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #264
10:51:40.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2974 which is executed by 801 tests
1033054629
10:51:40.634 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #265
10:51:40.634 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:166 which is executed by 1039 tests
936233262
10:51:40.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #266
10:51:40.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:165 which is executed by 1039 tests
936233262
10:51:40.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:51:50.145 [pool-985-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9182 ms)
<> Total tests run: 44
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:51:50.513 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
10:51:50.717 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 608
10:51:50.718 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 4024
10:51:50.718 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 177
10:51:50.718 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
10:51:50.718 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 1523042ms
10:51:50.718 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_ANGELIC_VALUE
Command exited with non-zero status 255
2344.71user 33.17system 25:25.23elapsed 155%CPU (0avgtext+0avgdata 1124332maxresident)k
51560inputs+10656outputs (4major+624593minor)pagefaults 0swaps


Node: graphene-65.nancy.grid5000.fr



Date: Sat Dec  1 10:51:51 EST 2018

