cd /tmp/DynaMoth_Defects4J_Math_44;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -d64 -Xmx4g -Xms1g -XX:MaxPermSize=1024m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSClassUnloadingEnabled -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis dynamoth \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 5 \
	--source src/main/java/ \
	--classpath "target/classes/:target/test-classes/:/tmp/DynaMoth_Defects4J_Math_44/target/classes/:/tmp/DynaMoth_Defects4J_Math_44/target/test-classes/:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1024m; support was removed in 8.0
10:21:22.660 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
10:21:22.664 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/DynaMoth_Defects4J_Math_44/target/classes/, file:/tmp/DynaMoth_Defects4J_Math_44/target/test-classes/, file:/tmp/DynaMoth_Defects4J_Math_44/target/classes/, file:/tmp/DynaMoth_Defects4J_Math_44/target/test-classes/, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
10:21:22.664 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
10:21:22.665 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math.MathExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.RetryRunnerTest, org.apache.commons.math.RetryRunnerTest, org.apache.commons.math.analysis.FunctionUtilsTest, org.apache.commons.math.analysis.FunctionUtilsTest, org.apache.commons.math.analysis.function.GaussianTest, org.apache.commons.math.analysis.function.GaussianTest, org.apache.commons.math.analysis.function.HarmonicOscillatorTest, org.apache.commons.math.analysis.function.HarmonicOscillatorTest, org.apache.commons.math.analysis.function.LogisticTest, org.apache.commons.math.analysis.function.LogisticTest, org.apache.commons.math.analysis.function.LogitTest, org.apache.commons.math.analysis.function.LogitTest, org.apache.commons.math.analysis.function.SigmoidTest, org.apache.commons.math.analysis.function.SigmoidTest, org.apache.commons.math.analysis.function.SincTest, org.apache.commons.math.analysis.function.SincTest, org.apache.commons.math.analysis.function.SqrtTest, org.apache.commons.math.analysis.function.SqrtTest, org.apache.commons.math.analysis.function.StepFunctionTest, org.apache.commons.math.analysis.function.StepFunctionTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.IllinoisSolverTest, org.apache.commons.math.analysis.solvers.IllinoisSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.MullerSolver2Test, org.apache.commons.math.analysis.solvers.MullerSolver2Test, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.PegasusSolverTest, org.apache.commons.math.analysis.solvers.PegasusSolverTest, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.SecantSolverTest, org.apache.commons.math.analysis.solvers.SecantSolverTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math.dfp.DfpDecTest, org.apache.commons.math.dfp.DfpDecTest, org.apache.commons.math.dfp.DfpMathTest, org.apache.commons.math.dfp.DfpMathTest, org.apache.commons.math.dfp.DfpTest, org.apache.commons.math.dfp.DfpTest, org.apache.commons.math.distribution.AbtractIntegerDistributionTest, org.apache.commons.math.distribution.AbtractIntegerDistributionTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.exception.DimensionMismatchExceptionTest, org.apache.commons.math.exception.DimensionMismatchExceptionTest, org.apache.commons.math.exception.MaxCountExceededExceptionTest, org.apache.commons.math.exception.MaxCountExceededExceptionTest, org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math.exception.NotPositiveExceptionTest, org.apache.commons.math.exception.NotPositiveExceptionTest, org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math.exception.OutOfRangeExceptionTest, org.apache.commons.math.exception.OutOfRangeExceptionTest, org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math.exception.util.ArgUtilsTest, org.apache.commons.math.exception.util.ArgUtilsTest, org.apache.commons.math.exception.util.ExceptionContextTest, org.apache.commons.math.exception.util.ExceptionContextTest, org.apache.commons.math.filter.KalmanFilterTest, org.apache.commons.math.filter.KalmanFilterTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math.geometry.euclidean.threed.LineTest, org.apache.commons.math.geometry.euclidean.threed.LineTest, org.apache.commons.math.geometry.euclidean.threed.PlaneTest, org.apache.commons.math.geometry.euclidean.threed.PlaneTest, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math.geometry.euclidean.threed.RotationTest, org.apache.commons.math.geometry.euclidean.threed.RotationTest, org.apache.commons.math.geometry.euclidean.threed.SubLineTest, org.apache.commons.math.geometry.euclidean.threed.SubLineTest, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math.geometry.euclidean.twod.LineTest, org.apache.commons.math.geometry.euclidean.twod.LineTest, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math.geometry.euclidean.twod.SubLineTest, org.apache.commons.math.geometry.euclidean.twod.SubLineTest, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.CholeskyDecompositionTest, org.apache.commons.math.linear.CholeskyDecompositionTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.ConjugateGradientTest, org.apache.commons.math.linear.ConjugateGradientTest, org.apache.commons.math.linear.EigenDecompositionTest, org.apache.commons.math.linear.EigenDecompositionTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.FieldLUDecompositionTest, org.apache.commons.math.linear.FieldLUDecompositionTest, org.apache.commons.math.linear.FieldLUSolverTest, org.apache.commons.math.linear.FieldLUSolverTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.LUDecompositionTest, org.apache.commons.math.linear.LUDecompositionTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.OpenMapRealMatrixTest, org.apache.commons.math.linear.OpenMapRealMatrixTest, org.apache.commons.math.linear.PivotingQRDecompositionTest, org.apache.commons.math.linear.PivotingQRDecompositionTest, org.apache.commons.math.linear.PivotingQRSolverTest, org.apache.commons.math.linear.PivotingQRSolverTest, org.apache.commons.math.linear.QRDecompositionTest, org.apache.commons.math.linear.QRDecompositionTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.RealVectorTest, org.apache.commons.math.linear.RealVectorTest, org.apache.commons.math.linear.SingularValueDecompositionTest, org.apache.commons.math.linear.SingularValueDecompositionTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.SymmLQTest, org.apache.commons.math.linear.SymmLQTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.JacobianMatricesTest, org.apache.commons.math.ode.JacobianMatricesTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.events.OverlappingEventsTest, org.apache.commons.math.ode.events.OverlappingEventsTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.optimization.BatteryNISTTest, org.apache.commons.math.optimization.BatteryNISTTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math.optimization.direct.CMAESOptimizerTest, org.apache.commons.math.optimization.direct.CMAESOptimizerTest, org.apache.commons.math.optimization.direct.PowellOptimizerTest, org.apache.commons.math.optimization.direct.PowellOptimizerTest, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.GaussianFitterTest, org.apache.commons.math.optimization.fitting.GaussianFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.univariate.BracketFinderTest, org.apache.commons.math.optimization.univariate.BracketFinderTest, org.apache.commons.math.optimization.univariate.BrentOptimizerTest, org.apache.commons.math.optimization.univariate.BrentOptimizerTest, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.BitsStreamGeneratorTest, org.apache.commons.math.random.BitsStreamGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.RandomGeneratorAbstractTest, org.apache.commons.math.random.RandomGeneratorAbstractTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.random.Well1024aTest, org.apache.commons.math.random.Well1024aTest, org.apache.commons.math.random.Well19937aTest, org.apache.commons.math.random.Well19937aTest, org.apache.commons.math.random.Well19937cTest, org.apache.commons.math.random.Well19937cTest, org.apache.commons.math.random.Well44497aTest, org.apache.commons.math.random.Well44497aTest, org.apache.commons.math.random.Well44497bTest, org.apache.commons.math.random.Well44497bTest, org.apache.commons.math.random.Well512aTest, org.apache.commons.math.random.Well512aTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.correlation.StorelessCovarianceTest, org.apache.commons.math.stat.correlation.StorelessCovarianceTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.MannWhitneyUTestTest, org.apache.commons.math.stat.inference.MannWhitneyUTestTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.util.ArithmeticUtilsTest, org.apache.commons.math.util.ArithmeticUtilsTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.FastMathStrictComparisonTest, org.apache.commons.math.util.FastMathStrictComparisonTest, org.apache.commons.math.util.FastMathTest, org.apache.commons.math.util.FastMathTest, org.apache.commons.math.util.FastMathTestPerformance, org.apache.commons.math.util.FastMathTestPerformance, org.apache.commons.math.util.IncrementorTest, org.apache.commons.math.util.IncrementorTest, org.apache.commons.math.util.MathArraysTest, org.apache.commons.math.util.MathArraysTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.MultidimensionalCounterTest, org.apache.commons.math.util.MultidimensionalCounterTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.PairTest, org.apache.commons.math.util.PairTest, org.apache.commons.math.util.PrecisionTest, org.apache.commons.math.util.PrecisionTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.TransformerMapTest, org.apache.commons.math.util.TransformerMapTest]
10:21:22.668 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@2ff4f00f', projectTests=[org.apache.commons.math.MathExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.RetryRunnerTest, org.apache.commons.math.RetryRunnerTest, org.apache.commons.math.analysis.FunctionUtilsTest, org.apache.commons.math.analysis.FunctionUtilsTest, org.apache.commons.math.analysis.function.GaussianTest, org.apache.commons.math.analysis.function.GaussianTest, org.apache.commons.math.analysis.function.HarmonicOscillatorTest, org.apache.commons.math.analysis.function.HarmonicOscillatorTest, org.apache.commons.math.analysis.function.LogisticTest, org.apache.commons.math.analysis.function.LogisticTest, org.apache.commons.math.analysis.function.LogitTest, org.apache.commons.math.analysis.function.LogitTest, org.apache.commons.math.analysis.function.SigmoidTest, org.apache.commons.math.analysis.function.SigmoidTest, org.apache.commons.math.analysis.function.SincTest, org.apache.commons.math.analysis.function.SincTest, org.apache.commons.math.analysis.function.SqrtTest, org.apache.commons.math.analysis.function.SqrtTest, org.apache.commons.math.analysis.function.StepFunctionTest, org.apache.commons.math.analysis.function.StepFunctionTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.IllinoisSolverTest, org.apache.commons.math.analysis.solvers.IllinoisSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.MullerSolver2Test, org.apache.commons.math.analysis.solvers.MullerSolver2Test, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.PegasusSolverTest, org.apache.commons.math.analysis.solvers.PegasusSolverTest, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.SecantSolverTest, org.apache.commons.math.analysis.solvers.SecantSolverTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math.dfp.DfpDecTest, org.apache.commons.math.dfp.DfpDecTest, org.apache.commons.math.dfp.DfpMathTest, org.apache.commons.math.dfp.DfpMathTest, org.apache.commons.math.dfp.DfpTest, org.apache.commons.math.dfp.DfpTest, org.apache.commons.math.distribution.AbtractIntegerDistributionTest, org.apache.commons.math.distribution.AbtractIntegerDistributionTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.exception.DimensionMismatchExceptionTest, org.apache.commons.math.exception.DimensionMismatchExceptionTest, org.apache.commons.math.exception.MaxCountExceededExceptionTest, org.apache.commons.math.exception.MaxCountExceededExceptionTest, org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math.exception.NotPositiveExceptionTest, org.apache.commons.math.exception.NotPositiveExceptionTest, org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math.exception.OutOfRangeExceptionTest, org.apache.commons.math.exception.OutOfRangeExceptionTest, org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math.exception.util.ArgUtilsTest, org.apache.commons.math.exception.util.ArgUtilsTest, org.apache.commons.math.exception.util.ExceptionContextTest, org.apache.commons.math.exception.util.ExceptionContextTest, org.apache.commons.math.filter.KalmanFilterTest, org.apache.commons.math.filter.KalmanFilterTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math.geometry.euclidean.threed.LineTest, org.apache.commons.math.geometry.euclidean.threed.LineTest, org.apache.commons.math.geometry.euclidean.threed.PlaneTest, org.apache.commons.math.geometry.euclidean.threed.PlaneTest, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math.geometry.euclidean.threed.RotationTest, org.apache.commons.math.geometry.euclidean.threed.RotationTest, org.apache.commons.math.geometry.euclidean.threed.SubLineTest, org.apache.commons.math.geometry.euclidean.threed.SubLineTest, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math.geometry.euclidean.twod.LineTest, org.apache.commons.math.geometry.euclidean.twod.LineTest, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math.geometry.euclidean.twod.SubLineTest, org.apache.commons.math.geometry.euclidean.twod.SubLineTest, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.CholeskyDecompositionTest, org.apache.commons.math.linear.CholeskyDecompositionTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.ConjugateGradientTest, org.apache.commons.math.linear.ConjugateGradientTest, org.apache.commons.math.linear.EigenDecompositionTest, org.apache.commons.math.linear.EigenDecompositionTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.FieldLUDecompositionTest, org.apache.commons.math.linear.FieldLUDecompositionTest, org.apache.commons.math.linear.FieldLUSolverTest, org.apache.commons.math.linear.FieldLUSolverTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.LUDecompositionTest, org.apache.commons.math.linear.LUDecompositionTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.OpenMapRealMatrixTest, org.apache.commons.math.linear.OpenMapRealMatrixTest, org.apache.commons.math.linear.PivotingQRDecompositionTest, org.apache.commons.math.linear.PivotingQRDecompositionTest, org.apache.commons.math.linear.PivotingQRSolverTest, org.apache.commons.math.linear.PivotingQRSolverTest, org.apache.commons.math.linear.QRDecompositionTest, org.apache.commons.math.linear.QRDecompositionTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.RealVectorTest, org.apache.commons.math.linear.RealVectorTest, org.apache.commons.math.linear.SingularValueDecompositionTest, org.apache.commons.math.linear.SingularValueDecompositionTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.SymmLQTest, org.apache.commons.math.linear.SymmLQTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.JacobianMatricesTest, org.apache.commons.math.ode.JacobianMatricesTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.events.OverlappingEventsTest, org.apache.commons.math.ode.events.OverlappingEventsTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.optimization.BatteryNISTTest, org.apache.commons.math.optimization.BatteryNISTTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math.optimization.direct.CMAESOptimizerTest, org.apache.commons.math.optimization.direct.CMAESOptimizerTest, org.apache.commons.math.optimization.direct.PowellOptimizerTest, org.apache.commons.math.optimization.direct.PowellOptimizerTest, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.GaussianFitterTest, org.apache.commons.math.optimization.fitting.GaussianFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.univariate.BracketFinderTest, org.apache.commons.math.optimization.univariate.BracketFinderTest, org.apache.commons.math.optimization.univariate.BrentOptimizerTest, org.apache.commons.math.optimization.univariate.BrentOptimizerTest, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.BitsStreamGeneratorTest, org.apache.commons.math.random.BitsStreamGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.RandomGeneratorAbstractTest, org.apache.commons.math.random.RandomGeneratorAbstractTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.random.Well1024aTest, org.apache.commons.math.random.Well1024aTest, org.apache.commons.math.random.Well19937aTest, org.apache.commons.math.random.Well19937aTest, org.apache.commons.math.random.Well19937cTest, org.apache.commons.math.random.Well19937cTest, org.apache.commons.math.random.Well44497aTest, org.apache.commons.math.random.Well44497aTest, org.apache.commons.math.random.Well44497bTest, org.apache.commons.math.random.Well44497bTest, org.apache.commons.math.random.Well512aTest, org.apache.commons.math.random.Well512aTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.correlation.StorelessCovarianceTest, org.apache.commons.math.stat.correlation.StorelessCovarianceTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.MannWhitneyUTestTest, org.apache.commons.math.stat.inference.MannWhitneyUTestTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.util.ArithmeticUtilsTest, org.apache.commons.math.util.ArithmeticUtilsTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.FastMathStrictComparisonTest, org.apache.commons.math.util.FastMathStrictComparisonTest, org.apache.commons.math.util.FastMathTest, org.apache.commons.math.util.FastMathTest, org.apache.commons.math.util.FastMathTestPerformance, org.apache.commons.math.util.FastMathTestPerformance, org.apache.commons.math.util.IncrementorTest, org.apache.commons.math.util.IncrementorTest, org.apache.commons.math.util.MathArraysTest, org.apache.commons.math.util.MathArraysTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.MultidimensionalCounterTest, org.apache.commons.math.util.MultidimensionalCounterTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.PairTest, org.apache.commons.math.util.PairTest, org.apache.commons.math.util.PrecisionTest, org.apache.commons.math.util.PrecisionTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.TransformerMapTest, org.apache.commons.math.util.TransformerMapTest], complianceLevel=5, outputFolder=., json=true}
10:21:22.669 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 4
10:21:22.689 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 905 MB
10:21:22.689 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
10:21:22.690 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 990 MB
10:21:22.690 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
10:21:22.691 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
10:21:22.691 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
10:25:16.603 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
10:25:16.603 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:252 which is executed by 3 tests
1694344315
10:25:17.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:17.248 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (35 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:18.142 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
10:25:18.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:214 which is executed by 3 tests
1694344315
10:25:18.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
10:25:18.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:212 which is executed by 3 tests
1694344315
10:25:18.495 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:18.527 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (28 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:18.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
10:25:18.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:209 which is executed by 3 tests
1694344315
10:25:19.006 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:19.039 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (30 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:19.483 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:19.516 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (30 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:19.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
10:25:19.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:334 which is executed by 10 tests
-1328230856
10:25:19.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:20.000 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (27 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:20.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
10:25:20.323 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:343 which is executed by 13 tests
1093635194
10:25:20.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:20.534 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (27 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:20.904 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
10:25:20.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:342 which is executed by 13 tests
1093635194
10:25:21.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:21.171 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (35 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:21.473 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
10:25:21.473 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:341 which is executed by 13 tests
1093635194
10:25:21.648 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:21.701 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (30 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:21.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
10:25:21.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:340 which is executed by 13 tests
1093635194
10:25:22.146 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:22.194 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (31 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:22.465 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
10:25:22.465 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:339 which is executed by 15 tests
-1328230856
10:25:22.650 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
10:25:22.651 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:337 which is executed by 15 tests
-1328230856
10:25:22.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:22.851 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (29 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:23.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
10:25:23.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:336 which is executed by 15 tests
-1328230856
10:25:23.312 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:23.404 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (86 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:23.732 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
10:25:23.733 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:333 which is executed by 15 tests
-1328230856
10:25:23.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:23.932 [pool-48-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:24.199 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:24.227 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:24.474 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
10:25:24.474 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:329 which is executed by 15 tests
-1328230856
10:25:24.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:24.666 [pool-56-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:24.908 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:24.936 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:25.178 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
10:25:25.178 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:337 which is executed by 15 tests
1093635194
10:25:25.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:25.383 [pool-64-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (27 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:25.658 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:25.687 [pool-68-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:25.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
10:25:25.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:131 which is executed by 17 tests
1093635194
10:25:26.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
10:25:26.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:128 which is executed by 17 tests
1093635194
10:25:26.280 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:26.310 [pool-72-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:26.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
10:25:26.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:287 which is executed by 17 tests
575067433
10:25:26.730 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:26.759 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (27 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:27.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
10:25:27.013 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:232 which is executed by 17 tests
-1328230856
10:25:27.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
10:25:27.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:331 which is executed by 17 tests
1093635194
10:25:27.365 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:27.395 [pool-80-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (27 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:27.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:27.665 [pool-84-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:27.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
10:25:27.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:327 which is executed by 17 tests
1093635194
10:25:28.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:28.107 [pool-88-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:28.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
10:25:28.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:324 which is executed by 17 tests
1093635194
10:25:28.542 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:28.571 [pool-92-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:25:28.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
10:25:28.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:323 which is executed by 17 tests
1093635194
10:25:28.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:25:29.010 [pool-96-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:49.225 [pool-95-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:28:49.226 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:28:49.226 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
10:28:49.226 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:322 which is executed by 17 tests
1093635194
10:28:49.403 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
10:28:49.403 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:321 which is executed by 17 tests
1093635194
10:28:49.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:49.632 [pool-99-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (30 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:49.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
10:28:49.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:318 which is executed by 17 tests
1093635194
10:28:50.077 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:50.106 [pool-103-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:50.342 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
10:28:50.342 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:317 which is executed by 17 tests
1093635194
10:28:50.510 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:50.538 [pool-107-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:50.776 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
10:28:50.776 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:316 which is executed by 17 tests
1093635194
10:28:50.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
10:28:50.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:313 which is executed by 17 tests
1093635194
10:28:51.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:51.145 [pool-111-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:51.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
10:28:51.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:312 which is executed by 17 tests
1093635194
10:28:51.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
10:28:51.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:311 which is executed by 17 tests
1093635194
10:28:51.718 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
10:28:51.718 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:304 which is executed by 17 tests
1093635194
10:28:51.886 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:51.913 [pool-115-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:52.157 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
10:28:52.157 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:335 which is executed by 17 tests
34579990
10:28:52.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
10:28:52.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:334 which is executed by 17 tests
34579990
10:28:52.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:52.525 [pool-119-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:52.763 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
10:28:52.763 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:321 which is executed by 17 tests
34579990
10:28:52.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
10:28:52.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:320 which is executed by 17 tests
34579990
10:28:53.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:53.121 [pool-123-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:53.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
10:28:53.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:305 which is executed by 18 tests
-1328230856
10:28:53.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:53.550 [pool-127-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:53.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
10:28:53.797 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:304 which is executed by 18 tests
-1328230856
10:28:53.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:53.986 [pool-131-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:54.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
10:28:54.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:303 which is executed by 18 tests
-1328230856
10:28:54.389 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:54.417 [pool-135-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:54.652 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
10:28:54.653 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:285 which is executed by 18 tests
-1328230856
10:28:54.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
10:28:54.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:258 which is executed by 18 tests
-1328230856
10:28:54.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:55.014 [pool-139-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:55.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
10:28:55.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:257 which is executed by 18 tests
-1328230856
10:28:55.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:55.440 [pool-143-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:55.678 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
10:28:55.679 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:256 which is executed by 18 tests
-1328230856
10:28:55.844 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:55.872 [pool-147-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:56.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
10:28:56.114 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:254 which is executed by 18 tests
-1328230856
10:28:56.283 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:56.310 [pool-151-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:56.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:56.574 [pool-155-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:56.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
10:28:56.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:246 which is executed by 18 tests
-1328230856
10:28:56.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:57.016 [pool-159-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:57.251 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:57.280 [pool-163-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:57.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
10:28:57.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:229 which is executed by 18 tests
-1328230856
10:28:57.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:57.714 [pool-167-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (28 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:57.921 [pool-166-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
EventState.java:118: error: variable root might not have been initialized
                if (((!(java.lang.Double.isNaN(previousEventTime))) && ((org.apache.commons.math.util.FastMath.abs((root - ta))) <= (convergence))) && ((org.apache.commons.math.util.FastMath.abs((root - (previousEventTime)))) <= (convergence))) {
                                                                                                                    ^
EventState.java:123: error: variable root might not have been initialized
                    if ((java.lang.Double.isNaN(previousEventTime)) || ((org.apache.commons.math.util.FastMath.abs(((previousEventTime) - root))) > (convergence))) {
                                                                                                                                          ^
EventState.java:124: error: variable root might not have been initialized
                        pendingEventTime = root;
                                           ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:28:57.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
10:28:57.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:227 which is executed by 18 tests
-1328230856
10:28:58.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
10:28:58.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:173 which is executed by 19 tests
575067433
10:28:58.288 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:58.317 [pool-169-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (27 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:58.510 [pool-168-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
BracketingNthOrderBrentSolver.java:92: error: variable signChangeIndex might not have been initialized
        double xA = x[(signChangeIndex - 1)];
                       ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:28:58.510 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
10:28:58.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:172 which is executed by 19 tests
575067433
10:28:58.676 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:58.705 [pool-171-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:58.899 [pool-170-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
BracketingNthOrderBrentSolver.java:130: error: variable nbPoints might not have been initialized
            int end = nbPoints;
                      ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:28:58.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
10:28:58.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:44 which is executed by 19 tests
-1328230856
10:28:59.084 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
10:28:59.084 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:317 which is executed by 19 tests
-1328230856
10:28:59.248 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
10:28:59.248 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:308 which is executed by 19 tests
-1328230856
10:28:59.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:59.439 [pool-173-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:28:59.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
10:28:59.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:307 which is executed by 19 tests
-1328230856
10:28:59.848 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:28:59.875 [pool-177-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:29:00.105 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
10:29:00.105 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:225 which is executed by 19 tests
-1328230856
10:29:00.277 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:29:00.304 [pool-181-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:29:00.506 [pool-180-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
EventState.java:116: error: variable root might not have been initialized
                if (((!(java.lang.Double.isNaN(previousEventTime))) && ((org.apache.commons.math.util.FastMath.abs((root - ta))) <= (convergence))) && ((org.apache.commons.math.util.FastMath.abs((root - (previousEventTime)))) <= (convergence))) {
                                                                                                                    ^
EventState.java:121: error: variable root might not have been initialized
                    if ((java.lang.Double.isNaN(previousEventTime)) || ((org.apache.commons.math.util.FastMath.abs(((previousEventTime) - root))) > (convergence))) {
                                                                                                                                          ^
EventState.java:122: error: variable root might not have been initialized
                        pendingEventTime = root;
                                           ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:29:00.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:29:00.534 [pool-183-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:29:00.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
10:29:00.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:221 which is executed by 19 tests
-1328230856
10:29:00.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:29:00.957 [pool-187-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:29:01.184 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
10:29:01.184 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState$1:203 which is executed by 19 tests
-1328230856
10:29:01.349 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
10:29:01.349 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState$1:202 which is executed by 19 tests
-1328230856
10:29:01.510 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:29:01.547 [pool-191-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:29:01.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
10:29:01.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:364 which is executed by 19 tests
1093635194
10:29:01.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
10:29:01.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:363 which is executed by 19 tests
1093635194
10:29:02.114 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:29:02.142 [pool-195-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:29:02.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
10:29:02.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:362 which is executed by 19 tests
1093635194
10:29:02.541 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:29:02.569 [pool-199-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:29:02.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
10:29:02.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:306 which is executed by 19 tests
1093635194
10:29:02.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
10:29:02.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:302 which is executed by 19 tests
1093635194
10:29:03.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:29:03.178 [pool-203-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:29:03.408 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:29:03.436 [pool-207-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:29:03.695 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
10:29:03.695 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:286 which is executed by 19 tests
1093635194
10:29:03.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
10:29:03.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:285 which is executed by 19 tests
1093635194
10:29:04.026 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:29:04.053 [pool-211-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:29:04.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
10:29:04.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:141 which is executed by 19 tests
1093635194
10:29:04.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
10:29:04.465 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:139 which is executed by 19 tests
1093635194
10:29:04.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:29:04.658 [pool-215-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:29:04.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
10:29:04.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:386 which is executed by 20 tests
575067433
10:29:05.141 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
10:29:05.141 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:385 which is executed by 20 tests
575067433
10:29:05.337 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:29:05.364 [pool-219-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:29:05.595 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
10:29:05.595 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:310 which is executed by 20 tests
-1328230856
10:29:05.769 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
10:29:05.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:301 which is executed by 20 tests
-1328230856
10:29:05.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:29:05.961 [pool-223-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:26.164 [pool-222-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:32:26.164 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:32:26.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:26.192 [pool-226-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:26.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
10:32:26.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:299 which is executed by 20 tests
-1328230856
10:32:26.624 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:26.650 [pool-230-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:26.875 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
10:32:26.875 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:298 which is executed by 20 tests
-1328230856
10:32:27.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:27.068 [pool-234-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:27.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
10:32:27.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:276 which is executed by 20 tests
-1328230856
10:32:27.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
10:32:27.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:275 which is executed by 20 tests
-1328230856
10:32:27.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:27.647 [pool-238-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:27.881 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
10:32:27.881 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:274 which is executed by 20 tests
-1328230856
10:32:28.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:28.068 [pool-242-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:28.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
10:32:28.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:268 which is executed by 20 tests
-1328230856
10:32:28.470 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:28.498 [pool-246-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:28.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
10:32:28.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:267 which is executed by 20 tests
-1328230856
10:32:28.882 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:28.909 [pool-250-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:29.133 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
10:32:29.133 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:217 which is executed by 20 tests
-1328230856
10:32:29.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:29.323 [pool-254-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:29.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:29.581 [pool-258-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:29.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
10:32:29.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:214 which is executed by 20 tests
-1328230856
10:32:29.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
10:32:29.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:213 which is executed by 20 tests
-1328230856
10:32:30.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:30.166 [pool-262-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:30.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
10:32:30.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:212 which is executed by 20 tests
-1328230856
10:32:30.546 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
10:32:30.546 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:209 which is executed by 20 tests
-1328230856
10:32:30.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:30.736 [pool-266-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:30.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
10:32:30.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:208 which is executed by 20 tests
-1328230856
10:32:31.128 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
10:32:31.128 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:207 which is executed by 20 tests
-1328230856
10:32:31.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
10:32:31.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:200 which is executed by 20 tests
-1328230856
10:32:31.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
10:32:31.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:198 which is executed by 20 tests
-1328230856
10:32:31.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
10:32:31.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:197 which is executed by 20 tests
-1328230856
10:32:31.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
10:32:31.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:193 which is executed by 20 tests
-1328230856
10:32:31.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:31.967 [pool-270-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:32.196 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:32.222 [pool-274-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:32.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
10:32:32.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:192 which is executed by 20 tests
-1328230856
10:32:32.601 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
10:32:32.602 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:191 which is executed by 20 tests
-1328230856
10:32:32.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
10:32:32.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:190 which is executed by 20 tests
-1328230856
10:32:32.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:32.948 [pool-278-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:33.179 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
10:32:33.179 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:179 which is executed by 20 tests
-1328230856
10:32:33.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
10:32:33.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:177 which is executed by 20 tests
-1328230856
10:32:33.510 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:33.538 [pool-282-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:33.768 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
10:32:33.769 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:157 which is executed by 20 tests
-1328230856
10:32:33.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:33.958 [pool-286-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:34.179 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:34.205 [pool-290-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:34.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
10:32:34.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:156 which is executed by 20 tests
-1328230856
10:32:34.584 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:34.611 [pool-294-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:34.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
10:32:34.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:155 which is executed by 20 tests
-1328230856
10:32:35.000 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:35.027 [pool-298-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:35.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
10:32:35.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.events.EventState:154 which is executed by 20 tests
-1328230856
10:32:35.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:35.440 [pool-302-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:35.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
10:32:35.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:378 which is executed by 24 tests
575067433
10:32:35.825 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
10:32:35.825 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:375 which is executed by 24 tests
575067433
10:32:35.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:36.021 [pool-306-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:36.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
10:32:36.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:374 which is executed by 24 tests
575067433
10:32:36.401 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:36.427 [pool-310-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:36.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
10:32:36.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:373 which is executed by 24 tests
575067433
10:32:36.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
10:32:36.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:368 which is executed by 24 tests
575067433
10:32:36.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:36.995 [pool-314-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:37.211 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
10:32:37.211 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:367 which is executed by 24 tests
575067433
10:32:37.383 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:37.409 [pool-318-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:37.625 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
10:32:37.626 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:366 which is executed by 24 tests
575067433
10:32:37.786 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
10:32:37.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:365 which is executed by 24 tests
575067433
10:32:37.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:37.975 [pool-322-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:38.187 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
10:32:38.188 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:284 which is executed by 24 tests
575067433
10:32:38.349 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:38.375 [pool-326-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:38.588 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:38.614 [pool-330-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:38.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
10:32:38.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:283 which is executed by 24 tests
575067433
10:32:38.998 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
10:32:38.998 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:275 which is executed by 24 tests
575067433
10:32:39.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:39.186 [pool-334-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:39.402 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:39.428 [pool-338-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:39.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
10:32:39.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:273 which is executed by 24 tests
575067433
10:32:39.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
10:32:39.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:254 which is executed by 24 tests
575067433
10:32:39.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:39.987 [pool-342-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:40.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:40.236 [pool-346-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:40.447 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
10:32:40.447 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:252 which is executed by 24 tests
575067433
10:32:40.607 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:40.634 [pool-350-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:40.815 [pool-349-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
BracketingNthOrderBrentSolver.java:134: error: variable nextX might not have been initialized
                if (!((nextX > xA) && (nextX < xB))) {
                       ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:32:40.815 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
10:32:40.815 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:251 which is executed by 24 tests
575067433
10:32:40.976 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:41.002 [pool-352-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:41.213 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
10:32:41.213 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:247 which is executed by 24 tests
575067433
10:32:41.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
10:32:41.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:246 which is executed by 24 tests
575067433
10:32:41.545 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
10:32:41.545 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:241 which is executed by 24 tests
575067433
10:32:41.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:41.733 [pool-356-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:41.914 [pool-355-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
BracketingNthOrderBrentSolver.java:133: error: variable targetY might not have been initialized
                nextX = guessX(targetY, tmpX, y, start, end);
                               ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:32:41.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
10:32:41.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:236 which is executed by 24 tests
575067433
10:32:42.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:42.102 [pool-358-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:42.284 [pool-357-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
BracketingNthOrderBrentSolver.java:131: error: variable targetY might not have been initialized
                nextX = guessX(targetY, tmpX, y, start, end);
                               ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:32:42.284 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:42.311 [pool-360-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:42.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
10:32:42.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:233 which is executed by 24 tests
575067433
10:32:42.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:42.708 [pool-364-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:42.901 [pool-363-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
BracketingNthOrderBrentSolver.java:131: error: variable targetY might not have been initialized
                nextX = guessX(targetY, tmpX, y, start, end);
                               ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:32:42.902 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:42.928 [pool-366-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:43.138 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
10:32:43.138 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:213 which is executed by 24 tests
575067433
10:32:43.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:43.326 [pool-370-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:43.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:43.562 [pool-374-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:43.774 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
10:32:43.774 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:211 which is executed by 24 tests
575067433
10:32:43.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
10:32:43.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:205 which is executed by 24 tests
575067433
10:32:44.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
10:32:44.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:204 which is executed by 24 tests
575067433
10:32:44.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
10:32:44.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:203 which is executed by 24 tests
575067433
10:32:44.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
10:32:44.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:202 which is executed by 24 tests
575067433
10:32:44.588 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
10:32:44.589 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:201 which is executed by 24 tests
575067433
10:32:44.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
10:32:44.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:200 which is executed by 24 tests
575067433
10:32:44.910 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
10:32:44.910 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:199 which is executed by 24 tests
575067433
10:32:45.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #127
10:32:45.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:198 which is executed by 24 tests
575067433
10:32:45.231 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #128
10:32:45.231 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:195 which is executed by 24 tests
575067433
10:32:45.392 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #129
10:32:45.392 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:429 which is executed by 24 tests
1472642000
10:32:45.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #130
10:32:45.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:427 which is executed by 24 tests
1472642000
10:32:45.746 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:45.774 [pool-378-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:46.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #131
10:32:46.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:425 which is executed by 24 tests
1472642000
10:32:46.210 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:46.237 [pool-382-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:46.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #132
10:32:46.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:421 which is executed by 24 tests
1472642000
10:32:46.657 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:46.685 [pool-386-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:46.921 [pool-385-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
DormandPrince853StepInterpolator.java:225: error: variable s might not have been initialized
            yTmp[j] = (currentState[j]) + ((h) * s);
                                                 ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:32:46.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #133
10:32:46.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:420 which is executed by 24 tests
1472642000
10:32:47.097 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:47.124 [pool-388-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:47.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #134
10:32:47.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:417 which is executed by 24 tests
1472642000
10:32:47.539 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:47.566 [pool-392-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:47.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #135
10:32:47.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:415 which is executed by 24 tests
1472642000
10:32:48.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:48.030 [pool-396-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:48.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #136
10:32:48.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:411 which is executed by 24 tests
1472642000
10:32:48.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:48.490 [pool-400-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:48.698 [pool-399-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
DormandPrince853StepInterpolator.java:220: error: variable s might not have been initialized
            yTmp[j] = (currentState[j]) + ((h) * s);
                                                 ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:32:48.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #137
10:32:48.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:410 which is executed by 24 tests
1472642000
10:32:48.871 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:48.897 [pool-402-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:49.135 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #138
10:32:49.135 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:407 which is executed by 24 tests
1472642000
10:32:49.305 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:49.332 [pool-406-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:49.580 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #139
10:32:49.580 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:405 which is executed by 24 tests
1472642000
10:32:49.750 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:49.777 [pool-410-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:50.014 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #140
10:32:50.014 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:402 which is executed by 24 tests
1472642000
10:32:50.184 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:50.210 [pool-414-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:50.417 [pool-413-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
DormandPrince853StepInterpolator.java:215: error: variable s might not have been initialized
            yTmp[j] = (currentState[j]) + ((h) * s);
                                                 ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:32:50.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #141
10:32:50.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:401 which is executed by 24 tests
1472642000
10:32:50.590 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:50.617 [pool-416-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:50.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #142
10:32:50.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:398 which is executed by 24 tests
1472642000
10:32:51.027 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #143
10:32:51.027 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:397 which is executed by 24 tests
1472642000
10:32:51.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #144
10:32:51.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:385 which is executed by 24 tests
1472642000
10:32:51.365 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #145
10:32:51.365 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:380 which is executed by 24 tests
1472642000
10:32:51.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:51.562 [pool-420-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:51.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #146
10:32:51.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:372 which is executed by 24 tests
1472642000
10:32:51.976 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:52.003 [pool-424-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:52.237 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #147
10:32:52.237 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:371 which is executed by 24 tests
1472642000
10:32:52.408 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:52.435 [pool-428-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:52.671 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #148
10:32:52.671 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:369 which is executed by 24 tests
1472642000
10:32:52.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #149
10:32:52.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:368 which is executed by 24 tests
1472642000
10:32:53.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #150
10:32:53.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:367 which is executed by 24 tests
1472642000
10:32:53.169 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #151
10:32:53.170 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:366 which is executed by 24 tests
1472642000
10:32:53.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #152
10:32:53.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:365 which is executed by 24 tests
1472642000
10:32:53.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #153
10:32:53.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:364 which is executed by 24 tests
1472642000
10:32:53.674 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #154
10:32:53.674 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:363 which is executed by 24 tests
1472642000
10:32:53.839 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #155
10:32:53.840 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:362 which is executed by 24 tests
1472642000
10:32:54.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #156
10:32:54.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:361 which is executed by 24 tests
1472642000
10:32:54.171 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #157
10:32:54.171 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:357 which is executed by 24 tests
1472642000
10:32:54.337 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:54.364 [pool-432-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:54.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #158
10:32:54.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:350 which is executed by 24 tests
1472642000
10:32:54.788 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:54.815 [pool-436-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:55.048 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #159
10:32:55.048 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:349 which is executed by 24 tests
1472642000
10:32:55.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:55.240 [pool-440-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:55.473 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #160
10:32:55.474 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:348 which is executed by 24 tests
1472642000
10:32:55.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:55.669 [pool-444-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:55.912 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #161
10:32:55.912 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:347 which is executed by 24 tests
1472642000
10:32:56.078 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:56.105 [pool-448-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:56.354 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #162
10:32:56.354 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:344 which is executed by 24 tests
1472642000
10:32:56.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:56.548 [pool-452-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:56.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #163
10:32:56.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:343 which is executed by 24 tests
1472642000
10:32:56.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #164
10:32:56.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:342 which is executed by 24 tests
1472642000
10:32:57.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #165
10:32:57.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:341 which is executed by 24 tests
1472642000
10:32:57.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #166
10:32:57.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:340 which is executed by 24 tests
1472642000
10:32:57.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #167
10:32:57.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:339 which is executed by 24 tests
1472642000
10:32:57.626 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #168
10:32:57.626 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:338 which is executed by 24 tests
1472642000
10:32:57.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #169
10:32:57.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:337 which is executed by 24 tests
1472642000
10:32:57.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #170
10:32:57.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:336 which is executed by 24 tests
1472642000
10:32:58.130 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #171
10:32:58.130 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:335 which is executed by 24 tests
1472642000
10:32:58.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #172
10:32:58.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:334 which is executed by 24 tests
1472642000
10:32:58.474 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #173
10:32:58.475 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:333 which is executed by 24 tests
1472642000
10:32:58.643 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #174
10:32:58.643 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:332 which is executed by 24 tests
1472642000
10:32:58.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #175
10:32:58.813 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:331 which is executed by 24 tests
1472642000
10:32:58.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:59.013 [pool-456-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:59.248 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #176
10:32:59.248 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:328 which is executed by 24 tests
1472642000
10:32:59.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:59.442 [pool-460-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:32:59.679 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #177
10:32:59.679 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:320 which is executed by 24 tests
1472642000
10:32:59.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:32:59.887 [pool-464-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:00.119 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:00.146 [pool-468-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:00.378 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #178
10:33:00.378 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:318 which is executed by 24 tests
1472642000
10:33:00.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:00.577 [pool-472-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:00.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:00.838 [pool-476-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:01.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #179
10:33:01.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:169 which is executed by 26 tests
575067433
10:33:01.241 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:01.268 [pool-480-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:01.449 [pool-479-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
BracketingNthOrderBrentSolver.java:90: error: variable signChangeIndex might not have been initialized
        double xA = x[(signChangeIndex - 1)];
                       ^
BracketingNthOrderBrentSolver.java:128: error: variable nbPoints might not have been initialized
            int end = nbPoints;
                      ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:33:01.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:01.476 [pool-482-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:01.704 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #180
10:33:01.704 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:162 which is executed by 26 tests
575067433
10:33:01.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:01.892 [pool-486-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:02.104 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:02.130 [pool-490-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:02.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #181
10:33:02.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:161 which is executed by 26 tests
575067433
10:33:02.515 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:02.542 [pool-494-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:02.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #182
10:33:02.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:155 which is executed by 26 tests
575067433
10:33:02.916 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:02.944 [pool-498-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:03.168 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:03.195 [pool-502-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:03.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #183
10:33:03.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:154 which is executed by 26 tests
575067433
10:33:03.565 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:03.592 [pool-506-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:03.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #184
10:33:03.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:151 which is executed by 26 tests
575067433
10:33:03.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:04.002 [pool-510-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:04.211 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #185
10:33:04.211 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:150 which is executed by 26 tests
575067433
10:33:04.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:04.401 [pool-514-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (28 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:04.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #186
10:33:04.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:149 which is executed by 26 tests
575067433
10:33:04.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:04.809 [pool-518-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:05.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #187
10:33:05.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:148 which is executed by 26 tests
575067433
10:33:05.212 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:05.241 [pool-522-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:05.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #188
10:33:05.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:147 which is executed by 26 tests
575067433
10:33:05.619 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #189
10:33:05.619 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:146 which is executed by 26 tests
575067433
10:33:05.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #190
10:33:05.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:393 which is executed by 27 tests
1472642000
10:33:05.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:05.976 [pool-526-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:06.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #191
10:33:06.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:391 which is executed by 27 tests
1472642000
10:33:06.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:06.441 [pool-530-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:06.689 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:06.715 [pool-534-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:06.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #192
10:33:06.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:311 which is executed by 27 tests
1472642000
10:33:07.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #193
10:33:07.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:310 which is executed by 27 tests
1472642000
10:33:07.277 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:07.304 [pool-538-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:07.534 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #194
10:33:07.534 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:309 which is executed by 27 tests
1472642000
10:33:07.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:07.725 [pool-542-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:07.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #195
10:33:07.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:304 which is executed by 27 tests
1472642000
10:33:08.146 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #196
10:33:08.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:302 which is executed by 27 tests
1472642000
10:33:08.311 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:08.338 [pool-546-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:08.568 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #197
10:33:08.568 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:299 which is executed by 27 tests
1472642000
10:33:08.733 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:08.760 [pool-550-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:08.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #198
10:33:08.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:298 which is executed by 27 tests
1472642000
10:33:09.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:09.193 [pool-554-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:09.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #199
10:33:09.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:297 which is executed by 27 tests
1472642000
10:33:09.588 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:09.615 [pool-558-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:09.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #200
10:33:09.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:294 which is executed by 27 tests
1472642000
10:33:10.010 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:10.037 [pool-562-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:10.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #201
10:33:10.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:293 which is executed by 27 tests
1472642000
10:33:10.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:10.468 [pool-566-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:10.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #202
10:33:10.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:292 which is executed by 27 tests
1472642000
10:33:10.863 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:10.890 [pool-570-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:11.119 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #203
10:33:11.120 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:290 which is executed by 27 tests
1472642000
10:33:11.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #204
10:33:11.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:288 which is executed by 27 tests
1472642000
10:33:11.455 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:11.483 [pool-574-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:11.727 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #205
10:33:11.727 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:278 which is executed by 27 tests
1472642000
10:33:11.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #206
10:33:11.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:283 which is executed by 27 tests
-1670384204
10:33:12.060 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #207
10:33:12.060 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:279 which is executed by 27 tests
-1670384204
10:33:12.220 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:12.250 [pool-578-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:12.468 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:12.495 [pool-582-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:12.732 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #208
10:33:12.732 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:278 which is executed by 27 tests
-1670384204
10:33:12.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #209
10:33:12.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:275 which is executed by 27 tests
-1670384204
10:33:13.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:13.099 [pool-586-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:13.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #210
10:33:13.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:274 which is executed by 27 tests
-1670384204
10:33:13.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #211
10:33:13.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:273 which is executed by 27 tests
-1670384204
10:33:13.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:13.669 [pool-590-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:13.876 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #212
10:33:13.876 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:272 which is executed by 27 tests
-1670384204
10:33:14.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #213
10:33:14.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:269 which is executed by 27 tests
-1670384204
10:33:14.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #214
10:33:14.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:268 which is executed by 27 tests
-1670384204
10:33:14.372 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #215
10:33:14.372 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:263 which is executed by 27 tests
-1670384204
10:33:14.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #216
10:33:14.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:259 which is executed by 27 tests
-1670384204
10:33:14.692 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #217
10:33:14.692 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:258 which is executed by 27 tests
-1670384204
10:33:14.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:14.886 [pool-594-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:15.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #218
10:33:15.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:256 which is executed by 27 tests
-1670384204
10:33:15.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #219
10:33:15.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:255 which is executed by 27 tests
-1670384204
10:33:15.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #220
10:33:15.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:247 which is executed by 31 tests
-1670384204
10:33:15.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #221
10:33:15.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3379 which is executed by 34 tests
1033054629
10:33:15.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #222
10:33:15.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3375 which is executed by 34 tests
1033054629
10:33:16.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:16.072 [pool-598-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:16.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:16.951 [pool-602-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:17.775 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #223
10:33:17.775 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3373 which is executed by 34 tests
1033054629
10:33:17.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:18.011 [pool-606-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:18.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #224
10:33:18.819 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:305 which is executed by 41 tests
1048307728
10:33:18.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:19.014 [pool-610-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:19.242 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #225
10:33:19.242 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:242 which is executed by 45 tests
1048307728
10:33:19.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:19.451 [pool-614-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:19.674 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #226
10:33:19.674 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:241 which is executed by 45 tests
1048307728
10:33:19.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:19.868 [pool-618-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:20.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #227
10:33:20.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:324 which is executed by 50 tests
1048307728
10:33:20.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #228
10:33:20.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:318 which is executed by 50 tests
1048307728
10:33:20.431 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:20.458 [pool-622-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:20.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:20.712 [pool-626-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:20.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #229
10:33:20.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:317 which is executed by 50 tests
1048307728
10:33:21.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #230
10:33:21.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:316 which is executed by 50 tests
1048307728
10:33:21.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #231
10:33:21.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:314 which is executed by 50 tests
1048307728
10:33:21.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:21.451 [pool-630-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:21.671 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #232
10:33:21.671 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:313 which is executed by 50 tests
1048307728
10:33:21.831 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #233
10:33:21.832 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:312 which is executed by 50 tests
1048307728
10:33:22.008 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #234
10:33:22.008 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:311 which is executed by 50 tests
1048307728
10:33:22.177 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #235
10:33:22.177 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:309 which is executed by 50 tests
1048307728
10:33:22.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #236
10:33:22.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:303 which is executed by 50 tests
1048307728
10:33:22.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:22.527 [pool-634-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:22.786 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:22.831 [pool-638-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (34 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:23.053 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #237
10:33:23.053 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:301 which is executed by 50 tests
1048307728
10:33:23.223 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:23.251 [pool-642-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:23.488 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #238
10:33:23.488 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:298 which is executed by 50 tests
1048307728
10:33:23.658 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:23.686 [pool-646-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:23.921 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:23.959 [pool-650-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:33:24.174 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #239
10:33:24.174 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:296 which is executed by 52 tests
1048307728
10:33:24.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:33:24.372 [pool-654-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (27 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:36:44.564 [pool-653-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:36:44.565 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:36:44.565 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #240
10:36:44.565 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:295 which is executed by 52 tests
1048307728
10:36:44.739 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:36:44.766 [pool-657-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:36:45.008 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #241
10:36:45.008 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:294 which is executed by 52 tests
1048307728
10:36:45.169 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:36:45.197 [pool-661-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:36:45.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #242
10:36:45.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:293 which is executed by 52 tests
1048307728
10:36:45.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:36:45.617 [pool-665-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (33 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:05.810 [pool-664-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:40:05.811 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:40:05.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #243
10:40:05.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:282 which is executed by 57 tests
1048307728
10:40:05.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:06.019 [pool-668-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:06.251 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:06.277 [pool-672-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:06.493 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #244
10:40:06.493 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:281 which is executed by 57 tests
1048307728
10:40:06.662 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:06.688 [pool-676-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:06.913 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #245
10:40:06.913 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:277 which is executed by 57 tests
1048307728
10:40:07.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:07.106 [pool-680-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:07.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #246
10:40:07.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:275 which is executed by 57 tests
1048307728
10:40:07.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:07.519 [pool-684-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:07.735 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #247
10:40:07.735 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:274 which is executed by 57 tests
1048307728
10:40:07.895 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:07.921 [pool-688-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:08.137 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #248
10:40:08.137 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:273 which is executed by 57 tests
1048307728
10:40:08.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #249
10:40:08.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:272 which is executed by 57 tests
1048307728
10:40:08.467 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:08.504 [pool-692-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:08.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #250
10:40:08.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:267 which is executed by 57 tests
1048307728
10:40:08.891 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:08.918 [pool-696-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:09.142 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #251
10:40:09.142 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:264 which is executed by 57 tests
1048307728
10:40:09.309 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:09.338 [pool-700-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:09.554 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #252
10:40:09.554 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:262 which is executed by 57 tests
1048307728
10:40:09.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:09.741 [pool-704-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:09.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #253
10:40:09.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:261 which is executed by 57 tests
1048307728
10:40:10.131 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:10.157 [pool-708-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:10.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #254
10:40:10.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:260 which is executed by 57 tests
1048307728
10:40:10.534 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #255
10:40:10.534 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:259 which is executed by 57 tests
1048307728
10:40:10.702 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:10.728 [pool-712-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:10.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #256
10:40:10.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:257 which is executed by 57 tests
1048307728
10:40:11.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:11.150 [pool-716-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:11.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #257
10:40:11.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:254 which is executed by 57 tests
1048307728
10:40:11.541 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:11.567 [pool-720-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:11.783 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #258
10:40:11.784 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:251 which is executed by 57 tests
1048307728
10:40:11.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:11.971 [pool-724-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:12.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #259
10:40:12.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:249 which is executed by 57 tests
1048307728
10:40:12.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:12.379 [pool-728-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:12.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #260
10:40:12.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:240 which is executed by 57 tests
1048307728
10:40:12.783 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:12.809 [pool-732-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:13.024 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:13.050 [pool-736-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:13.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #261
10:40:13.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:239 which is executed by 57 tests
1048307728
10:40:13.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #262
10:40:13.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:238 which is executed by 57 tests
1048307728
10:40:13.601 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:13.628 [pool-740-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:13.868 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:13.894 [pool-744-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:14.118 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #263
10:40:14.118 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:235 which is executed by 58 tests
1048307728
10:40:14.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:14.312 [pool-748-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:14.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #264
10:40:14.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:233 which is executed by 58 tests
1048307728
10:40:14.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:14.729 [pool-752-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:14.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:14.978 [pool-756-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:15.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #265
10:40:15.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:231 which is executed by 58 tests
1048307728
10:40:15.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:15.413 [pool-760-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:15.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #266
10:40:15.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:230 which is executed by 58 tests
1048307728
10:40:15.791 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #267
10:40:15.791 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:227 which is executed by 58 tests
1048307728
10:40:15.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:15.977 [pool-764-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:16.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #268
10:40:16.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:224 which is executed by 58 tests
1048307728
10:40:16.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:16.399 [pool-768-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:16.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #269
10:40:16.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:221 which is executed by 58 tests
1048307728
10:40:16.775 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:16.801 [pool-772-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:17.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #270
10:40:17.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:218 which is executed by 58 tests
1048307728
10:40:17.184 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:17.210 [pool-776-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:17.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #271
10:40:17.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:217 which is executed by 58 tests
1048307728
10:40:17.586 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #272
10:40:17.586 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:216 which is executed by 58 tests
1048307728
10:40:17.761 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #273
10:40:17.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:215 which is executed by 58 tests
1048307728
10:40:17.928 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:17.954 [pool-780-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:18.179 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #274
10:40:18.179 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:212 which is executed by 58 tests
1048307728
10:40:18.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:18.367 [pool-784-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:18.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #275
10:40:18.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:210 which is executed by 58 tests
1048307728
10:40:18.743 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:18.770 [pool-788-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:19.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #276
10:40:19.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:209 which is executed by 58 tests
1048307728
10:40:19.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #277
10:40:19.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:206 which is executed by 58 tests
1048307728
10:40:19.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #278
10:40:19.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:205 which is executed by 58 tests
1048307728
10:40:19.484 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #279
10:40:19.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:204 which is executed by 58 tests
1048307728
10:40:19.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #280
10:40:19.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:203 which is executed by 58 tests
1048307728
10:40:19.804 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #281
10:40:19.804 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:202 which is executed by 58 tests
1048307728
10:40:19.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #282
10:40:19.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:201 which is executed by 58 tests
1048307728
10:40:20.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #283
10:40:20.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:198 which is executed by 58 tests
1048307728
10:40:20.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #284
10:40:20.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:197 which is executed by 58 tests
1048307728
10:40:20.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:20.482 [pool-792-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:20.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #285
10:40:20.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:196 which is executed by 58 tests
1048307728
10:40:20.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:20.884 [pool-796-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:21.108 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #286
10:40:21.108 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:195 which is executed by 60 tests
1048307728
10:40:21.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:21.295 [pool-800-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:21.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #287
10:40:21.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3495 which is executed by 252 tests
1033054629
10:40:21.735 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #288
10:40:21.735 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:360 which is executed by 65 tests
1048307728
10:40:21.896 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #289
10:40:21.896 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:359 which is executed by 65 tests
1048307728
10:40:22.057 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:22.083 [pool-804-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:22.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #290
10:40:22.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:346 which is executed by 65 tests
1048307728
10:40:22.468 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #291
10:40:22.468 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:345 which is executed by 65 tests
1048307728
10:40:22.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:22.655 [pool-808-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:22.882 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #292
10:40:22.882 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:188 which is executed by 65 tests
1048307728
10:40:23.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #293
10:40:23.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:187 which is executed by 65 tests
1048307728
10:40:23.202 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:40:23.228 [pool-812-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:40:23.452 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #294
10:40:23.452 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:599 which is executed by 76 tests
1857420685
10:40:23.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #295
10:40:23.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:576 which is executed by 76 tests
1857420685
10:40:23.791 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:32.877 [pool-816-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9080 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:33.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:42.519 [pool-820-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9103 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:42.882 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #296
10:40:42.882 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:568 which is executed by 76 tests
1857420685
10:40:43.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #297
10:40:43.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:566 which is executed by 76 tests
1857420685
10:40:43.210 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:52.359 [pool-824-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9144 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:52.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #298
10:40:52.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:562 which is executed by 76 tests
1857420685
10:40:52.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:02.014 [pool-828-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9078 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:02.483 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #299
10:41:02.483 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:561 which is executed by 76 tests
1857420685
10:41:02.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:11.710 [pool-832-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9058 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:12.104 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:21.161 [pool-836-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9053 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:21.590 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #300
10:41:21.591 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:560 which is executed by 76 tests
1857420685
10:41:21.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:30.833 [pool-840-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9067 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:31.189 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #301
10:41:31.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:559 which is executed by 76 tests
1857420685
10:41:31.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:40.373 [pool-844-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9015 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:40.758 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #302
10:41:40.758 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:557 which is executed by 76 tests
1857420685
10:41:40.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:50.030 [pool-848-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9104 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:50.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #303
10:41:50.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:553 which is executed by 76 tests
1857420685
10:41:50.539 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:59.580 [pool-852-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9036 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:59.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #304
10:41:59.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:552 which is executed by 76 tests
1857420685
10:42:00.108 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:42:09.203 [pool-856-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9091 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:42:09.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:42:18.761 [pool-860-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9122 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:42:19.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #305
10:42:19.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:549 which is executed by 76 tests
1857420685
10:42:19.277 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:42:28.394 [pool-864-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9113 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:42:28.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #306
10:42:28.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:548 which is executed by 76 tests
1857420685
10:42:28.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:42:38.552 [pool-868-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9614 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:42:38.903 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #307
10:42:38.903 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:547 which is executed by 76 tests
1857420685
10:42:39.078 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:42:48.213 [pool-872-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9131 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:42:48.575 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:42:57.675 [pool-876-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9096 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

10:42:58.103 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #308
10:42:58.103 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:544 which is executed by 76 tests
1857420685
10:42:58.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:43:07.433 [pool-880-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9160 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:43:07.825 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #309
10:43:07.825 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:543 which is executed by 76 tests
1857420685
10:43:07.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:43:17.042 [pool-884-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9049 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:43:17.393 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #310
10:43:17.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:542 which is executed by 76 tests
1857420685
10:43:17.556 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:43:26.611 [pool-888-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9051 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:43:26.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:43:36.091 [pool-892-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9126 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:43:36.453 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #311
10:43:36.453 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:539 which is executed by 76 tests
1857420685
10:43:36.616 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:43:45.717 [pool-896-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9096 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:43:46.095 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #312
10:43:46.095 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:538 which is executed by 76 tests
1857420685
10:43:46.281 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:43:55.336 [pool-900-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9051 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:43:55.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:44:04.831 [pool-904-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9141 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:44:05.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #313
10:44:05.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:536 which is executed by 76 tests
1857420685
10:44:05.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:44:14.570 [pool-908-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9194 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:44:14.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #314
10:44:14.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:535 which is executed by 76 tests
1857420685
10:44:15.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:44:24.215 [pool-912-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9129 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:44:24.567 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #315
10:44:24.568 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:533 which is executed by 76 tests
1857420685
10:44:24.731 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #316
10:44:24.731 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:531 which is executed by 76 tests
1857420685
10:44:24.895 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #317
10:44:24.895 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:530 which is executed by 76 tests
1857420685
10:44:25.059 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #318
10:44:25.059 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:529 which is executed by 76 tests
1857420685
10:44:25.223 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #319
10:44:25.223 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:528 which is executed by 76 tests
1857420685
10:44:25.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #320
10:44:25.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:330 which is executed by 76 tests
1857420685
10:44:25.561 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #321
10:44:25.561 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:329 which is executed by 76 tests
1857420685
10:44:25.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:44:34.874 [pool-916-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9145 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:44:35.244 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #322
10:44:35.244 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:267 which is executed by 76 tests
1857420685
10:44:35.406 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #323
10:44:35.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:249 which is executed by 76 tests
1857420685
10:44:35.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #324
10:44:35.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1488 which is executed by 76 tests
68623
10:44:35.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #325
10:44:35.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1485 which is executed by 76 tests
68623
10:44:35.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:44:45.393 [pool-920-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9419 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:44:45.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #326
10:44:45.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1484 which is executed by 76 tests
68623
10:44:46.055 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:44:55.207 [pool-924-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9148 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:44:55.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #327
10:44:55.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1482 which is executed by 76 tests
68623
10:44:55.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:45:05.123 [pool-928-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9262 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:45:05.614 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:45:14.905 [pool-932-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9286 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:45:15.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #328
10:45:15.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1476 which is executed by 76 tests
68623
10:45:15.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:45:24.855 [pool-936-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9229 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:45:25.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:45:34.473 [pool-940-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9125 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:45:34.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #329
10:45:34.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1470 which is executed by 76 tests
68623
10:45:35.127 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:45:44.239 [pool-944-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9107 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:45:44.688 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:45:53.822 [pool-948-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9130 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:45:54.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #330
10:45:54.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1463 which is executed by 76 tests
68623
10:45:54.574 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:46:03.642 [pool-952-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9063 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:46:04.092 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:46:13.161 [pool-956-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9065 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:46:13.650 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #331
10:46:13.650 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1460 which is executed by 76 tests
68623
10:46:13.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:46:22.972 [pool-960-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9124 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:46:23.447 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #332
10:46:23.447 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1459 which is executed by 76 tests
68623
10:46:23.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:46:32.761 [pool-964-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9117 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

10:49:53.046 [pool-963-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:49:53.046 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:49:53.047 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #333
10:49:53.047 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1458 which is executed by 76 tests
68623
10:49:53.242 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #334
10:49:53.242 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1457 which is executed by 76 tests
68623
10:49:53.435 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:50:02.576 [pool-967-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9136 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:50:43.771 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #335
10:50:43.771 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1456 which is executed by 76 tests
68623
10:50:43.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #336
10:50:43.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1454 which is executed by 76 tests
68623
10:50:44.168 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:50:53.321 [pool-971-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9149 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:50:53.777 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:51:02.915 [pool-975-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9131 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:51:03.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #337
10:51:03.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1438 which is executed by 76 tests
68623
10:51:03.609 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:51:12.733 [pool-979-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9119 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:51:13.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #338
10:51:13.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1437 which is executed by 76 tests
68623
10:51:13.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:51:22.663 [pool-983-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9242 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:51:23.122 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #339
10:51:23.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1419 which is executed by 76 tests
68623
10:51:23.337 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:51:32.486 [pool-987-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9145 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:51:32.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #340
10:51:32.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1418 which is executed by 76 tests
68623
10:51:33.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #341
10:51:33.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:642 which is executed by 76 tests
68623
10:51:33.384 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #342
10:51:33.384 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:212 which is executed by 77 tests
1648821820
10:51:33.543 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #343
10:51:33.543 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:211 which is executed by 77 tests
1648821820
10:51:33.701 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:51:42.806 [pool-991-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9100 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:51:43.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #344
10:51:43.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:202 which is executed by 78 tests
1648821820
10:51:43.317 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #345
10:51:43.317 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:200 which is executed by 78 tests
1648821820
10:51:43.475 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:51:52.570 [pool-995-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9090 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:51:53.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #346
10:51:53.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:196 which is executed by 78 tests
1648821820
10:51:53.195 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:52:02.525 [pool-999-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9325 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:52:02.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #347
10:52:02.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:195 which is executed by 78 tests
1648821820
10:52:03.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:52:12.175 [pool-1003-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9113 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:52:12.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #348
10:52:12.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:194 which is executed by 78 tests
1648821820
10:52:12.692 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:52:21.957 [pool-1007-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9261 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:52:22.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:52:31.412 [pool-1011-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9086 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:52:31.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #349
10:52:31.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:193 which is executed by 78 tests
1648821820
10:52:31.912 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:52:41.042 [pool-1015-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9126 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:52:41.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #350
10:52:41.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:192 which is executed by 78 tests
1648821820
10:52:41.543 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:52:50.680 [pool-1019-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9133 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:52:51.144 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #351
10:52:51.144 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:191 which is executed by 78 tests
1648821820
10:52:51.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #352
10:52:51.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:190 which is executed by 78 tests
1648821820
10:52:51.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #353
10:52:51.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:189 which is executed by 78 tests
1648821820
10:52:51.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #354
10:52:51.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:188 which is executed by 78 tests
1648821820
10:52:51.777 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:53:01.043 [pool-1023-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9262 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:53:01.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #355
10:53:01.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:184 which is executed by 78 tests
1648821820
10:53:01.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:53:10.753 [pool-1027-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9166 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:53:11.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #356
10:53:11.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:183 which is executed by 78 tests
1648821820
10:53:11.256 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:53:20.372 [pool-1031-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9112 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:53:20.742 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:53:29.846 [pool-1035-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9100 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:53:30.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #357
10:53:30.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:181 which is executed by 78 tests
1648821820
10:53:30.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:53:39.715 [pool-1039-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9255 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:53:40.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #358
10:53:40.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:180 which is executed by 78 tests
1648821820
10:53:40.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:53:49.315 [pool-1043-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9087 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:53:49.667 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #359
10:53:49.667 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:179 which is executed by 78 tests
1648821820
10:53:49.825 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:53:58.982 [pool-1047-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9144 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:53:59.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:54:08.464 [pool-1051-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9138 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:54:08.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #360
10:54:08.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:178 which is executed by 78 tests
1648821820
10:54:08.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:54:18.152 [pool-1055-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9192 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:54:18.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #361
10:54:18.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:177 which is executed by 78 tests
1648821820
10:54:18.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:54:27.740 [pool-1059-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9077 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:54:28.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #362
10:54:28.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:176 which is executed by 78 tests
1648821820
10:54:28.244 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #363
10:54:28.244 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:175 which is executed by 78 tests
1648821820
10:54:28.402 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #364
10:54:28.402 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:174 which is executed by 78 tests
1648821820
10:54:28.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #365
10:54:28.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:173 which is executed by 78 tests
1648821820
10:54:28.719 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:54:37.889 [pool-1063-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9166 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:54:38.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #366
10:54:38.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:171 which is executed by 78 tests
1648821820
10:54:38.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #367
10:54:38.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:170 which is executed by 78 tests
1648821820
10:54:38.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #368
10:54:38.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:169 which is executed by 78 tests
1648821820
10:54:38.740 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:54:47.922 [pool-1067-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9178 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:54:48.279 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #369
10:54:48.279 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:164 which is executed by 78 tests
1648821820
10:54:48.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:54:57.683 [pool-1071-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9242 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:54:58.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:55:07.174 [pool-1075-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9137 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:55:07.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #370
10:55:07.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:333 which is executed by 93 tests
1694344315
10:55:07.687 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:07.714 [pool-1079-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:07.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:07.956 [pool-1083-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:08.180 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #371
10:55:08.181 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:337 which is executed by 94 tests
1694344315
10:55:08.341 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #372
10:55:08.341 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:331 which is executed by 94 tests
1694344315
10:55:08.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:08.539 [pool-1087-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:08.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:08.776 [pool-1091-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:08.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #373
10:55:08.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:166 which is executed by 96 tests
1694344315
10:55:09.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #374
10:55:09.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:164 which is executed by 96 tests
1694344315
10:55:09.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:09.347 [pool-1095-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:09.592 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #375
10:55:09.592 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:163 which is executed by 96 tests
1694344315
10:55:09.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:09.793 [pool-1099-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:10.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #376
10:55:10.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:162 which is executed by 96 tests
1694344315
10:55:10.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:10.190 [pool-1103-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:10.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #377
10:55:10.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:161 which is executed by 96 tests
1694344315
10:55:10.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:10.586 [pool-1107-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:10.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #378
10:55:10.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:159 which is executed by 96 tests
1694344315
10:55:10.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:11.000 [pool-1111-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:11.212 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #379
10:55:11.212 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:158 which is executed by 96 tests
1694344315
10:55:11.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:11.397 [pool-1115-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:11.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #380
10:55:11.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:157 which is executed by 96 tests
1694344315
10:55:11.777 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:11.803 [pool-1119-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:12.014 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #381
10:55:12.015 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:322 which is executed by 100 tests
1694344315
10:55:12.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:12.216 [pool-1123-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:12.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:12.455 [pool-1127-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:12.667 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #382
10:55:12.667 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:321 which is executed by 100 tests
1694344315
10:55:12.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #383
10:55:12.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:250 which is executed by 100 tests
1694344315
10:55:12.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:13.015 [pool-1131-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:13.226 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:13.253 [pool-1135-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:13.477 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #384
10:55:13.477 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:233 which is executed by 101 tests
1694344315
10:55:13.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #385
10:55:13.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:229 which is executed by 102 tests
1694344315
10:55:13.797 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:13.823 [pool-1139-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:14.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:14.107 [pool-1143-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:14.321 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #386
10:55:14.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:225 which is executed by 102 tests
1694344315
10:55:14.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:14.509 [pool-1147-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:14.738 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:14.765 [pool-1151-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:14.977 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #387
10:55:14.977 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:223 which is executed by 102 tests
1694344315
10:55:15.136 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:15.163 [pool-1155-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:15.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #388
10:55:15.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:271 which is executed by 104 tests
34579990
10:55:15.539 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #389
10:55:15.539 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:268 which is executed by 104 tests
34579990
10:55:15.701 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:15.731 [pool-1159-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (28 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:15.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #390
10:55:15.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:262 which is executed by 104 tests
34579990
10:55:16.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #391
10:55:16.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:260 which is executed by 104 tests
34579990
10:55:16.281 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:16.308 [pool-1163-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:16.515 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #392
10:55:16.515 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:259 which is executed by 104 tests
34579990
10:55:16.676 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:16.703 [pool-1167-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #393
10:55:16.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:258 which is executed by 104 tests
34579990
10:55:17.107 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:17.134 [pool-1171-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:17.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #394
10:55:17.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:257 which is executed by 104 tests
34579990
10:55:17.554 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:17.581 [pool-1175-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:17.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #395
10:55:17.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:256 which is executed by 104 tests
34579990
10:55:17.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:17.984 [pool-1179-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:18.204 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #396
10:55:18.204 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:255 which is executed by 104 tests
34579990
10:55:18.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:18.393 [pool-1183-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:18.599 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #397
10:55:18.599 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:254 which is executed by 104 tests
34579990
10:55:18.777 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:18.804 [pool-1187-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:19.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #398
10:55:19.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:253 which is executed by 104 tests
34579990
10:55:19.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:19.200 [pool-1191-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:19.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #399
10:55:19.408 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:252 which is executed by 104 tests
34579990
10:55:19.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:19.595 [pool-1195-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:19.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #400
10:55:19.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:251 which is executed by 104 tests
34579990
10:55:19.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:20.014 [pool-1199-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:20.225 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #401
10:55:20.225 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:250 which is executed by 104 tests
34579990
10:55:20.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:20.412 [pool-1203-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:20.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #402
10:55:20.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:249 which is executed by 104 tests
34579990
10:55:20.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:20.806 [pool-1207-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:21.013 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #403
10:55:21.013 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:248 which is executed by 104 tests
34579990
10:55:21.226 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:21.253 [pool-1211-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:21.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #404
10:55:21.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:221 which is executed by 104 tests
1694344315
10:55:21.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:21.646 [pool-1215-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:21.856 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #405
10:55:21.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator:134 which is executed by 104 tests
1858951938
10:55:22.014 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #406
10:55:22.014 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator:133 which is executed by 104 tests
1858951938
10:55:22.170 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:22.198 [pool-1219-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:22.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #407
10:55:22.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator:132 which is executed by 104 tests
1858951938
10:55:22.566 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:22.593 [pool-1223-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:22.789 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #408
10:55:22.790 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator:131 which is executed by 104 tests
1858951938
10:55:22.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:55:22.973 [pool-1227-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:55:23.171 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #409
10:55:23.171 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:153 which is executed by 105 tests
1648821820
10:55:23.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #410
10:55:23.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:151 which is executed by 105 tests
1648821820
10:55:23.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:55:32.772 [pool-1231-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9281 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:55:33.107 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #411
10:55:33.107 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:150 which is executed by 105 tests
1648821820
10:55:33.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:55:42.498 [pool-1235-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9230 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:55:42.839 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #412
10:55:42.839 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:147 which is executed by 105 tests
1648821820
10:55:42.996 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:55:52.123 [pool-1239-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9123 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:55:52.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #413
10:55:52.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:146 which is executed by 105 tests
1648821820
10:55:52.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:56:01.816 [pool-1243-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9175 ms)
<> Total tests run: 41
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:56:02.182 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #414
10:56:02.182 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.random.MersenneTwister:144 which is executed by 105 tests
1648821820
10:56:02.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #415
10:56:02.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:486 which is executed by 105 tests
34579990
10:56:02.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #416
10:56:02.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:484 which is executed by 105 tests
34579990
10:56:02.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:02.688 [pool-1247-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:02.896 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #417
10:56:02.896 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:483 which is executed by 106 tests
34579990
10:56:03.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:03.085 [pool-1251-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:03.303 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #418
10:56:03.303 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:482 which is executed by 106 tests
34579990
10:56:03.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:03.491 [pool-1255-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:03.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:03.724 [pool-1259-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:03.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #419
10:56:03.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:355 which is executed by 110 tests
1694344315
10:56:04.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #420
10:56:04.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:354 which is executed by 110 tests
1694344315
10:56:04.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:04.317 [pool-1263-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:04.541 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #421
10:56:04.541 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:353 which is executed by 110 tests
1694344315
10:56:04.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:04.734 [pool-1267-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:04.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #422
10:56:04.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:218 which is executed by 118 tests
34579990
10:56:05.105 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:05.132 [pool-1271-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:05.338 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #423
10:56:05.338 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:217 which is executed by 118 tests
34579990
10:56:05.499 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:05.526 [pool-1275-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:05.745 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #424
10:56:05.745 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:216 which is executed by 118 tests
34579990
10:56:05.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:05.933 [pool-1279-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:06.140 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #425
10:56:06.140 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:215 which is executed by 118 tests
34579990
10:56:06.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:06.328 [pool-1283-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:06.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #426
10:56:06.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:214 which is executed by 118 tests
34579990
10:56:06.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:06.724 [pool-1287-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:06.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #427
10:56:06.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:213 which is executed by 118 tests
34579990
10:56:07.105 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:07.132 [pool-1291-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:07.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #428
10:56:07.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:359 which is executed by 127 tests
34579990
10:56:07.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #429
10:56:07.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:368 which is executed by 131 tests
34579990
10:56:07.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #430
10:56:07.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:350 which is executed by 137 tests
34579990
10:56:07.822 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #431
10:56:07.822 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:342 which is executed by 137 tests
34579990
10:56:07.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #432
10:56:07.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:372 which is executed by 137 tests
1093635194
10:56:08.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #433
10:56:08.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:368 which is executed by 137 tests
1093635194
10:56:08.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:08.357 [pool-1295-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:08.574 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #434
10:56:08.574 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:365 which is executed by 137 tests
1093635194
10:56:08.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:08.764 [pool-1299-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:08.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #435
10:56:08.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:361 which is executed by 137 tests
1093635194
10:56:09.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:09.182 [pool-1303-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:09.433 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #436
10:56:09.433 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:360 which is executed by 137 tests
1093635194
10:56:09.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #437
10:56:09.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:359 which is executed by 137 tests
1093635194
10:56:09.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:09.826 [pool-1307-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:10.040 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #438
10:56:10.040 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:308 which is executed by 137 tests
1093635194
10:56:10.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:10.232 [pool-1311-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:10.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #439
10:56:10.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:301 which is executed by 137 tests
1093635194
10:56:10.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:10.638 [pool-1315-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:10.868 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #440
10:56:10.868 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:292 which is executed by 137 tests
1093635194
10:56:11.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #441
10:56:11.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:291 which is executed by 137 tests
1093635194
10:56:11.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #442
10:56:11.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:287 which is executed by 137 tests
1093635194
10:56:11.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:11.384 [pool-1319-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:13.985 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep
10:56:13.986 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBothRev
10:56:13.986 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence
10:56:13.987 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize
10:56:13.990 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.JacobianMatricesTest#testFinalResult
10:56:13.994 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone
10:56:13.999 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency
10:56:14.006 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep
10:56:14.007 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBoth
10:56:14.013 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.JacobianMatricesTest#testParameterizable
10:56:14.013 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep
10:56:14.014 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative
10:56:14.019 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep
10:56:14.020 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirstRev
10:56:14.021 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLastRev
10:56:14.021 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLastRev
10:56:14.022 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency
10:56:14.036 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization
10:56:14.046 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward
10:56:14.049 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward
10:56:14.050 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLast
10:56:14.055 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization
10:56:14.056 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeitherRev
10:56:14.061 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations
10:56:14.094 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps
10:56:14.094 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep
10:56:14.105 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward
10:56:14.118 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency
10:56:14.121 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep
10:56:14.121 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward
10:56:14.124 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency
10:56:14.124 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeither
10:56:14.129 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization
10:56:14.130 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBoth
10:56:14.133 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial
10:56:14.146 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler
10:56:14.170 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance
10:56:14.198 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.JacobianMatricesTest#testLowAccuracyExternalDifferentiation
10:56:14.287 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.JacobianMatricesTest#testInternalDifferentiation
10:56:14.288 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize
10:56:14.289 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLastRev
10:56:14.291 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward
10:56:14.292 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep
10:56:14.294 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone
10:56:14.297 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone
10:56:14.318 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward
10:56:14.323 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization
10:56:14.324 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward
10:56:14.325 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirst
10:56:14.326 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps
10:56:14.326 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeitherRev
10:56:14.330 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler
10:56:14.331 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize
10:56:14.331 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBoth
10:56:14.333 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance
10:56:14.334 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents1
10:56:14.346 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents
10:56:14.346 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirstRev
10:56:14.350 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents0
10:56:14.351 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirst
10:56:14.354 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess
10:56:14.356 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries
10:56:14.360 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler
10:56:14.361 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirst
10:56:14.361 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative
10:56:14.364 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance
10:56:14.365 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirst
10:56:14.365 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLastRev
10:56:14.366 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testMissedEndEvent
10:56:14.366 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBothRev
10:56:14.366 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize
10:56:14.369 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance
10:56:14.369 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep
10:56:14.609 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.JacobianMatricesTest#testHighAccuracyExternalDifferentiation
10:56:14.610 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeitherRev
10:56:14.612 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone
10:56:14.613 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward
10:56:14.615 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial
10:56:14.620 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler
10:56:14.629 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations
10:56:14.633 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization
10:56:14.633 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeither
10:56:14.638 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization
10:56:14.639 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIssue596
10:56:14.667 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps
10:56:14.668 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency
10:56:14.668 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBothRev
10:56:14.680 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency
10:56:14.685 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization
10:56:14.703 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance
10:56:14.703 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMissedEndEvent
10:56:14.713 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler
10:56:14.715 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler
10:56:14.716 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps
10:56:14.717 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd
10:56:14.718 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance
10:56:14.719 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLast
10:56:14.719 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep
10:56:14.720 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency
10:56:14.721 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLast
10:56:14.723 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep
10:56:14.732 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization
10:56:14.733 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps
10:56:14.736 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward
10:56:14.818 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.JacobianMatricesTest#testAnalyticalDifferentiation
10:56:14.819 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep
10:56:14.819 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBoth
10:56:14.848 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps
10:56:14.849 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency
10:56:14.850 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeither
10:56:14.850 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirstRev
10:56:14.853 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward
10:56:14.855 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency
10:56:14.855 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging
10:56:14.859 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler
10:56:14.860 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLast
10:56:14.861 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries
10:56:14.864 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep
10:56:14.865 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors
10:56:14.865 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize
10:56:14.866 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeitherRev
10:56:14.866 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative
10:56:14.867 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBothRev
10:56:14.878 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization
10:56:14.879 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward
10:56:14.891 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps
10:56:14.891 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep
10:56:14.892 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency
10:56:14.892 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeither
10:56:14.893 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents
10:56:14.905 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization
10:56:14.907 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps
10:56:14.908 [pool-1318-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirstRev
java -cp /tmp/DynaMoth_Defects4J_Math_44/target/classes:/tmp/DynaMoth_Defects4J_Math_44/target/test-classes:/tmp/DynaMoth_Defects4J_Math_44/target/classes:/tmp/DynaMoth_Defects4J_Math_44/target/test-classes:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/home/tdurieux/defects4j4repair/repair_tools/nopol.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar: fr.inria.lille.repair.MethodTestRunner org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents org.apache.commons.math.ode.events.EventStateTest#testIssue695 org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps 
10:56:15.327 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - ClassPrepareEvent
10:56:15.357 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.commons.math.ode.sampling.AbstractStepInterpolator
10:56:15.358 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] double[]
10:56:15.359 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.commons.math.ode.AbstractIntegrator
10:56:15.359 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.commons.math.ode.events.EventState
10:56:15.368 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.Collection
10:56:15.384 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.commons.math.ode.AbstractIntegrator$1
10:56:15.395 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.Comparator
10:56:15.401 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.TreeSet
10:56:15.402 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.SortedSet
10:56:15.405 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.Set
10:56:15.406 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.Iterator
10:56:15.410 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.commons.math.ode.sampling.StepHandler
10:56:15.417 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.lang.System
10:56:15.423 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.commons.math.util.Precision
10:56:15.981 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:15.993 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents iteration 0
10:56:16.002 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:16.004 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:16.004 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator(id=374)
10:56:16.007 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:16.010 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:16.011 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:16.012 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:16.012 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:16.013 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:16.043 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:16.043 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:16.043 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:16.043 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:16.043 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:16.043 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:16.043 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:16.043 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:16.043 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:16.043 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:16.083 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getOrder()
10:56:16.084 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getMinStep()
10:56:16.085 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getMaxStep()
10:56:16.094 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:16.095 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:16.096 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:16.123 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:16.133 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:16.134 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:16.138 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:16.139 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:16.213 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:16.215 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents iteration 0
10:56:16.216 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:16.216 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:16.216 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator(id=645)
10:56:16.216 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:16.217 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:16.218 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:16.218 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:16.218 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:16.218 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:16.232 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:16.233 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:16.234 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:16.235 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:16.236 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:16.237 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:16.248 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:16.248 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:16.248 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:16.248 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:16.248 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:16.248 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:16.248 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:16.248 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:16.248 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:16.248 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:16.262 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getOrder()
10:56:16.263 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getMinStep()
10:56:16.264 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getMaxStep()
10:56:16.267 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:16.268 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:16.269 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:16.270 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:16.271 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:16.277 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:16.278 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:16.279 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:16.295 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:16.296 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.events.EventStateTest#testIssue695 iteration 0
10:56:16.297 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:16.297 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:16.297 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator(id=684)
10:56:16.298 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:16.298 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:16.299 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:16.299 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:16.299 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:16.299 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:16.307 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:16.308 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:16.309 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:16.310 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:16.311 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:16.311 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:16.321 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:16.321 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:16.321 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:16.321 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:16.321 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:16.321 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:16.322 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:16.322 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:16.322 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:16.322 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:16.332 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getOrder()
10:56:16.335 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getMinStep()
10:56:16.336 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getMaxStep()
10:56:16.339 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:16.340 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:16.341 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:16.342 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:16.343 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:16.350 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:16.351 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:16.352 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:16.373 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:16.375 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 0
10:56:16.376 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:16.376 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:16.376 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=714)
10:56:16.376 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:16.377 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:16.378 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:16.378 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:16.378 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:16.378 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:16.387 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:16.387 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:16.388 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:16.389 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:16.390 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:16.392 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:16.403 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:16.403 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:16.403 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:16.403 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:16.403 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:16.403 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:16.403 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:16.403 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:16.403 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:16.403 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:16.415 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:16.416 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:16.416 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:16.419 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:16.420 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:16.421 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:16.422 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:16.423 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:16.428 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:16.435 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 1
10:56:16.436 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:16.436 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:16.436 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=731)
10:56:16.437 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:16.438 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:16.438 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:16.438 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:16.439 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:16.439 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:16.447 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:16.448 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:16.449 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:16.449 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:16.450 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:16.451 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:16.460 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:16.460 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:16.460 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:16.460 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:16.460 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:16.460 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:16.460 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:16.460 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:16.460 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:16.460 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:16.465 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:16.466 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:16.467 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:16.468 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:16.469 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:16.469 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:16.471 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:16.472 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:16.475 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:16.476 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 2
10:56:16.476 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:16.476 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:16.476 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=741)
10:56:16.477 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:16.477 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:16.478 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:16.478 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:16.478 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:16.478 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:16.485 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:16.486 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:16.488 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:16.500 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:16.502 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:16.503 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:16.512 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:16.512 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:16.512 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:16.512 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:16.512 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:16.512 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:16.512 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:16.512 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:16.512 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:16.512 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:16.518 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:16.519 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:16.522 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:16.523 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:16.524 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:16.525 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:16.526 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:16.527 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:16.535 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:16.536 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 3
10:56:16.536 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:16.536 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:16.536 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=751)
10:56:16.537 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:16.537 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:16.539 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:16.539 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:16.539 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:16.540 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:16.548 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:16.550 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:16.551 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:16.552 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:16.553 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:16.554 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:16.563 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:16.563 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:16.563 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:16.564 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:16.564 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:16.564 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:16.564 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:16.564 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:16.564 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:16.564 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:16.585 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:16.586 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:16.587 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:16.589 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:16.590 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:16.591 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:16.593 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:16.594 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:16.602 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:16.603 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 4
10:56:16.603 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:16.604 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:16.604 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=761)
10:56:16.604 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:16.605 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:16.605 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:16.606 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:16.606 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:16.606 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:16.614 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:16.615 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:16.615 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:16.616 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:16.619 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:16.620 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:16.630 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:16.630 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:16.630 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:16.630 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:16.630 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:16.630 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:16.630 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:16.630 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:16.630 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:16.630 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:16.641 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:16.642 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:16.643 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:16.644 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:16.645 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:16.646 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:16.648 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:16.649 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:16.660 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:16.666 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 5
10:56:16.667 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:16.667 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:16.667 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=771)
10:56:16.667 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:16.668 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:16.668 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:16.669 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:16.669 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:16.669 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:16.689 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:16.693 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:16.694 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:16.695 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:16.696 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:16.701 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:16.710 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:16.710 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:16.710 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:16.711 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:16.711 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:16.711 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:16.711 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:16.711 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:16.711 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:16.711 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:16.716 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:16.721 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:16.722 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:16.723 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:16.724 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:16.729 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:16.730 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:16.733 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:16.752 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:16.754 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 6
10:56:16.754 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:16.754 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:16.754 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=781)
10:56:16.754 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:16.755 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:16.755 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:16.756 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:16.756 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:16.756 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:16.777 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:16.778 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:16.779 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:16.779 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:16.780 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:16.781 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:16.797 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:16.797 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:16.797 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:16.797 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:16.797 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:16.797 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:16.797 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:16.797 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:16.797 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:16.797 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:16.807 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:16.808 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:16.809 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:16.810 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:16.811 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:16.812 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:16.813 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:16.814 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:16.820 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:16.822 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 7
10:56:16.822 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:16.822 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:16.822 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=791)
10:56:16.822 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:16.823 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:16.823 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:16.824 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:16.824 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:16.824 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:16.837 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:16.838 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:16.839 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:16.840 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:16.841 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:16.842 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:16.851 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:16.851 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:16.851 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:16.851 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:16.851 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:16.851 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:16.851 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:16.851 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:16.851 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:16.852 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:16.857 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:16.858 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:16.859 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:16.860 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:16.865 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:16.868 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:16.870 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:16.871 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:16.874 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:16.875 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 8
10:56:16.876 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:16.876 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:16.876 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=801)
10:56:16.876 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:16.877 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:16.877 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:16.877 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:16.878 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:16.878 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:16.887 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:16.888 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:16.890 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:16.891 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:16.892 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:16.894 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:16.904 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:16.904 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:16.904 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:16.904 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:16.904 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:16.904 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:16.904 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:16.905 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:16.905 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:16.905 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:16.910 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:16.912 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:16.913 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:16.914 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:16.915 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:16.916 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:16.919 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:16.920 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:16.924 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:16.926 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 9
10:56:16.926 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:16.926 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:16.926 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=811)
10:56:16.926 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:16.927 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:16.928 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:16.928 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:16.928 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:16.928 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:16.936 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:16.937 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:16.938 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:16.939 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:16.940 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:16.941 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:16.957 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:16.957 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:16.957 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:16.957 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:16.957 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:16.957 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:16.957 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:16.957 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:16.957 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:16.957 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:16.965 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:16.969 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:16.970 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:16.971 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:16.972 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:16.973 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:16.976 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:16.978 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:16.988 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:16.990 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 10
10:56:16.990 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:16.990 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:16.990 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=821)
10:56:16.990 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:16.991 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:16.992 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:16.992 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:16.992 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:16.992 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.009 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.014 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.015 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.016 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.018 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.019 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.028 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.028 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.028 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.028 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.028 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.028 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.028 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.028 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.028 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.029 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.034 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.035 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.037 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.038 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.039 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.040 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.042 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.043 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.051 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.055 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 11
10:56:17.055 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.055 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.055 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=831)
10:56:17.056 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.056 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.057 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.057 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.057 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.058 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.065 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.066 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.067 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.068 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.069 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.070 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.080 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.080 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.080 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.080 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.080 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.080 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.080 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.080 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.080 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.080 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.085 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.086 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.087 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.088 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.089 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.090 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.092 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.094 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.099 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.104 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 12
10:56:17.104 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.104 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.104 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=841)
10:56:17.105 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.105 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.106 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.106 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.106 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.107 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.113 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.114 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.117 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.118 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.119 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.119 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.128 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.129 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.129 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.129 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.129 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.129 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.129 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.129 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.129 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.129 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.135 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.136 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.138 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.155 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.156 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.156 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.157 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.159 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.168 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.169 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 13
10:56:17.169 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.169 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.169 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=851)
10:56:17.172 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.173 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.173 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.173 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.174 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.174 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.181 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.182 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.183 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.184 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.185 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.185 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.195 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.195 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.195 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.195 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.195 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.195 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.195 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.195 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.195 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.195 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.200 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.201 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.202 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.203 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.204 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.204 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.206 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.207 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.217 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.218 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 14
10:56:17.218 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.218 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.218 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=861)
10:56:17.218 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.219 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.220 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.220 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.220 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.220 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.229 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.230 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.230 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.231 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.232 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.233 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.242 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.242 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.242 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.242 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.242 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.242 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.242 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.242 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.242 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.243 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.248 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.249 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.249 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.250 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.251 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.260 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.265 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.273 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.284 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.285 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 15
10:56:17.286 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.286 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.286 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=871)
10:56:17.286 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.287 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.287 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.287 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.288 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.288 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.299 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.300 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.301 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.302 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.303 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.304 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.313 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.313 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.313 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.313 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.313 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.313 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.313 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.313 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.313 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.313 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.318 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.336 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.340 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.341 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.342 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.343 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.344 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.346 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.351 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.352 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 16
10:56:17.353 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.353 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.353 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=881)
10:56:17.353 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.354 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.355 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.355 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.355 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.355 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.362 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.364 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.364 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.365 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.366 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.367 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.376 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.376 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.376 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.376 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.376 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.376 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.376 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.376 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.377 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.377 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.384 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.385 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.386 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.386 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.387 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.388 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.389 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.391 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.397 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.401 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 17
10:56:17.401 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.401 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.402 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=891)
10:56:17.402 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.402 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.403 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.403 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.403 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.404 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.410 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.411 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.412 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.413 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.413 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.414 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.423 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.423 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.423 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.423 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.423 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.423 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.423 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.423 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.423 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.423 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.428 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.429 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.430 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.430 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.431 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.432 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.433 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.434 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.444 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.446 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 18
10:56:17.446 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.446 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.446 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=901)
10:56:17.446 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.447 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.447 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.448 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.448 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.448 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.454 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.455 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.456 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.457 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.458 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.458 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.467 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.467 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.467 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.467 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.467 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.467 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.467 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.467 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.467 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.467 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.471 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.472 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.473 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.474 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.474 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.475 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.476 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.477 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.481 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.482 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 19
10:56:17.482 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.482 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.482 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=911)
10:56:17.483 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.483 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.484 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.484 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.484 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.484 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.490 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.493 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.494 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.494 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.495 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.496 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.505 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.505 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.505 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.505 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.505 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.505 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.505 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.505 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.505 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.505 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.510 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.511 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.511 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.512 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.513 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.514 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.515 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.516 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.519 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.520 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 20
10:56:17.521 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.521 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.521 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=921)
10:56:17.521 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.521 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.522 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.522 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.522 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.522 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.529 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.532 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.533 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.533 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.534 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.535 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.543 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.543 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.543 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.544 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.544 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.544 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.544 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.544 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.544 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.544 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.548 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.549 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.549 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.550 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.551 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.553 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.554 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.555 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.558 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.559 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 21
10:56:17.559 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.559 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.559 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=931)
10:56:17.559 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.560 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.560 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.561 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.561 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.561 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.568 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.569 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.570 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.570 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.571 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.572 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.581 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.581 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.581 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.581 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.581 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.581 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.581 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.581 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.581 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.581 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.585 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.586 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.587 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.588 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.589 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.589 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.590 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.591 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.594 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.595 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 22
10:56:17.596 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.596 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.596 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=941)
10:56:17.596 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.597 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.597 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.597 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.597 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.598 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.616 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.617 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.618 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.618 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.619 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.620 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.628 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.628 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.629 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.629 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.629 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.629 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.629 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.629 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.629 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.629 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.633 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.634 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.635 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.635 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.636 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.637 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.638 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.639 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.643 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.644 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 23
10:56:17.644 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.644 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.644 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=951)
10:56:17.645 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.645 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.645 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.646 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.646 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.646 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.652 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.653 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.654 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.654 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.655 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.656 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.664 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.664 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.664 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.664 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.665 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.665 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.665 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.665 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.665 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.665 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.669 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.670 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.670 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.671 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.672 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.673 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.674 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.675 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.681 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.682 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 24
10:56:17.683 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.683 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.683 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=961)
10:56:17.683 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.683 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.684 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.684 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.684 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.684 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.690 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.691 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.692 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.693 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.694 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.694 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.703 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.703 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.703 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.703 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.703 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.703 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.703 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.703 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.703 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.703 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.707 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.708 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.709 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.710 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.711 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.711 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.712 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.714 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.729 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.730 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 25
10:56:17.730 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.730 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.730 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=971)
10:56:17.730 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.731 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.731 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.731 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.732 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.732 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.740 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.741 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.741 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.742 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.743 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.744 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.752 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.752 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.752 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.752 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.752 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.752 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.753 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.753 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.753 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.753 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.769 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.770 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.771 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.772 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.772 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.773 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.774 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.775 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.777 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.778 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 26
10:56:17.779 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.779 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.779 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=981)
10:56:17.779 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.779 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.780 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.780 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.780 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.780 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.787 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.787 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.788 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.789 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.789 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.790 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.799 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.799 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.799 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.799 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.799 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.799 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.799 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.799 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.799 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.799 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.803 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.804 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.805 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.806 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.806 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.807 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.808 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.809 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.811 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.812 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 27
10:56:17.813 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.813 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.813 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=991)
10:56:17.813 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.814 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.814 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.814 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.814 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.815 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.821 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.822 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.822 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.823 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.824 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.824 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.833 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.833 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.833 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.833 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.833 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.833 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.833 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.833 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.833 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.833 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.850 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.851 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.852 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.853 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.853 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.854 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.861 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.862 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.865 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.866 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 28
10:56:17.866 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.866 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.866 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=1001)
10:56:17.866 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.867 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.867 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.867 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.868 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.868 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.875 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.876 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.877 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.877 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.903 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.905 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.914 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.914 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.914 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.914 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.914 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.914 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.914 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.914 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.914 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.914 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.919 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.920 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.921 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.921 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.922 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.923 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.924 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.925 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.929 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.930 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 29
10:56:17.931 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.931 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.931 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=1011)
10:56:17.931 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.931 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.932 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.932 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.932 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.933 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.939 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.940 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.940 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.941 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.942 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.946 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.955 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.955 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.955 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.955 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.955 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.955 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.955 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.955 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.955 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.955 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:17.959 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:17.960 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:17.961 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:17.961 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:17.962 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:17.971 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:17.972 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:17.973 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:17.977 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:17.978 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 30
10:56:17.979 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:17.979 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:17.979 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=1021)
10:56:17.979 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:17.979 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:17.980 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:17.980 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:17.980 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:17.980 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:17.986 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:17.987 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:17.988 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:17.988 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:17.989 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:17.990 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:17.998 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:17.998 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:17.998 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:17.998 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:17.998 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:17.998 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:17.998 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:17.998 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:17.998 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:17.998 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:18.003 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:18.004 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:18.004 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:18.005 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:18.006 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:18.007 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:18.008 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:18.009 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:18.011 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:18.012 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 31
10:56:18.012 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:18.012 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:18.012 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=1031)
10:56:18.012 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:18.013 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:18.013 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:18.013 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:18.014 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:18.014 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:18.020 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:18.020 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:18.021 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:18.022 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:18.023 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:18.023 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:18.032 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:18.032 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:18.032 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:18.032 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:18.032 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:18.032 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:18.032 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:18.032 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:18.032 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:18.032 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:18.036 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:18.037 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:18.038 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:18.038 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:18.039 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:18.040 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:18.041 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:18.042 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:18.044 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:18.045 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 32
10:56:18.045 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:18.045 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:18.045 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=1041)
10:56:18.045 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:18.046 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:18.046 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:18.047 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:18.047 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:18.047 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:18.053 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:18.054 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:18.055 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:18.055 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:18.056 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:18.057 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:18.065 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:18.065 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:18.065 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:18.065 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:18.065 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:18.065 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:18.065 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:18.065 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:18.065 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:18.065 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:18.070 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:18.071 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:18.071 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:18.072 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:18.073 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:18.074 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:18.075 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:18.076 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:18.078 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:18.083 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 33
10:56:18.084 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:18.084 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:18.084 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=1051)
10:56:18.084 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:18.084 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:18.085 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:18.085 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:18.085 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:18.086 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:18.092 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:18.093 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:18.094 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:18.094 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:18.095 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:18.096 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:18.104 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:18.104 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:18.104 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:18.104 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:18.104 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:18.104 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:18.104 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:18.104 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:18.104 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:18.104 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:18.109 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:18.109 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:18.110 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:18.111 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:18.112 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:18.113 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:18.114 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:18.115 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:18.117 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:18.118 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 34
10:56:18.119 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:18.119 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:18.119 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=1061)
10:56:18.119 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:18.120 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:18.120 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:18.120 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:18.121 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:18.121 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:18.127 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:18.128 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:18.128 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:18.129 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:18.130 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:18.131 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:18.150 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:18.150 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:18.150 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:18.150 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:18.150 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:18.150 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:18.150 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:18.150 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:18.150 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:18.150 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:18.156 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:18.157 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:18.158 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:18.159 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:18.160 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:18.161 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:18.162 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:18.163 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:18.168 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:18.169 [pool-1318-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps iteration 35
10:56:18.170 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] true=true
10:56:18.170 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:18.170 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.MidpointIntegrator(id=1071)
10:56:18.170 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:18.171 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:18.171 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:18.171 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:18.171 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:18.171 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:18.178 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:18.179 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:18.179 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:18.180 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:18.181 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:18.181 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:18.190 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:18.190 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:18.190 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:18.190 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:18.190 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:18.190 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:18.190 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:18.190 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:18.190 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:18.190 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:18.194 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:18.195 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:18.196 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:18.197 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:18.197 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:18.198 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:18.199 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:18.200 [pool-1318-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:18.205 [pool-1318-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - Exit


========= Info ==========
Nb constants             11
Nb method invocations    15
Nb field access          8
Nb variables             7
Total                    43
Nb evaluated expressions 4
Init Execution time      1009 ms
Collect Execution time   2258 ms
Combine Execution time   54.0 ms
Nb Combination par sec   74 combinations/sec
Total Execution time     3321 ms
Nb line execution        39
Nb results               1

Results:
1. forward


========================
         Stat
========================
Operators: 
OR 2
Methods: 
add(E) 2
handleStep(org.apache.commons.math.ode.sampling.StepInterpolator,boolean) 2
evaluateStep(org.apache.commons.math.ode.sampling.StepInterpolator) 2
getInterpolatedState() 2
stepAccepted(double,double[]) 2
stop() 2
arraycopy(java.lang.Object,int,java.lang.Object,int,int) 2
setInterpolatedTime(double) 2
setSoftCurrentTime(double) 2
setSoftPreviousTime(double) 2
getGlobalPreviousTime() 1
reset(double,double[]) 1
next() 1
isForward() 1
equals(double,double,int) 1
isEmpty() 1
remove() 1
reinitializeBegin(org.apache.commons.math.ode.sampling.StepInterpolator) 1
iterator() 1
computeDerivatives(double,double[],double[]) 1
getGlobalCurrentTime() 1
getEventTime() 1
Variable: 
isLastStep 16
interpolator 16
eventT 9
currentEvent 6
eventsStates 6
currentT 5
state 5
y 5
stepHandlers 4
eventY 4
length 4
statesInitialized 4
occuringEvents 4
resetOccurred 4
handler 2
iterator 2
previousT 2
yDot 1
currentY 1
tEnd 1

 & 11 & 15 & 8 & 7 & 43 & 4 & 3322 ms & 39 &
10:56:18.261 [pool-1318-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: org.apache.commons.math.ode.AbstractIntegrator:287: PRECONDITION forward
10:56:18.478 [pool-1318-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractIntegrator.java:137: error: cannot find symbol
            if (forward)
                ^
  symbol:   variable forward
  location: class org.apache.commons.math.ode.AbstractIntegrator
AbstractIntegrator.java:137: error: illegal start of type
            if (forward)
               ^
10:56:18.482 [pool-1318-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Patch malformed forward
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99) ~[nopol.jar:na]
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135) ~[nopol.jar:na]
	at fr.inria.lille.repair.nopol.patch.TestPatch.passesAllTests(TestPatch.java:60) ~[nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.isOk(NoPol.java:317) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:302) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
10:56:18.482 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: invalid patch
10:56:18.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #443
10:56:18.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:284 which is executed by 137 tests
1093635194
10:56:18.665 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:18.703 [pool-2145-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (36 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:18.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #444
10:56:18.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:283 which is executed by 137 tests
1093635194
10:56:19.152 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:19.191 [pool-2149-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:19.410 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:19.438 [pool-2153-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

java -cp /tmp/DynaMoth_Defects4J_Math_44/target/classes:/tmp/DynaMoth_Defects4J_Math_44/target/test-classes:/tmp/DynaMoth_Defects4J_Math_44/target/classes:/tmp/DynaMoth_Defects4J_Math_44/target/test-classes:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/home/tdurieux/defects4j4repair/repair_tools/nopol.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar: fr.inria.lille.repair.MethodTestRunner org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBothRev org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize org.apache.commons.math.ode.JacobianMatricesTest#testFinalResult org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBoth org.apache.commons.math.ode.JacobianMatricesTest#testParameterizable org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirstRev org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLastRev org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLastRev org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLast org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeitherRev org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeither org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBoth org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance org.apache.commons.math.ode.JacobianMatricesTest#testLowAccuracyExternalDifferentiation org.apache.commons.math.ode.JacobianMatricesTest#testInternalDifferentiation org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLastRev org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirst org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeitherRev org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBoth org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents1 org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirstRev org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents0 org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirst org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirst org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirst org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLastRev org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testMissedEndEvent org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBothRev org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep org.apache.commons.math.ode.JacobianMatricesTest#testHighAccuracyExternalDifferentiation org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeitherRev org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeither org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIssue596 org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBothRev org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMissedEndEvent org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLast org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLast org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward org.apache.commons.math.ode.JacobianMatricesTest#testAnalyticalDifferentiation org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBoth org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeither org.apache.commons.math.ode.events.EventStateTest#testIssue695 org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirstRev org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLast org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeitherRev org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBothRev org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeither org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirstRev 
10:56:22.068 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - ClassPrepareEvent
10:56:22.072 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.commons.math.ode.sampling.AbstractStepInterpolator
10:56:22.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] double[]
10:56:22.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.commons.math.ode.AbstractIntegrator
10:56:22.074 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.commons.math.ode.events.EventState
10:56:22.074 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.Collection
10:56:22.081 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.commons.math.ode.AbstractIntegrator$1
10:56:22.081 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.Comparator
10:56:22.081 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.TreeSet
10:56:22.081 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.SortedSet
10:56:22.082 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.Set
10:56:22.083 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.util.Iterator
10:56:22.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.commons.math.ode.sampling.StepHandler
10:56:22.087 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.lang.System
10:56:22.091 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.commons.math.util.Precision
10:56:22.650 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:22.653 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 0
10:56:22.654 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:22.654 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:22.654 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:22.654 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:22.655 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:22.655 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:22.655 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:22.655 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:22.670 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:22.670 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:22.670 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:22.670 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:22.670 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:22.670 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:22.670 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:22.670 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:22.670 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:22.670 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:22.687 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:22.688 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:22.689 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:22.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:22.701 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:22.702 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:22.703 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:22.704 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:22.723 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:22.725 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 1
10:56:22.725 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:22.725 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:22.725 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:22.725 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:22.726 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:22.726 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:22.726 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:22.726 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:22.733 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:22.734 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:22.736 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:22.737 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:22.737 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:22.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:22.753 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:22.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:22.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:22.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:22.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:22.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:22.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:22.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:22.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:22.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:22.759 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:22.759 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:22.760 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:22.761 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:22.762 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:22.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:22.764 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:22.765 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:22.767 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:22.768 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 2
10:56:22.768 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:22.768 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:22.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:22.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:22.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:22.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:22.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:22.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:22.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:22.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:22.778 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:22.779 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:22.780 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:22.781 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:22.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:22.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:22.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:22.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:22.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:22.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:22.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:22.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:22.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:22.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:22.793 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:22.794 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:22.795 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:22.795 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:22.796 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:22.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:22.798 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:22.799 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:22.801 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:22.802 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 3
10:56:22.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:22.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:22.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:22.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:22.804 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:22.807 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:22.808 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:22.808 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:22.814 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:22.815 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:22.816 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:22.817 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:22.817 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:22.818 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:22.826 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:22.826 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:22.826 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:22.826 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:22.826 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:22.826 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:22.826 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:22.826 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:22.826 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:22.826 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:22.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:22.833 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:22.834 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:22.835 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:22.836 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:22.837 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:22.838 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:22.839 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:22.841 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:22.842 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 4
10:56:22.842 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:22.842 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:22.843 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:22.843 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:22.843 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:22.844 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:22.844 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:22.844 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:22.851 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:22.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:22.853 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:22.854 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:22.855 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:22.856 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:22.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:22.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:22.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:22.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:22.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:22.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:22.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:22.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:22.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:22.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:22.868 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:22.872 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:22.873 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:22.874 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:22.875 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:22.876 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:22.877 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:22.878 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:22.880 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:22.881 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 5
10:56:22.881 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:22.881 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:22.882 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:22.882 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:22.882 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:22.882 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:22.883 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:22.883 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:22.892 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:22.893 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:22.894 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:22.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:22.897 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:22.898 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:22.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:22.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:22.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:22.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:22.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:22.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:22.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:22.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:22.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:22.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:22.913 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:22.914 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:22.914 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:22.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:22.916 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:22.917 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:22.918 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:22.919 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:22.921 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:22.923 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 6
10:56:22.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:22.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:22.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:22.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:22.924 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:22.924 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:22.924 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:22.924 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:22.931 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:22.932 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:22.932 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:22.933 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:22.934 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:22.935 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:22.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:22.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:22.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:22.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:22.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:22.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:22.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:22.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:22.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:22.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:22.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:22.948 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:22.949 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:22.950 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:22.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:22.952 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:22.953 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:22.954 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:22.956 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:22.957 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 7
10:56:22.958 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:22.958 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:22.958 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:22.958 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:22.958 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:22.959 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:22.959 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:22.959 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:22.965 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:22.966 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:22.967 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:22.968 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:22.972 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:22.973 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:22.981 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:22.981 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:22.981 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:22.981 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:22.981 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:22.981 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:22.981 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:22.981 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:22.981 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:22.981 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:22.988 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:22.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:22.992 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:22.995 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:22.996 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.000 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.028 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.048 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.052 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.054 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 8
10:56:23.054 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.054 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.054 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.054 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.064 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.065 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.066 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.067 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.068 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.068 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.076 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.076 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.076 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.076 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.076 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.076 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.076 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.077 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.077 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.077 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.081 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.081 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.082 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.083 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.083 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.084 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.085 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.088 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.100 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 9
10:56:23.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.102 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.102 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.102 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.108 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.109 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.110 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.110 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.111 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.112 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.119 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.119 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.119 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.119 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.119 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.120 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.120 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.120 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.120 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.120 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.124 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.125 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.126 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.126 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.127 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.129 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.129 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.131 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.132 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 10
10:56:23.133 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.133 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.133 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.133 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.133 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.134 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.134 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.134 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.139 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.140 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.141 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.141 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.142 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.143 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.162 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.162 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.162 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.162 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.162 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.162 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.162 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.162 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.162 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.162 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.167 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.167 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.168 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.169 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.170 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.171 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.172 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.172 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.175 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.176 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 11
10:56:23.176 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.176 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.178 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.178 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.184 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.185 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.185 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.187 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.188 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.197 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.212 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.224 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.225 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.225 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.226 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.227 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.228 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.228 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.232 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 12
10:56:23.232 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.232 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.233 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.233 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.233 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.233 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.233 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.234 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.239 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.240 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.240 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.253 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.254 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.254 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.255 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.256 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.256 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.258 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.260 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.261 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 13
10:56:23.261 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.261 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.261 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.268 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.268 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.270 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.270 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.271 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.282 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.283 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.284 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.284 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.286 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.287 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.287 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.289 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.290 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 14
10:56:23.290 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.290 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.291 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.291 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.291 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.291 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.291 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.292 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.297 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.297 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.298 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.299 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.299 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.300 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.311 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.313 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.314 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.314 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.316 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.317 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.318 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 15
10:56:23.319 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.319 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.319 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.319 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.319 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.320 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.320 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.320 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.325 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.326 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.326 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.327 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.328 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.328 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.336 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.339 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.340 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.340 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.341 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.342 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.342 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.344 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.345 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.346 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 16
10:56:23.347 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.347 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.347 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.347 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.347 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.347 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.348 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.348 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.353 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.354 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.354 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.355 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.356 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.356 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.364 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.364 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.367 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.368 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.369 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.369 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.372 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.375 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 17
10:56:23.375 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.375 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.375 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.376 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.376 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.376 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.376 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.376 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.382 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.383 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.383 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.384 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.385 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.385 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.393 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.393 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.396 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.397 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.399 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.399 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.400 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.401 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.402 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.403 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.404 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 18
10:56:23.405 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.405 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.405 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.405 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.411 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.412 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.413 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.414 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.414 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.415 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.422 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.422 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.422 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.422 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.422 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.422 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.422 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.422 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.422 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.422 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.427 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.427 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.428 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.430 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.431 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.432 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.435 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 19
10:56:23.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.436 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.436 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.436 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.436 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.436 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.437 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.442 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.443 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.443 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.444 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.445 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.445 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.453 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.453 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.453 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.453 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.453 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.453 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.453 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.453 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.453 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.453 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.458 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.459 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.459 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.460 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.462 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.465 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 20
10:56:23.466 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.466 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.466 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.466 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.466 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.467 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.467 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.467 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.472 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.474 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.474 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.475 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.476 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.487 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.488 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.492 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.493 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.494 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.494 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.495 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.496 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.498 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.499 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 21
10:56:23.499 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.499 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.508 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.508 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.508 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.509 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.509 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.509 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.515 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.515 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.516 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.517 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.517 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.518 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.529 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.530 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.531 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.531 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.532 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.533 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.534 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.534 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.536 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.537 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 22
10:56:23.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.539 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.539 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.539 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.539 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.546 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.546 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.548 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.549 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.560 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.561 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.561 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.562 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.563 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.563 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.565 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.566 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.567 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 23
10:56:23.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.569 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.569 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.569 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.575 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.576 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.576 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.577 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.578 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.602 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.603 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.603 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.604 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.605 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.605 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.606 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.607 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.609 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.610 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 24
10:56:23.610 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.610 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.610 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.610 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.611 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.611 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.611 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.611 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.617 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.617 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.618 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.619 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.619 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.620 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.630 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.630 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.630 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.630 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.630 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.630 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.630 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.630 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.630 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.630 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.634 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.634 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.635 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.636 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.636 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.637 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.638 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.639 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.659 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.660 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 25
10:56:23.660 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.660 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.660 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.661 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.661 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.661 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.661 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.662 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.667 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.668 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.669 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.669 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.670 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.671 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.682 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.682 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.683 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.684 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.684 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.686 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.687 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.688 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.689 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 26
10:56:23.690 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.690 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.690 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.690 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.690 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.691 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.691 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.691 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.697 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.697 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.698 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.699 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.724 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.725 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.725 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.726 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.727 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.727 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.729 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.731 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.732 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 27
10:56:23.732 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.732 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.732 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.732 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.733 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.733 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.733 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.733 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.738 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.739 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.741 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.748 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.748 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.752 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.753 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.753 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.755 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.755 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.757 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.759 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.760 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 28
10:56:23.760 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.760 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.760 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.760 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.761 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.761 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.761 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.761 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.767 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.767 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.768 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.781 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.781 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.782 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.783 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.783 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.784 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.786 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.787 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.788 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 29
10:56:23.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.789 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.789 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.789 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.789 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.789 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.789 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.795 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.795 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.796 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.796 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.798 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.809 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.810 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.810 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.811 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.812 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.812 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.813 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.814 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.816 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.817 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 30
10:56:23.817 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.817 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.817 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.817 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.818 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.818 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.818 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.818 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.823 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.824 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.826 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.827 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.834 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.834 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.834 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.834 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.834 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.834 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.834 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.834 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.834 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.834 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.838 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.838 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.839 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.841 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.842 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.842 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.844 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.845 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 31
10:56:23.845 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.845 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.845 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.846 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.846 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.846 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.846 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.847 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.853 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.853 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.854 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.855 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.855 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.862 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.862 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.862 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.862 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.867 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.867 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.868 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.869 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.869 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.870 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.871 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.872 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.873 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.874 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 32
10:56:23.874 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.874 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.875 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.875 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.875 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.875 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.875 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.876 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.881 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.881 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.882 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.882 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.883 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.884 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.894 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.897 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.897 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.898 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.899 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.900 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.901 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.902 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 33
10:56:23.902 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.902 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.902 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.903 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.903 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.903 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.903 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.904 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.909 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.910 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.911 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.911 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.912 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.912 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.919 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.919 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.919 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.919 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.919 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.919 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.919 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.920 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.920 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.920 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.924 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.925 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.925 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.926 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.927 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.927 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.928 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.930 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.931 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 34
10:56:23.931 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.931 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.931 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.931 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.932 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.932 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.932 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.932 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.937 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.938 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.938 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.939 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.939 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.940 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.952 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.953 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.953 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.954 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.955 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.956 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.957 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.958 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 35
10:56:23.958 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.958 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.959 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.959 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.959 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.959 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.959 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.959 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.965 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:23.965 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:23.966 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:23.966 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:23.967 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:23.968 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:23.974 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:23.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:23.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:23.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:23.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:23.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:23.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:23.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:23.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:23.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:23.978 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:23.979 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:23.980 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:23.980 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:23.988 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:23.989 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:23.989 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:23.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:23.992 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:23.993 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 36
10:56:23.993 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:23.993 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:23.993 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:23.994 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:23.994 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:23.994 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:23.994 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:23.994 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:23.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.000 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.001 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.001 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.002 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.003 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.013 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.017 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.019 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.020 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.020 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.021 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.022 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.023 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.024 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 37
10:56:24.025 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.025 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.025 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.025 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.025 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.026 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.026 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.026 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.031 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.032 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.035 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.042 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.042 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.042 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.042 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.042 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.042 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.042 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.042 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.042 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.042 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.047 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.048 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.049 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.049 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.053 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.054 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 38
10:56:24.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.056 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.068 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.068 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.075 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.076 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.077 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.077 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.078 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.079 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.090 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.091 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.092 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.092 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.093 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.094 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.094 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.095 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.097 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.102 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 39
10:56:24.102 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.102 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.103 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.103 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.103 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.103 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.104 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.104 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.131 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.132 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.132 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.133 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.134 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.134 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.148 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.149 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.150 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.150 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.151 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.152 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.153 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.153 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.156 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 40
10:56:24.157 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.157 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.157 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.157 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.157 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.157 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.158 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.158 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.164 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.164 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.165 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.166 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.166 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.174 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.174 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.174 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.174 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.174 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.174 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.178 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.179 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.179 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.180 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.181 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.182 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.183 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.184 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.186 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 41
10:56:24.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.187 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.187 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.187 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.187 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.192 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.193 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.194 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.194 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.195 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.207 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.207 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.208 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.209 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.210 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.210 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.211 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.212 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.216 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 42
10:56:24.216 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.216 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.216 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.216 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.217 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.217 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.228 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.229 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.236 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.237 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.238 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.238 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.246 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.246 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.246 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.246 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.246 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.246 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.246 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.246 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.246 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.246 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.251 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.252 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.253 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.254 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.254 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.255 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.256 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.258 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.259 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 43
10:56:24.260 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.260 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.260 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.260 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.260 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.261 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.261 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.261 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.266 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.267 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.268 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.270 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.284 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.286 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.287 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.287 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.288 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.289 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.290 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.291 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.292 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 44
10:56:24.293 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.293 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.293 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.293 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.293 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.294 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.294 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.294 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.299 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.300 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.300 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.301 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.302 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.302 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.309 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.309 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.309 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.310 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.310 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.310 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.310 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.310 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.310 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.310 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.313 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.314 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.316 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.316 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.317 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.318 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.319 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.320 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.321 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 45
10:56:24.322 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.322 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.322 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.322 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.322 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.328 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.329 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.329 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.330 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.331 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.331 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.338 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.338 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.338 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.338 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.338 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.338 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.338 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.338 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.338 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.338 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.342 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.344 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.344 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.345 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.346 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.346 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.347 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.349 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.350 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 46
10:56:24.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.359 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.360 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.361 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.361 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.362 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.375 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.376 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.376 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.377 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.379 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.379 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.380 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.382 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.383 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 47
10:56:24.383 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.383 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.383 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.384 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.384 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.384 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.384 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.384 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.390 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.390 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.391 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.393 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.400 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.400 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.400 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.400 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.400 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.400 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.400 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.400 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.400 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.400 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.404 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.405 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.405 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.408 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.409 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.411 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.412 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 48
10:56:24.412 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.412 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.412 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.412 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.413 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.413 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.413 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.413 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.418 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.420 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.420 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.421 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.422 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.433 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.433 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.436 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.436 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.438 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.438 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.440 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.441 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 49
10:56:24.441 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.441 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.442 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.442 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.442 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.442 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.442 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.443 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.448 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.449 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.449 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.450 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.450 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.451 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.458 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.458 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.458 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.458 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.458 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.458 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.458 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.458 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.458 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.458 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.462 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.463 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.465 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.466 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.467 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.467 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.469 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.470 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 50
10:56:24.470 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.470 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.472 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.472 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.472 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.478 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.479 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.480 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.480 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.481 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.481 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.501 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.502 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.503 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.504 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.504 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.505 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.506 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.507 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.509 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.510 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 51
10:56:24.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.511 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.511 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.511 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.511 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.511 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.512 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.517 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.518 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.520 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.521 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.532 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.533 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.533 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.534 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.535 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.535 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.536 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.537 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.539 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.540 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 52
10:56:24.540 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.540 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.550 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.551 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.552 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.552 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.553 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.554 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.561 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.561 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.561 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.561 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.561 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.561 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.561 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.561 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.561 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.561 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.565 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.566 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.567 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.567 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.569 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.570 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.571 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.572 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.573 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 53
10:56:24.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.575 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.575 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.575 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.580 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.581 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.582 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.582 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.583 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.583 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.595 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.596 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.596 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.597 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.598 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.598 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.599 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.605 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.606 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 54
10:56:24.607 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.607 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.607 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.607 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.607 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.608 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.608 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.608 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.624 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.633 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.634 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.634 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.635 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.636 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.643 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.643 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.643 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.643 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.643 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.644 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.644 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.644 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.644 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.644 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.648 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.649 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.660 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.661 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.676 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.677 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.679 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.682 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 55
10:56:24.682 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.682 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.682 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.682 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.683 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.683 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.683 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.683 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.688 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.689 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.690 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.690 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.691 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.692 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.699 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.699 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.699 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.699 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.699 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.699 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.699 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.699 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.699 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.699 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.703 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.703 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.704 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.705 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.705 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.706 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.707 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.708 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.709 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.710 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 56
10:56:24.711 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.711 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.711 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.711 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.711 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.711 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.717 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.718 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.718 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.719 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.727 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.727 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.727 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.727 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.727 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.727 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.727 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.727 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.727 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.727 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.731 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.732 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.732 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.733 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.734 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.734 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.736 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.745 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.747 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 57
10:56:24.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.748 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.748 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.748 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.753 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.755 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.764 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.767 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.768 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.768 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.772 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.773 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.774 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.776 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 58
10:56:24.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.782 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.783 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.783 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.784 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.796 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.796 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.798 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.798 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.799 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.800 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.800 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.803 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 59
10:56:24.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.804 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.804 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.804 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.804 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.804 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.809 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.810 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.811 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.811 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.812 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.812 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.819 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.819 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.819 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.819 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.819 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.819 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.819 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.820 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.820 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.820 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.823 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.824 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.824 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.826 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.826 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.827 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.828 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.829 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.830 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 60
10:56:24.831 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.831 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.831 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.831 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.831 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.831 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.837 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.838 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.838 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.839 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.839 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.847 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.847 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.847 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.847 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.847 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.847 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.847 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.847 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.847 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.847 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.851 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.851 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.853 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.854 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.854 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.855 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.856 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.858 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.859 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 61
10:56:24.859 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.859 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.861 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.885 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.886 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.886 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.887 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.888 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.889 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.900 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.901 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.902 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.903 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.903 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.904 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.905 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.908 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.912 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 62
10:56:24.912 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.912 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.912 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.913 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.913 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.913 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.913 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.914 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.919 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.920 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.921 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.922 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.922 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.930 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.930 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.930 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.930 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.930 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.930 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.930 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.930 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.931 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.931 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:24.944 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:24.952 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:24.960 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:24.961 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:24.962 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:24.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:24.964 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:24.965 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:24.967 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:24.968 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 63
10:56:24.969 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:24.969 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:24.969 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:24.969 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:24.970 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:24.970 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:24.970 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:24.970 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:24.988 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:24.989 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:24.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:24.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:24.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:24.992 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:24.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:24.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:24.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:24.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:24.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:24.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:24.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:24.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:24.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:24.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.009 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.011 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.012 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.012 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.013 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.015 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.016 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 64
10:56:25.016 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.016 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.017 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.017 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.017 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.017 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.017 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.023 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.023 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.024 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.025 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.025 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.026 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.037 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.038 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.038 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.039 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.040 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.041 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.041 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.042 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.044 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.045 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 65
10:56:25.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.052 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.053 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.053 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.054 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.062 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.062 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.062 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.062 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.062 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.062 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.062 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.062 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.062 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.062 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.065 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.066 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.067 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.067 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.068 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.069 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.069 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.070 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.076 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.078 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 66
10:56:25.078 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.078 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.078 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.078 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.079 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.079 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.079 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.079 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.085 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.085 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.087 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.087 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.088 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.095 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.095 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.095 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.095 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.095 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.095 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.095 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.095 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.095 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.095 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.099 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.102 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.103 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.103 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.104 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.106 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.107 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 67
10:56:25.107 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.107 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.107 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.107 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.108 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.108 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.108 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.108 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.113 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.114 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.115 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.115 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.116 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.117 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.124 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.124 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.124 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.124 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.124 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.124 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.124 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.124 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.124 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.124 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.127 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.129 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.130 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.130 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.131 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.132 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.132 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.134 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.135 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 68
10:56:25.135 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.135 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.135 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.142 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.142 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.143 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.152 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.152 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.152 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.152 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.152 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.152 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.152 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.152 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.152 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.152 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.156 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.157 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.157 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.158 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.159 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.160 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.160 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.161 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.164 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 69
10:56:25.164 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.164 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.164 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.164 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.164 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.165 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.165 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.165 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.170 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.171 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.172 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.172 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.180 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.180 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.181 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.181 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.181 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.181 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.181 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.181 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.181 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.181 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.184 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.185 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.187 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.188 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.189 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.189 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.191 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.192 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 70
10:56:25.192 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.192 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.192 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.192 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.193 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.193 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.193 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.193 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.198 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.199 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.200 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.200 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.215 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.216 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.227 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.227 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.228 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.229 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.229 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.231 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.232 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.233 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.234 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 71
10:56:25.234 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.234 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.243 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.244 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.251 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.251 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.251 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.251 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.251 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.251 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.251 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.251 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.251 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.254 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.255 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.256 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.256 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.258 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.258 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.259 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.260 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.261 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 72
10:56:25.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.263 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.263 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.268 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.268 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.270 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.270 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.271 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.282 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.282 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.283 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.284 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.287 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.301 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.302 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.304 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.305 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 73
10:56:25.305 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.305 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.305 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.305 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.305 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.306 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.306 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.306 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.311 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.313 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.314 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.314 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.321 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.321 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.321 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.321 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.321 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.322 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.322 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.322 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.322 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.322 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.326 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.327 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.328 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.328 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.329 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.330 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.330 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.331 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.333 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.334 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 74
10:56:25.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.340 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.341 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.342 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.342 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.354 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.355 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.356 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.356 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.357 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.358 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.358 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.359 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.361 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.362 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 75
10:56:25.362 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.362 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.362 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.362 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.368 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.369 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.379 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.379 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.379 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.382 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.383 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.384 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.384 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.385 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.386 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.386 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.387 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.389 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.390 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 76
10:56:25.390 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.390 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.390 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.391 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.391 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.391 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.391 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.391 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.396 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.397 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.399 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.400 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.410 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.411 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.412 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.413 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.413 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.414 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.415 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.416 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.417 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.418 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 77
10:56:25.418 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.418 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.420 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.425 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.427 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.427 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.428 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.439 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.440 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.441 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.441 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.442 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.443 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.443 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.444 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.446 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.447 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 78
10:56:25.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.448 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.448 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.448 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.448 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.448 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.454 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.454 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.455 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.456 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.456 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.468 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.469 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.469 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.470 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.471 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.471 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.472 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.474 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.475 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 79
10:56:25.476 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.476 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.476 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.476 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.476 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.476 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.477 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.477 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.482 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.482 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.484 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.484 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.485 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.492 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.492 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.492 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.492 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.492 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.492 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.492 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.492 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.492 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.492 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.495 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.496 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.498 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.499 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.500 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.500 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.502 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.503 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 80
10:56:25.503 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.503 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.503 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.503 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.504 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.504 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.504 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.504 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.509 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.511 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.512 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.512 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.524 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.526 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.527 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.529 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.530 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 81
10:56:25.530 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.530 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.530 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.531 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.531 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.531 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.531 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.531 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.548 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.549 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.549 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.550 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.551 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.551 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.558 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.559 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.559 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.559 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.559 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.559 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.559 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.559 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.559 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.559 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.562 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.563 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.565 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.565 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.566 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.567 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.569 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.570 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 82
10:56:25.570 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.570 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.571 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.571 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.571 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.571 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.571 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.571 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.577 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.577 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.578 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.579 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.579 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.580 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.587 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.587 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.587 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.587 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.587 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.587 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.587 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.587 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.587 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.587 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.590 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.592 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.592 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.593 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.594 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.594 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.595 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.599 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.600 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 83
10:56:25.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.601 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.601 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.601 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.601 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.606 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.607 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.608 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.608 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.609 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.609 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.617 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.617 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.617 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.617 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.617 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.620 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.621 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.622 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.622 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.623 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.624 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.625 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.625 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.627 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.628 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 84
10:56:25.628 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.628 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.628 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.628 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.629 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.629 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.629 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.629 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.634 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.635 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.636 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.636 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.637 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.638 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.644 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.644 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.644 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.645 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.645 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.645 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.645 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.645 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.645 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.645 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.648 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.649 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.650 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.650 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.651 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.652 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.652 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.653 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.655 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.656 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 85
10:56:25.656 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.656 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.656 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.656 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.662 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.663 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.663 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.664 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.665 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.665 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.673 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.676 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.677 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.679 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.681 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.681 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.683 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.709 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 86
10:56:25.709 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.709 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.709 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.710 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.710 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.710 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.710 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.710 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.718 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.719 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.721 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.721 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.729 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.729 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.729 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.729 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.729 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.729 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.729 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.729 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.729 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.729 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.732 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.733 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.734 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.736 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.737 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.737 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.741 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 87
10:56:25.741 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.741 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.748 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.750 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.750 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.757 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.757 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.757 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.757 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.757 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.757 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.757 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.757 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.757 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.757 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.761 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.762 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.762 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.764 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.764 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.765 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.766 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.767 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.768 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 88
10:56:25.768 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.768 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.775 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.775 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.778 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.789 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.790 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.791 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.791 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.793 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.794 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.795 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.796 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 89
10:56:25.796 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.796 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.798 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.804 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.806 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.813 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.813 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.813 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.813 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.813 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.813 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.813 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.813 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.813 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.813 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.817 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.817 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.818 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.819 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.819 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.820 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.821 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.821 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.823 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.824 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 90
10:56:25.824 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.824 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.824 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.824 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.830 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.831 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.831 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.833 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.833 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.844 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.845 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.845 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.846 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.847 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.847 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.848 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.849 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.850 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.851 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 91
10:56:25.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.853 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.853 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.858 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.859 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.859 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.861 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.861 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.868 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.868 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.868 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.868 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.868 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.868 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.868 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.868 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.868 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.868 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.872 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.872 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.873 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.874 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.874 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.875 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.876 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.877 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.878 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.879 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 92
10:56:25.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.880 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.880 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.880 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.880 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.880 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.885 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.886 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.887 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.887 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.888 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.889 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.899 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.900 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.900 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.901 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.902 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.902 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.903 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.904 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.905 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.906 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 93
10:56:25.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.913 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.914 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.914 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.916 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.927 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.927 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.928 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.929 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.930 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.930 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.931 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.932 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.933 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.934 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 94
10:56:25.934 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.934 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.934 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.935 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.935 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.935 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.935 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.935 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.940 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.941 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.942 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.942 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.944 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.950 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.954 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.955 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.955 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.956 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.957 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.957 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.958 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.959 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.961 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.962 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 95
10:56:25.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.964 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.969 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.969 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.970 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.971 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.971 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.972 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:25.979 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:25.979 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:25.979 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:25.979 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:25.979 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:25.979 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:25.979 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:25.979 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:25.979 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:25.979 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:25.982 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:25.983 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:25.984 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:25.984 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:25.985 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:25.986 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:25.987 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:25.987 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:25.989 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:25.990 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 96
10:56:25.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:25.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:25.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:25.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:25.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:25.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:25.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:25.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:25.996 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:25.997 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:25.998 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:25.998 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:25.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:25.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.006 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.006 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.006 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.006 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.006 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.007 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.007 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.007 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.007 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.007 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.011 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.012 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.012 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.013 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.014 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.014 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.015 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.017 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.018 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 97
10:56:26.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.019 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.019 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.019 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.024 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.024 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.025 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.026 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.026 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.027 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.037 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.038 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.039 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.039 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.040 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.041 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.041 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.042 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.044 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.045 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 98
10:56:26.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.052 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.053 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.053 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.054 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.054 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.061 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.061 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.061 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.061 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.061 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.061 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.061 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.061 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.061 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.061 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.065 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.066 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.066 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.067 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.068 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.069 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.069 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.070 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.072 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.073 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 99
10:56:26.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.074 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.074 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.074 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.079 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.080 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.080 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.081 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.081 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.082 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.089 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.089 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.089 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.089 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.089 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.089 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.089 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.089 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.089 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.089 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.093 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.094 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.094 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.095 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.096 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.096 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.097 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.098 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.099 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.100 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 100
10:56:26.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.106 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.107 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.107 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.108 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.109 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.109 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.116 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.116 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.116 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.116 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.116 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.116 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.116 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.116 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.116 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.116 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.120 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.122 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.122 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.123 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.124 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.124 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.125 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.127 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.128 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 101
10:56:26.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.129 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.129 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.129 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.134 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.135 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.135 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.137 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.137 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.148 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.149 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.164 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.164 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.165 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.166 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.166 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.168 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.169 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 102
10:56:26.169 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.169 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.169 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.170 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.170 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.170 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.170 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.170 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.175 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.176 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.178 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.179 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.189 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.190 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.191 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.191 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.192 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.193 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.194 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.194 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.197 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 103
10:56:26.197 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.197 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.197 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.198 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.198 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.198 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.198 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.198 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.205 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.206 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.206 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.207 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.218 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.219 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.219 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.221 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.221 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.222 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.224 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.225 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 104
10:56:26.226 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.226 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.226 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.226 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.226 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.226 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.226 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.227 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.232 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.232 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.233 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.234 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.234 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.246 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.246 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.247 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.248 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.248 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.252 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.253 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 105
10:56:26.253 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.253 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.253 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.253 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.254 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.254 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.254 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.254 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.259 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.259 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.260 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.261 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.261 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.272 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.273 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.274 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.274 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.275 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.276 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.279 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.280 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 106
10:56:26.280 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.280 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.280 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.280 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.281 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.281 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.281 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.281 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.286 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.287 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.287 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.288 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.289 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.289 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.299 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.300 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.301 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.302 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.302 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.303 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.304 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.305 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.306 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.307 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 107
10:56:26.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.308 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.308 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.308 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.308 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.308 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.313 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.314 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.316 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.317 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.324 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.327 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.328 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.328 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.329 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.330 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.330 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.331 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.332 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.333 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.334 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 108
10:56:26.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.340 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.341 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.342 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.342 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.344 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.354 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.355 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.355 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.356 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.357 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.358 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.358 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.359 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.361 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.362 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 109
10:56:26.362 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.362 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.362 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.362 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.362 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.368 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.369 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.369 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.382 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.382 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.383 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.384 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.385 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.385 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.386 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.387 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.388 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.389 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 110
10:56:26.389 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.389 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.390 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.390 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.390 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.390 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.390 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.391 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.396 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.397 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.397 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.399 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.399 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.410 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.411 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.411 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.412 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.413 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.413 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.414 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.415 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.416 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.417 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 111
10:56:26.418 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.418 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.418 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.418 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.418 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.418 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.418 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.424 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.424 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.425 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.425 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.427 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.437 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.438 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.439 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.440 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.440 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.441 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.442 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.443 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.444 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.445 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 112
10:56:26.445 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.445 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.445 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.445 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.446 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.446 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.446 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.446 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.451 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.452 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.452 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.453 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.454 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.454 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.465 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.466 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.466 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.467 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.468 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.468 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.469 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.470 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.471 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.472 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 113
10:56:26.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.474 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.474 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.479 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.480 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.480 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.481 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.481 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.482 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.493 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.494 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.494 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.495 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.496 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.496 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.498 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.501 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.502 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 114
10:56:26.502 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.503 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.503 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.503 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.503 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.503 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.503 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.504 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.509 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.509 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.511 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.511 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.512 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.524 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.526 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.527 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.529 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.530 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 115
10:56:26.530 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.530 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.530 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.531 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.531 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.531 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.531 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.531 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.536 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.537 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.539 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.540 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.546 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.547 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.547 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.547 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.547 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.547 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.547 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.547 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.547 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.547 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.550 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.551 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.552 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.552 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.553 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.554 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.554 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.555 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.557 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.558 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 116
10:56:26.558 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.558 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.558 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.558 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.558 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.559 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.559 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.559 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.565 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.566 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.566 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.567 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.578 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.578 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.579 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.580 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.580 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.581 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.582 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.583 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.585 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 117
10:56:26.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.586 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.586 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.586 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.586 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.586 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.592 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.593 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.606 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.607 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.608 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.619 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.619 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.620 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.621 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.621 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.622 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.623 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.623 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.625 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.626 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 118
10:56:26.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.627 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.627 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.627 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.627 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.627 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.633 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.634 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.634 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.635 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.636 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.636 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.645 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.645 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.645 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.645 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.645 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.645 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.646 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.646 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.646 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.646 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.649 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.650 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.650 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.651 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.652 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.652 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.653 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.654 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.655 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.656 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 119
10:56:26.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.658 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.663 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.663 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.664 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.665 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.665 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.666 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.673 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.673 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.673 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.673 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.673 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.673 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.673 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.673 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.673 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.673 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.676 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.677 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.679 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.679 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.681 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.682 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.683 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.684 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 120
10:56:26.684 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.684 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.684 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.690 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.691 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.691 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.692 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.693 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.693 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.704 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.705 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.705 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.706 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.707 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.708 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.708 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.709 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.711 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.712 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 121
10:56:26.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.718 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.719 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.719 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.721 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.721 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.732 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.732 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.733 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.734 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.736 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.737 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.738 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.739 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 122
10:56:26.739 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.739 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.739 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.746 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.746 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.748 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.760 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.760 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.761 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.762 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.762 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.764 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.765 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.767 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.768 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 123
10:56:26.768 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.768 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.768 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.768 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.775 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.775 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.778 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.789 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.790 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.790 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.791 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.793 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.795 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.795 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 124
10:56:26.796 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.796 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.796 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.796 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.796 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.796 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.804 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.812 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.812 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.812 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.812 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.812 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.812 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.812 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.812 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.812 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.812 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.816 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.816 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.817 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.818 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.818 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.819 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.820 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.821 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.822 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.823 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 125
10:56:26.823 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.823 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.824 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.824 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.824 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.824 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.824 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.830 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.830 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.831 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.833 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.843 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.844 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.845 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.845 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.846 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.847 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.848 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.848 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.850 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.851 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 126
10:56:26.851 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.851 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.851 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.851 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.851 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.857 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.857 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.858 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.859 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.859 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.867 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.867 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.867 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.867 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.867 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.867 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.867 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.867 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.867 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.867 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.870 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.871 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.872 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.872 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.873 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.874 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.875 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.875 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.877 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.878 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 127
10:56:26.878 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.878 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.878 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.884 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.885 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.886 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.886 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.887 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.888 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.894 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.894 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.898 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.899 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.899 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.900 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.901 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.901 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.902 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.903 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.904 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.905 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 128
10:56:26.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.912 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.913 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.914 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.914 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.916 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.927 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.927 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.928 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.929 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.929 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.930 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.931 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.932 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.933 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.934 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 129
10:56:26.934 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.934 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.934 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.935 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.935 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.935 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.935 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.935 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.940 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.941 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.942 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.942 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.944 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.950 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.950 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.950 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.950 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.950 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.950 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.950 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.950 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.950 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.954 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.955 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.956 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.956 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.957 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.958 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.958 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.972 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:26.974 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:26.975 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 130
10:56:26.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:26.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:26.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:26.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:26.976 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:26.976 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:26.976 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:26.976 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:26.981 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:26.982 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:26.982 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:26.983 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:26.984 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:26.984 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:26.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:26.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:26.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:26.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:26.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:26.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:26.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:26.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:26.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:26.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:26.995 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:26.995 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:26.996 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:26.997 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:26.997 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:26.998 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:26.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:26.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.001 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.002 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 131
10:56:27.002 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.002 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.002 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.002 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.003 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.003 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.003 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.003 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.009 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.009 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.011 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.022 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.022 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.023 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.024 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.024 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.025 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.026 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.026 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.028 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.029 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 132
10:56:27.029 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.029 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.029 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.029 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.030 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.030 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.030 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.030 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.035 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.036 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.037 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.037 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.038 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.038 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.049 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.050 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.050 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.052 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.053 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.053 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.054 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.056 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 133
10:56:27.057 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.057 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.057 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.057 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.057 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.058 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.058 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.058 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.063 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.064 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.064 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.065 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.065 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.066 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.077 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.077 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.078 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.079 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.079 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.080 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.081 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.082 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.083 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.084 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 134
10:56:27.084 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.084 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.084 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.084 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.085 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.085 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.085 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.085 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.090 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.091 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.091 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.092 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.093 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.093 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.104 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.105 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.105 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.106 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.107 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.107 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.108 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.109 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.110 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.111 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 135
10:56:27.112 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.112 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.112 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.112 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.112 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.112 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.113 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.113 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.118 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.118 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.119 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.120 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.120 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.132 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.132 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.133 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.134 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.134 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.135 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.137 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.138 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.139 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 136
10:56:27.139 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.139 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.139 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.140 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.140 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.140 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.140 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.140 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.146 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.147 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.147 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.148 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.148 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.159 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.160 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.160 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.161 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.162 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.162 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.164 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.165 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.166 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 137
10:56:27.166 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.167 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.167 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.167 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.167 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.167 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.168 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.168 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.180 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.181 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.181 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.182 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.183 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.183 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.191 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.191 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.191 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.191 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.191 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.191 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.191 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.191 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.192 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.192 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.195 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.197 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.197 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.198 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.199 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.200 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.200 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.202 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.203 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 138
10:56:27.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.209 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.210 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.211 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.211 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.212 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.213 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.227 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.227 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.228 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.229 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.231 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.233 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.234 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 139
10:56:27.234 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.234 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.234 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.234 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.240 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.243 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.243 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.254 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.255 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.255 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.256 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.258 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.259 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.261 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.262 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 140
10:56:27.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.263 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.263 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.263 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.268 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.270 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.271 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.271 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.282 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.283 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.283 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.284 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.286 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.286 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.287 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.289 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.290 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 141
10:56:27.290 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.290 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.290 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.290 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.291 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.291 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.291 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.291 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.297 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.298 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.298 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.299 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.300 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.306 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.306 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.310 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.311 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.313 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.314 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.314 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.317 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.317 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 142
10:56:27.318 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.318 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.318 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.318 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.318 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.318 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.319 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.319 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.324 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.324 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.325 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.325 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.326 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.327 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.333 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.333 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.333 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.333 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.337 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.338 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.352 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.353 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.353 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.354 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.355 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.357 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.357 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 143
10:56:27.358 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.358 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.358 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.358 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.358 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.358 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.359 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.359 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.364 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.364 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.365 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.366 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.366 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.367 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.377 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.379 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.380 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.380 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.381 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.382 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.383 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.384 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 144
10:56:27.384 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.384 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.385 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.385 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.385 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.385 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.385 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.386 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.391 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.391 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.393 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.394 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.401 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.401 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.401 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.401 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.401 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.401 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.401 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.401 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.401 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.401 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.404 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.405 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.408 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.409 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.409 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.411 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.412 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 145
10:56:27.412 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.412 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.412 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.412 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.413 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.413 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.413 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.413 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.418 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.420 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.421 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.421 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.428 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.428 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.428 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.428 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.428 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.428 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.428 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.428 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.428 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.428 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.431 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.432 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.433 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.433 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.436 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.436 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.438 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.439 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 146
10:56:27.439 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.439 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.439 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.439 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.440 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.440 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.440 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.440 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.445 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.446 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.448 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.449 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.456 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.456 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.456 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.456 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.456 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.456 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.456 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.456 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.456 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.456 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.459 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.460 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.462 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.463 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.463 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.466 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.467 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 147
10:56:27.467 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.467 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.467 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.467 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.468 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.468 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.468 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.468 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.474 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.474 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.475 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.476 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.476 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.487 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.487 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.488 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.490 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.491 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.491 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.493 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.494 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 148
10:56:27.494 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.494 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.494 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.495 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.495 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.495 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.495 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.495 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.500 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.501 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.502 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.502 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.503 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.503 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.511 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.514 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.515 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.515 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.516 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.517 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.518 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.518 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.519 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.521 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.521 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 149
10:56:27.522 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.522 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.522 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.522 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.522 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.522 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.529 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.530 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.530 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.531 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.541 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.542 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.543 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.543 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.546 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.547 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.548 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 150
10:56:27.548 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.549 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.549 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.549 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.549 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.549 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.549 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.550 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.554 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.555 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.557 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.558 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.569 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.570 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.570 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.571 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.572 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.573 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.575 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 151
10:56:27.575 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.575 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.575 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.575 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.576 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.576 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.576 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.576 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.581 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.582 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.582 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.583 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.607 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.608 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.609 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.609 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.610 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.611 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.612 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.612 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.614 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.615 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 152
10:56:27.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.621 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.622 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.623 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.623 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.624 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.625 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.635 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.636 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.637 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.637 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.638 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.639 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.639 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.653 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.655 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.656 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 153
10:56:27.656 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.656 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.656 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.656 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.662 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.663 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.663 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.664 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.665 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.665 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.676 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.677 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.679 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.681 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.681 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.683 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.684 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 154
10:56:27.684 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.684 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.684 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.690 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.691 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.692 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.692 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.693 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.694 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.701 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.701 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.701 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.701 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.701 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.701 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.701 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.701 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.701 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.701 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.704 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.705 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.706 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.706 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.707 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.708 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.709 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.710 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.711 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.712 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 155
10:56:27.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.719 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.719 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.733 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.734 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.745 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.746 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.748 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.750 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.751 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.752 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 156
10:56:27.753 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.753 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.753 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.753 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.753 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.759 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.760 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.761 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.761 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.762 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.774 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.774 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.775 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.778 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.779 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.780 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.781 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 157
10:56:27.781 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.781 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.781 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.782 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.782 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.782 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.782 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.782 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.787 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.789 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.790 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.790 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.801 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.804 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.804 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.805 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.806 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.807 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.808 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 158
10:56:27.809 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.809 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.809 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.809 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.809 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.809 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.810 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.810 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.815 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.815 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.816 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.817 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.817 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.818 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.828 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.829 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.830 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.830 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.831 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.833 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.835 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.836 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 159
10:56:27.836 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.836 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.836 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.836 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.836 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.837 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.837 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.837 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.842 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.843 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.843 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.844 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.844 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.845 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.855 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.856 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.857 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.857 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.858 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.859 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.859 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.861 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.862 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 160
10:56:27.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.864 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.864 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.864 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.869 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.870 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.871 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.871 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.872 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.872 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.883 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.884 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.884 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.885 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.886 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.886 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.887 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.888 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.889 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.890 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 161
10:56:27.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.892 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.892 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.897 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.898 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.898 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.899 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.900 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.900 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.908 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.908 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.908 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.911 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.912 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.913 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.913 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.914 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.916 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.916 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.918 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.919 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 162
10:56:27.919 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.919 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.919 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.920 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.920 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.920 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.920 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.920 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.925 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.926 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.927 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.927 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.928 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.929 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.935 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.936 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.936 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.936 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.936 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.936 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.936 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.936 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.936 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.936 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.939 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.940 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.941 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.941 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.942 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.944 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.946 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.947 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 163
10:56:27.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.948 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.948 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.948 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.948 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.953 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.954 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.954 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.955 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.956 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.956 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.967 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.967 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.968 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.969 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.970 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.970 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.971 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.972 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:27.973 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:27.974 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 164
10:56:27.974 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:27.974 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:27.974 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:27.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:27.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:27.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:27.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:27.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:27.980 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:27.981 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:27.981 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:27.982 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:27.983 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:27.983 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:27.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:27.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:27.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:27.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:27.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:27.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:27.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:27.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:27.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:27.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:27.994 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:27.995 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:27.995 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:27.996 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:27.997 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:27.997 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:27.998 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:27.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.000 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.001 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 165
10:56:28.001 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.001 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.002 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.002 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.002 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.002 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.002 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.003 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.009 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.011 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.022 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.023 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.023 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.024 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.025 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.025 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.026 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.027 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.029 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.029 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 166
10:56:28.030 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.030 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.030 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.030 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.030 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.031 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.031 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.031 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.036 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.037 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.037 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.038 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.039 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.039 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.050 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.050 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.052 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.052 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.053 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.054 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.054 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.056 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.057 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 167
10:56:28.057 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.057 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.057 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.057 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.058 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.058 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.058 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.058 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.063 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.064 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.064 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.065 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.065 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.066 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.077 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.078 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.079 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.079 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.080 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.081 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.081 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.103 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.104 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 168
10:56:28.104 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.104 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.105 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.105 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.105 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.105 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.105 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.106 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.111 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.112 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.112 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.113 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.114 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.114 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.125 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.126 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.126 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.127 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.129 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.129 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.130 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.132 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.133 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 169
10:56:28.133 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.133 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.133 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.133 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.133 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.134 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.134 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.134 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.139 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.140 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.140 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.141 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.141 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.142 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.149 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.149 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.149 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.149 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.149 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.149 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.149 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.149 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.149 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.149 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.153 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.153 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.154 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.156 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.157 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.158 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.159 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.160 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 170
10:56:28.160 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.160 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.160 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.161 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.161 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.161 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.161 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.161 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.167 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.167 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.168 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.169 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.169 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.170 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.181 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.181 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.182 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.183 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.183 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.184 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.185 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.185 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.187 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.188 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 171
10:56:28.188 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.188 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.188 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.188 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.189 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.189 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.189 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.189 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.194 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.194 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.195 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.197 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.204 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.207 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.208 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.208 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.209 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.210 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.210 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.211 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.212 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.213 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.214 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 172
10:56:28.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.215 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.215 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.215 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.215 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.215 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.215 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.221 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.222 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.222 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.224 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.231 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.231 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.231 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.231 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.231 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.234 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.236 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.237 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.237 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.238 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.239 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.240 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.241 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 173
10:56:28.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.247 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.248 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.251 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.261 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.263 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.264 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.264 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.265 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.266 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.267 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.268 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 174
10:56:28.268 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.268 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.268 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.274 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.275 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.276 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.276 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.284 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.284 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.284 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.284 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.284 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.284 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.288 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.289 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.289 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.290 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.291 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.292 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.292 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.293 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.294 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.295 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 175
10:56:28.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.297 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.297 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.302 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.302 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.303 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.304 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.304 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.305 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.316 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.316 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.317 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.318 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.318 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.319 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.320 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.321 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.322 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 176
10:56:28.322 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.322 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.328 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.329 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.330 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.330 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.331 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.332 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.338 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.338 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.338 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.339 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.339 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.339 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.339 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.339 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.339 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.339 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.342 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.344 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.344 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.345 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.346 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.346 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.347 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.349 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.350 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 177
10:56:28.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.356 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.357 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.357 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.358 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.358 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.359 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.366 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.366 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.366 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.366 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.366 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.366 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.366 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.366 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.366 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.366 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.369 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.372 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.373 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.373 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.375 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.376 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 178
10:56:28.377 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.377 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.377 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.377 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.377 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.377 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.377 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.382 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.383 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.384 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.384 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.385 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.386 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.392 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.393 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.393 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.393 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.393 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.396 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.397 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.397 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.399 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.399 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.400 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.401 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.402 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.403 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 179
10:56:28.403 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.403 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.403 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.404 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.404 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.404 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.404 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.404 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.409 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.410 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.410 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.411 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.412 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.412 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.423 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.424 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.424 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.425 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.427 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.428 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.430 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 180
10:56:28.430 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.431 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.431 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.431 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.431 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.431 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.432 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.432 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.437 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.437 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.438 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.439 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.439 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.440 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.450 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.451 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.465 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.466 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.467 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.467 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.468 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.470 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.471 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 181
10:56:28.471 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.471 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.472 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.472 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.472 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.473 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.478 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.479 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.479 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.480 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.481 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.481 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.488 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.488 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.488 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.488 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.488 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.488 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.488 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.488 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.488 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.488 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.492 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.493 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.493 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.494 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.495 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.495 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.496 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.498 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.499 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 182
10:56:28.499 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.500 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.500 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.500 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.500 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.500 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.500 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.501 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.506 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.506 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.507 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.508 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.508 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.509 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.516 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.516 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.516 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.516 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.516 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.516 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.516 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.516 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.516 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.516 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.520 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.520 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.521 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.522 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.524 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.525 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.526 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.527 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 183
10:56:28.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.529 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.529 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.534 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.534 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.535 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.536 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.536 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.537 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.544 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.548 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.549 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.549 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.550 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.551 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.551 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.552 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.553 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.555 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.556 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 184
10:56:28.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.557 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.557 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.557 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.557 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.562 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.563 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.563 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.565 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.565 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.572 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.572 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.572 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.572 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.572 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.572 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.572 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.572 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.572 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.572 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.576 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.576 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.577 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.578 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.578 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.579 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.580 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.581 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.582 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.583 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 185
10:56:28.583 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.583 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.583 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.583 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.589 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.590 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.590 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.592 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.592 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.599 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.599 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.599 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.599 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.599 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.599 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.599 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.599 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.599 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.599 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.603 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.603 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.604 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.605 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.605 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.606 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.607 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.607 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.609 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.610 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 186
10:56:28.610 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.610 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.610 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.610 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.611 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.611 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.611 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.611 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.617 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.618 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.618 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.619 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.620 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.630 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.630 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.631 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.633 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.634 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.635 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.636 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.637 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 187
10:56:28.637 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.637 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.637 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.638 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.638 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.638 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.638 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.638 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.643 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.644 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.644 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.645 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.646 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.646 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.653 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.653 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.653 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.653 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.653 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.653 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.653 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.653 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.653 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.653 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.657 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.658 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.659 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.659 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.660 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.661 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.662 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.663 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.664 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 188
10:56:28.664 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.664 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.664 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.665 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.665 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.665 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.665 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.665 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.670 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.671 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.673 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.673 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.684 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.686 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.687 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.687 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.688 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.689 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.690 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.691 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 189
10:56:28.691 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.691 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.691 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.692 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.692 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.692 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.692 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.692 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.697 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.698 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.699 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.699 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.707 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.707 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.707 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.707 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.707 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.707 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.707 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.707 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.707 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.707 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.711 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.714 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.715 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.715 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.716 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.718 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.719 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 190
10:56:28.719 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.719 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.719 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.719 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.725 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.726 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.726 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.727 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.739 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.739 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.741 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.741 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.742 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.743 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.744 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.745 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.746 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 191
10:56:28.746 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.746 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.748 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.753 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.753 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.754 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.755 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.762 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.762 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.762 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.766 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.767 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.768 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.768 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.769 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.770 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.771 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.771 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.774 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.775 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 192
10:56:28.775 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.777 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.782 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.782 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.783 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.783 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.784 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.785 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.795 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.796 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.797 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.798 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.798 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.799 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.800 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.801 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.803 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 193
10:56:28.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.803 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.804 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.804 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.804 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.804 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.809 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.810 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.810 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.824 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.825 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.832 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.836 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.836 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.837 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.838 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.838 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.839 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.842 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.843 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 194
10:56:28.843 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.843 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.843 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.844 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.844 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.844 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.844 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.844 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.850 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.850 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.851 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.852 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.853 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.860 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.863 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.864 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.865 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.865 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.866 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.867 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.867 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.868 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.870 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.871 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 195
10:56:28.871 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.871 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.871 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.871 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.872 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.872 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.872 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.872 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.877 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.878 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.879 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.880 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.881 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.887 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.888 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.888 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.888 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.888 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.888 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.888 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.888 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.888 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.888 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.892 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.892 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.893 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.894 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.894 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.895 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.897 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.898 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 196
10:56:28.899 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.899 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.899 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.899 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.899 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.899 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.900 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.900 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.905 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.908 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.908 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.919 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.920 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.920 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.921 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.922 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.922 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.924 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.925 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.926 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 197
10:56:28.926 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.926 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.927 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.927 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.927 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.927 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.927 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.928 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.933 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.934 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.934 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.935 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.936 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.936 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.943 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.947 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.948 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.949 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.949 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.950 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.952 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.953 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.954 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 198
10:56:28.954 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.954 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.954 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.955 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.955 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.955 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.955 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.955 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.961 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.962 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.962 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.963 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.964 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.964 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.971 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.971 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.971 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.971 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.971 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.971 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.971 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.971 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.971 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.971 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:28.975 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:28.976 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:28.976 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:28.977 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:28.978 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:28.979 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:28.979 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:28.980 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:28.982 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:28.982 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 199
10:56:28.983 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:28.983 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:28.983 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:28.983 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:28.983 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:28.984 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:28.984 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:28.984 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:28.989 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:28.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:28.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:28.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:28.992 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:28.992 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:28.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:28.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:28.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:28.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:28.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:28.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:28.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:28.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:28.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:28.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.003 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.003 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.004 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.005 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.006 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.006 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.007 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.009 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.010 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 200
10:56:29.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.010 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.011 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.011 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.011 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.011 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.011 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.012 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.017 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.017 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.018 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.019 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.019 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.020 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.027 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.027 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.027 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.027 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.027 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.027 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.027 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.027 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.027 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.027 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.030 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.031 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.032 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.032 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.035 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.035 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.037 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.038 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 201
10:56:29.038 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.038 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.038 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.038 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.039 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.039 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.039 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.039 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.044 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.045 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.046 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.047 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.048 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.058 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.059 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.060 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.060 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.061 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.062 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.063 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.063 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.065 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.066 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 202
10:56:29.066 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.066 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.066 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.066 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.067 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.067 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.067 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.067 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.072 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.073 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.074 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.074 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.075 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.076 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.082 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.082 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.082 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.082 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.082 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.082 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.082 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.082 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.082 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.082 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.086 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.087 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.088 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.088 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.089 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.090 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.091 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.092 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.093 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 203
10:56:29.093 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.093 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.093 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.093 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.094 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.094 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.094 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.094 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.099 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.100 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.102 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.102 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.109 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.109 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.109 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.109 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.109 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.109 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.109 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.109 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.109 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.109 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.113 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.113 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.114 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.115 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.115 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.116 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.117 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.118 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.119 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.120 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 204
10:56:29.120 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.120 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.120 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.120 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.121 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.126 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.127 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.127 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.128 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.129 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.129 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.136 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.140 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.140 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.141 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.142 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.142 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.143 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.144 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.146 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.147 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 205
10:56:29.147 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.147 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.147 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.147 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.147 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.148 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.148 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.148 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.153 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.154 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.154 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.156 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.167 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.167 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.168 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.169 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.169 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.170 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.171 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.184 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.186 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.187 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 206
10:56:29.187 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.187 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.187 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.188 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.188 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.188 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.188 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.188 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.193 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.194 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.195 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.195 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.196 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.203 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.207 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.207 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.208 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.209 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.209 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.210 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.211 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.211 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.213 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.214 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 207
10:56:29.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.215 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.215 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.215 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.215 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.221 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.221 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.222 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.223 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.230 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.233 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.234 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.236 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.237 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.238 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.238 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.240 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.241 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 208
10:56:29.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.247 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.248 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.248 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.261 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.263 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.264 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.264 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.265 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.266 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.267 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.268 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 209
10:56:29.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.270 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.270 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.275 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.276 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.276 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.277 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.285 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.289 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.289 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.290 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.291 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.291 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.292 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.293 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.293 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.295 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.296 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 210
10:56:29.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.297 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.297 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.297 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.302 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.302 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.303 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.304 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.304 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.305 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.312 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.316 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.317 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.317 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.318 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.319 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.320 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.320 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.324 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 211
10:56:29.324 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.324 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.324 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.324 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.324 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.325 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.325 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.325 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.330 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.331 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.331 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.332 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.332 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.333 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.340 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.340 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.340 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.340 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.340 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.340 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.340 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.340 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.340 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.340 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.344 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.345 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.345 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.346 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.347 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.347 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.348 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.351 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 212
10:56:29.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.352 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.352 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.352 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.352 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.357 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.358 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.358 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.359 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.359 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.360 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.367 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.367 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.367 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.367 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.367 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.367 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.367 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.367 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.367 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.367 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.372 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.372 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.373 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.375 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.379 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 213
10:56:29.379 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.379 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.379 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.379 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.379 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.380 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.380 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.380 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.385 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.386 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.386 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.387 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.388 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.388 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.395 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.395 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.395 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.395 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.395 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.395 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.395 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.395 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.395 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.395 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.399 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.399 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.400 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.401 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.402 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.402 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.403 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.404 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.405 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.406 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 214
10:56:29.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.408 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.408 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.413 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.414 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.414 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.415 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.416 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.416 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.423 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.423 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.423 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.423 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.423 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.423 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.423 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.423 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.423 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.423 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.427 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.427 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.428 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.430 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.431 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.431 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.433 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.434 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 215
10:56:29.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.435 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.440 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.441 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.442 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.442 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.443 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.444 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.450 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.450 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.450 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.450 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.450 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.450 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.450 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.450 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.450 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.450 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.454 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.455 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.455 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.456 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.458 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.459 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.460 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.461 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 216
10:56:29.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.462 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.462 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.462 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.462 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.462 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.463 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.468 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.468 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.469 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.470 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.470 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.471 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.478 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.478 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.478 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.478 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.478 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.478 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.478 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.478 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.478 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.478 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.481 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.482 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.483 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.484 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.485 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.485 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.486 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.487 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.489 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 217
10:56:29.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.489 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.490 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.490 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.490 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.490 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.495 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.496 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.497 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.498 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.499 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.505 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.506 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.506 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.506 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.506 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.506 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.506 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.506 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.506 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.506 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.509 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.510 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.511 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.511 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.512 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.513 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.513 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.514 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.516 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.517 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 218
10:56:29.517 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.517 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.517 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.517 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.517 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.518 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.518 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.518 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.535 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.536 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.536 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.537 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.537 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.538 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.545 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.549 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.576 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.577 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.578 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.579 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.579 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.580 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.581 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.583 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.584 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 219
10:56:29.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.585 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.590 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.592 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.593 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.593 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.600 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.617 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.618 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.619 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.619 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.620 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.621 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.622 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.623 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.624 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 220
10:56:29.625 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.625 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.625 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.625 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.625 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.626 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.633 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.634 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.634 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.635 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.642 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.642 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.642 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.642 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.642 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.642 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.642 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.642 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.642 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.642 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.646 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.647 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.648 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.649 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.649 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.650 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.651 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.652 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.653 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.654 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 221
10:56:29.654 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.654 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.655 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.655 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.655 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.655 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.656 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.656 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.661 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.662 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.663 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.663 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.664 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.665 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.672 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.676 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.677 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.678 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.679 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.680 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.681 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.682 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.683 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.684 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 222
10:56:29.684 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.684 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.684 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.685 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.690 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.691 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.692 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.692 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.693 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.693 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.700 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.704 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.705 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.705 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.706 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.707 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.708 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.708 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.709 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.711 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.712 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 223
10:56:29.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.712 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.713 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.718 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.719 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.719 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.720 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.721 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.721 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.728 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.732 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.733 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.733 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.734 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.735 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.736 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.737 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.739 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.740 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 224
10:56:29.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.740 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.741 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.741 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.741 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.746 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.747 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.748 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.749 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.756 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.760 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.760 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.761 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.762 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.763 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.764 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.765 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.776 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.781 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 225
10:56:29.781 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.781 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.782 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.782 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.782 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.782 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.782 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.783 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.788 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.789 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.790 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.791 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.791 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.792 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.802 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.806 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.807 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.807 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.808 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.809 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.810 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.810 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.811 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.813 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.814 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 226
10:56:29.814 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.814 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.814 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.815 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.815 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.815 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.815 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.815 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.820 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.821 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.822 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.822 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.823 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.827 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.835 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.835 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.835 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.835 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.835 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.835 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.835 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.835 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.835 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.835 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.839 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.839 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.840 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.841 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.841 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.842 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.843 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.851 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.853 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.854 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 227
10:56:29.854 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.854 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.855 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.855 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.855 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.855 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.855 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.856 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.873 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.874 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.874 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.875 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.876 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.876 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.884 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.884 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.884 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.884 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.884 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.884 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.884 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.884 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.884 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.884 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.888 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.889 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.890 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.891 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.892 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.893 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.894 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.896 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.897 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 228
10:56:29.897 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.897 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.897 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.897 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.898 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.898 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.898 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.898 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.904 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.905 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.906 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.907 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.908 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.915 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.919 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.920 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.921 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.922 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.922 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.923 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.924 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.925 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.926 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.928 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 229
10:56:29.928 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.928 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.928 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.928 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.929 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.929 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.929 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.929 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.935 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.936 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.936 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.937 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.938 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.939 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.946 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.946 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.946 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.946 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.946 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.946 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.946 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.946 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.946 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.946 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.951 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.952 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.953 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.954 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.954 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.955 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.956 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.958 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.959 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 230
10:56:29.959 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.959 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.959 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.960 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.960 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.960 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.960 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.960 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.966 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.967 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.968 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.968 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:29.969 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:29.970 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:29.977 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:29.977 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:29.977 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:29.977 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:29.977 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:29.977 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:29.978 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:29.978 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:29.978 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:29.978 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:29.982 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:29.982 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:29.983 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:29.984 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:29.985 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:29.985 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:29.986 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:29.987 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:29.989 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:29.990 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 231
10:56:29.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:29.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:29.990 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:29.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:29.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:29.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:29.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:29.991 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:29.997 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:29.998 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:29.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:29.999 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.000 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.001 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.008 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.013 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.013 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.014 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.015 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.016 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.020 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.024 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.028 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.032 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.033 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 232
10:56:30.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.033 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.034 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.035 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.040 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.041 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.042 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.042 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.043 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.044 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.051 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.055 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.056 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.056 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.057 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.058 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.058 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.059 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.060 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.075 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.076 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 233
10:56:30.076 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.076 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.076 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.077 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.077 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.077 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.077 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.077 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.083 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.084 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.084 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.085 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.088 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.089 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.096 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.096 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.096 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.096 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.096 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.096 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.096 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.096 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.096 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.096 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.101 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.102 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.103 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.104 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.105 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.105 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.106 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.108 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.109 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 234
10:56:30.110 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.110 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.110 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.110 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.110 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.111 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.111 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.111 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.116 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.117 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.118 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.119 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.137 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.137 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.145 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.149 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.149 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.150 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.151 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.151 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.152 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.153 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.154 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.155 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.156 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 235
10:56:30.156 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.156 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.157 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.157 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.157 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.157 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.157 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.158 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.163 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.164 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.165 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.165 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.166 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.173 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.176 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.177 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.178 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.179 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.179 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.180 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.181 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.182 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.183 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.184 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 236
10:56:30.184 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.184 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.184 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.185 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.185 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.185 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.185 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.185 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.190 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.191 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.192 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.192 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.193 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.194 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.201 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.201 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.201 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.201 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.201 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.201 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.201 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.201 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.201 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.201 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.205 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.206 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.206 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.207 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.208 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.208 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.209 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.210 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.212 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.212 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 237
10:56:30.213 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.213 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.213 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.213 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.213 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.214 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.219 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.220 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.221 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.221 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.222 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.229 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.229 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.229 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.229 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.229 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.229 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.229 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.229 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.229 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.229 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.233 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.234 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.234 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.235 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.236 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.236 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.237 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.238 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.239 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.240 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 238
10:56:30.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.241 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.242 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.247 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.248 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.248 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.249 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.250 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.257 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.261 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.262 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.263 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.266 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.267 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.268 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.269 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.270 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.271 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 239
10:56:30.271 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.271 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.272 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.272 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.272 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.272 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.272 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.273 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.278 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.279 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.279 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.280 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.281 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.288 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.288 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.288 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.288 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.288 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.288 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.288 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.288 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.288 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.288 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.291 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.292 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.293 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.293 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.294 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.295 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.296 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.298 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.299 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 240
10:56:30.299 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.299 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.299 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.299 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.300 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.300 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.300 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.300 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.305 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.306 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.306 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.307 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.308 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.308 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.315 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.319 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.320 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.320 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.321 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.322 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.322 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.323 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.324 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.326 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.326 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 241
10:56:30.327 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.327 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.327 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.327 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.327 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.328 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.328 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.328 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.333 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.334 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.335 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.336 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.343 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.347 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.347 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.348 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.349 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.349 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.350 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.351 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.352 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.353 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.354 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 242
10:56:30.354 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.354 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.354 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.355 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.355 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.355 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.355 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.355 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.360 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.361 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.362 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.362 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.363 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.364 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.370 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.371 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.374 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.375 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.376 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.376 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.377 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.378 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.379 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.381 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.381 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 243
10:56:30.382 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.382 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.382 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.382 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.382 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.383 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.383 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.383 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.388 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.389 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.389 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.390 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.390 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.391 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.398 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.402 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.402 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.403 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.404 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.404 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.405 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.406 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.407 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.408 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.409 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 244
10:56:30.410 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.410 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.410 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.410 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.410 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.410 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.411 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.411 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.416 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.416 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.417 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.418 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.418 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.419 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.426 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.429 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.430 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.431 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.431 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.432 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.433 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.434 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.436 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.437 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 245
10:56:30.437 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.437 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.437 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.437 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.438 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.438 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.438 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.438 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.447 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.448 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.449 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.449 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.450 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.457 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.461 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.462 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.463 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.463 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.464 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.465 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.466 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.467 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.468 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 246
10:56:30.468 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.468 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.468 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.469 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.469 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.469 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.469 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.469 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.475 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.475 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.476 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.476 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.477 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.478 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.485 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.485 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.485 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.485 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.485 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.485 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.485 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.485 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.485 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.485 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.498 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.499 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.500 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.501 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.501 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.502 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.503 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.504 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.505 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.506 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 247
10:56:30.506 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.506 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.507 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.507 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.507 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.507 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.507 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.507 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.513 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.513 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.514 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.515 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.515 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.516 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.523 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.527 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.527 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.528 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.529 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.529 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.530 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.531 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.532 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.533 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.540 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 248
10:56:30.540 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.540 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.540 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.540 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.541 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.541 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.541 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.541 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.546 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.547 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.548 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.548 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.549 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.549 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.556 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.560 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.561 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.561 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.562 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.563 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.563 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.564 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.565 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.566 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.567 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 249
10:56:30.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.568 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.569 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.569 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.574 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.575 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.576 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.576 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.577 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.584 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.587 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.588 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.589 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.589 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.590 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.591 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.592 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.592 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.614 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.615 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 250
10:56:30.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:56:30.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator(id=357)
10:56:30.615 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator
10:56:30.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] y
10:56:30.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] yDot
10:56:30.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] tEnd
10:56:30.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] previousT
10:56:30.616 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] currentT
10:56:30.622 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) previousT)
10:56:30.622 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) tEnd, (double) currentT)
10:56:30.623 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) tEnd)
10:56:30.624 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) previousT, (double) currentT)
10:56:30.624 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) tEnd)
10:56:30.625 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] org.apache.commons.math.util.Precision.equals((double) currentT, (double) previousT)
10:56:30.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepHandlers
10:56:30.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepStart
10:56:30.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.stepSize
10:56:30.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isLastStep
10:56:30.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.eventsStates
10:56:30.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.name
10:56:30.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.evaluations
10:56:30.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.expandable
10:56:30.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.resetOccurred
10:56:30.632 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.statesInitialized
10:56:30.636 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalPreviousTime()
10:56:30.636 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getGlobalCurrentTime()
10:56:30.637 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getPreviousTime()
10:56:30.638 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getCurrentTime()
10:56:30.638 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedTime()
10:56:30.639 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.isForward()
10:56:30.640 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedState()
10:56:30.641 [pool-2152-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] interpolator.getInterpolatedDerivatives()
10:56:30.642 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:56:30.643 [pool-2152-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep iteration 251
10:56:33.679 [pool-2152-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - Exit


========= Info ==========
Nb constants             21
Nb method invocations    5
Nb field access          2
Nb variables             3
Total                    33
Nb evaluated expressions 1
Init Execution time      812 ms
Collect Execution time   11039 ms
Combine Execution time   48.0 ms
Nb Combination par sec   21 combinations/sec
Total Execution time     11899 ms
Nb line execution        252
Nb results               1

Results:
1. (n != 0) || (discarded != 0)


========================
         Stat
========================
Operators: 
OR 2
Methods: 
add(E) 2
handleStep(org.apache.commons.math.ode.sampling.StepInterpolator,boolean) 2
evaluateStep(org.apache.commons.math.ode.sampling.StepInterpolator) 2
getInterpolatedState() 2
stepAccepted(double,double[]) 2
stop() 2
arraycopy(java.lang.Object,int,java.lang.Object,int,int) 2
setInterpolatedTime(double) 2
setSoftCurrentTime(double) 2
setSoftPreviousTime(double) 2
getGlobalPreviousTime() 1
reset(double,double[]) 1
next() 1
isForward() 1
equals(double,double,int) 1
isEmpty() 1
remove() 1
reinitializeBegin(org.apache.commons.math.ode.sampling.StepInterpolator) 1
iterator() 1
computeDerivatives(double,double[],double[]) 1
getGlobalCurrentTime() 1
getEventTime() 1
Variable: 
isLastStep 16
interpolator 16
eventT 9
currentEvent 6
eventsStates 6
currentT 5
state 5
y 5
stepHandlers 4
eventY 4
length 4
statesInitialized 4
occuringEvents 4
resetOccurred 4
handler 2
iterator 2
previousT 2
yDot 1
currentY 1
tEnd 1

 & 21 & 5 & 2 & 3 & 33 & 1 & 11899 ms & 252 &
10:56:33.727 [pool-2152-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: org.apache.commons.math.ode.AbstractIntegrator:283: CONDITIONAL (n != 0) || (discarded != 0)
10:56:33.922 [pool-2152-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractIntegrator.java:133: error: cannot find symbol
        if ((n != 0) || (discarded != 0)) {
             ^
  symbol:   variable n
  location: class org.apache.commons.math.ode.AbstractIntegrator
AbstractIntegrator.java:133: error: cannot find symbol
        if ((n != 0) || (discarded != 0)) {
                         ^
  symbol:   variable discarded
  location: class org.apache.commons.math.ode.AbstractIntegrator
10:56:33.922 [pool-2152-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Patch malformed (n != 0) || (discarded != 0)
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99) ~[nopol.jar:na]
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135) ~[nopol.jar:na]
	at fr.inria.lille.repair.nopol.patch.TestPatch.passesAllTests(TestPatch.java:60) ~[nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.isOk(NoPol.java:317) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:302) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
10:56:33.923 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: invalid patch
10:56:33.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #445
10:56:33.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:280 which is executed by 137 tests
1093635194
10:56:34.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:34.140 [pool-5802-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:34.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #446
10:56:34.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:279 which is executed by 137 tests
1093635194
10:56:34.540 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #447
10:56:34.540 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:278 which is executed by 137 tests
1093635194
10:56:34.718 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #448
10:56:34.718 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:269 which is executed by 139 tests
1412156549
10:56:34.880 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #449
10:56:34.880 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:384 which is executed by 139 tests
34579990
10:56:35.044 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #450
10:56:35.044 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:268 which is executed by 140 tests
1412156549
10:56:35.204 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:35.231 [pool-5806-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:35.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #451
10:56:35.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:98 which is executed by 140 tests
724691601
10:56:35.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:35.657 [pool-5810-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (27 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:35.864 [pool-5809-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
ExpandableStatefulODE.java:44: error: missing return statement
    }
    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:56:35.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #452
10:56:35.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:356 which is executed by 141 tests
-1263631007
10:56:36.047 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #453
10:56:36.047 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:355 which is executed by 142 tests
-1263631007
10:56:36.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:36.256 [pool-5812-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:36.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #454
10:56:36.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:122 which is executed by 142 tests
1412156549
10:56:36.662 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #455
10:56:36.662 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:126 which is executed by 143 tests
724691601
10:56:36.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #456
10:56:36.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:119 which is executed by 143 tests
724691601
10:56:36.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:37.015 [pool-5816-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:37.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #457
10:56:37.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:116 which is executed by 143 tests
724691601
10:56:37.395 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:37.436 [pool-5820-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:37.668 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #458
10:56:37.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:251 which is executed by 143 tests
1093635194
10:56:37.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #459
10:56:37.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:354 which is executed by 144 tests
-1263631007
10:56:37.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:38.044 [pool-5824-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:38.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #460
10:56:38.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:293 which is executed by 144 tests
724691601
10:56:38.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #461
10:56:38.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:289 which is executed by 144 tests
724691601
10:56:38.575 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:38.602 [pool-5828-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:38.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #462
10:56:38.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:288 which is executed by 144 tests
724691601
10:56:38.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:39.036 [pool-5832-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:39.284 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #463
10:56:39.284 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:285 which is executed by 144 tests
724691601
10:56:39.444 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #464
10:56:39.444 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:167 which is executed by 144 tests
724691601
10:56:39.604 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #465
10:56:39.604 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:164 which is executed by 144 tests
724691601
10:56:39.765 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:39.792 [pool-5836-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:40.063 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #466
10:56:40.063 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:163 which is executed by 144 tests
724691601
10:56:40.259 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #467
10:56:40.259 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:115 which is executed by 144 tests
724691601
10:56:40.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:40.462 [pool-5840-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (34 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:40.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #468
10:56:40.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:114 which is executed by 144 tests
724691601
10:56:40.844 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:40.872 [pool-5844-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:41.089 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #469
10:56:41.089 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:96 which is executed by 144 tests
724691601
10:56:41.249 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:41.277 [pool-5848-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:41.515 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #470
10:56:41.515 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.EquationsMapper:96 which is executed by 144 tests
-1178182743
10:56:41.672 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #471
10:56:41.672 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.EquationsMapper:95 which is executed by 144 tests
-1178182743
10:56:41.828 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:41.855 [pool-5852-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:42.038 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #472
10:56:42.038 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.EquationsMapper:92 which is executed by 144 tests
-1178182743
10:56:42.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:42.221 [pool-5856-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:42.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:42.439 [pool-5860-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:42.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #473
10:56:42.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:262 which is executed by 144 tests
1093635194
10:56:42.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #474
10:56:42.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:261 which is executed by 144 tests
1093635194
10:56:42.982 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:43.009 [pool-5864-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:43.226 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #475
10:56:43.226 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:250 which is executed by 144 tests
1093635194
10:56:43.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:43.417 [pool-5868-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:43.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #476
10:56:43.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:249 which is executed by 144 tests
1093635194
10:56:43.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:43.820 [pool-5872-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:44.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #477
10:56:44.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:213 which is executed by 144 tests
1093635194
10:56:44.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:44.243 [pool-5876-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:44.479 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #478
10:56:44.479 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:210 which is executed by 144 tests
1093635194
10:56:44.643 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:44.671 [pool-5880-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:44.887 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #479
10:56:44.887 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:209 which is executed by 144 tests
1093635194
10:56:45.050 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:45.078 [pool-5884-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:45.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #480
10:56:45.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:208 which is executed by 144 tests
1093635194
10:56:45.476 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #481
10:56:45.476 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:203 which is executed by 144 tests
1093635194
10:56:45.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:45.667 [pool-5888-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:45.884 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:45.911 [pool-5892-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:46.135 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #482
10:56:46.135 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:193 which is executed by 144 tests
1093635194
10:56:46.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #483
10:56:46.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:192 which is executed by 144 tests
1093635194
10:56:46.463 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:46.491 [pool-5896-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:46.739 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #484
10:56:46.739 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:155 which is executed by 145 tests
724691601
10:56:46.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #485
10:56:46.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:415 which is executed by 145 tests
34579990
10:56:47.065 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #486
10:56:47.065 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:413 which is executed by 145 tests
34579990
10:56:47.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:47.254 [pool-5900-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:47.463 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #487
10:56:47.463 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:412 which is executed by 145 tests
34579990
10:56:47.625 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:47.652 [pool-5904-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:47.884 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #488
10:56:47.884 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:408 which is executed by 145 tests
34579990
10:56:48.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #489
10:56:48.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:406 which is executed by 145 tests
34579990
10:56:48.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:48.258 [pool-5908-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:48.467 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #490
10:56:48.467 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:405 which is executed by 145 tests
34579990
10:56:48.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:48.655 [pool-5912-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:48.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #491
10:56:48.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:404 which is executed by 145 tests
34579990
10:56:49.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #492
10:56:49.035 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:403 which is executed by 145 tests
34579990
10:56:49.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #493
10:56:49.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:402 which is executed by 145 tests
34579990
10:56:49.372 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:49.399 [pool-5916-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:49.608 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:49.635 [pool-5920-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:49.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #494
10:56:49.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:392 which is executed by 145 tests
1093635194
10:56:50.022 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #495
10:56:50.022 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:199 which is executed by 148 tests
724691601
10:56:50.180 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #496
10:56:50.180 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:197 which is executed by 148 tests
724691601
10:56:50.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:50.367 [pool-5924-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:50.601 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #497
10:56:50.602 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:192 which is executed by 148 tests
724691601
10:56:50.762 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:50.790 [pool-5928-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:51.008 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:51.034 [pool-5932-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:51.258 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #498
10:56:51.258 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:181 which is executed by 148 tests
724691601
10:56:51.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #499
10:56:51.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:175 which is executed by 148 tests
724691601
10:56:51.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #500
10:56:51.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.ExpandableStatefulODE:174 which is executed by 148 tests
724691601
10:56:51.736 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:51.764 [pool-5936-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:51.998 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #501
10:56:51.998 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:387 which is executed by 148 tests
1093635194
10:56:52.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:52.190 [pool-5940-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:52.404 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:52.431 [pool-5944-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:52.653 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #502
10:56:52.653 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:386 which is executed by 148 tests
1093635194
10:56:52.817 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #503
10:56:52.817 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:384 which is executed by 148 tests
1093635194
10:56:52.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #504
10:56:52.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.EquationsMapper:81 which is executed by 152 tests
-1178182743
10:56:53.152 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #505
10:56:53.152 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.EquationsMapper:80 which is executed by 152 tests
-1178182743
10:56:53.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:53.335 [pool-5948-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:53.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #506
10:56:53.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.EquationsMapper:77 which is executed by 152 tests
-1178182743
10:56:53.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:53.709 [pool-5952-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:53.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:53.926 [pool-5956-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:54.132 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #507
10:56:54.132 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:380 which is executed by 153 tests
34579990
10:56:54.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #508
10:56:54.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:379 which is executed by 153 tests
34579990
10:56:54.473 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:54.500 [pool-5960-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:54.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #509
10:56:54.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:378 which is executed by 153 tests
34579990
10:56:54.876 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:54.904 [pool-5964-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:55.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #510
10:56:55.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:307 which is executed by 153 tests
34579990
10:56:55.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #511
10:56:55.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:305 which is executed by 153 tests
34579990
10:56:55.443 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:55.471 [pool-5968-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:55.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #512
10:56:55.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:302 which is executed by 153 tests
34579990
10:56:55.869 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:55.901 [pool-5972-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:56.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #513
10:56:56.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:301 which is executed by 153 tests
34579990
10:56:56.284 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:56.312 [pool-5976-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:56.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #514
10:56:56.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:300 which is executed by 153 tests
34579990
10:56:56.680 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:56.707 [pool-5980-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:56.917 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #515
10:56:56.917 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:299 which is executed by 153 tests
34579990
10:56:57.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:57.120 [pool-5984-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:57.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #516
10:56:57.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:292 which is executed by 153 tests
34579990
10:56:57.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #517
10:56:57.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:291 which is executed by 153 tests
34579990
10:56:57.653 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:57.680 [pool-5988-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:57.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #518
10:56:57.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:290 which is executed by 153 tests
34579990
10:56:58.049 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:58.076 [pool-5992-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:58.284 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #519
10:56:58.284 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:289 which is executed by 153 tests
34579990
10:56:58.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:58.489 [pool-5996-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:58.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #520
10:56:58.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:230 which is executed by 153 tests
34579990
10:56:58.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:58.886 [pool-6000-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:59.094 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #521
10:56:59.094 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:229 which is executed by 153 tests
34579990
10:56:59.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:59.282 [pool-6004-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:59.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #522
10:56:59.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:228 which is executed by 153 tests
34579990
10:56:59.666 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:56:59.694 [pool-6008-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:56:59.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #523
10:56:59.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:224 which is executed by 153 tests
34579990
10:57:00.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:00.116 [pool-6012-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:00.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:00.357 [pool-6016-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:00.575 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #524
10:57:00.575 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:223 which is executed by 153 tests
34579990
10:57:00.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:00.799 [pool-6020-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:01.022 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #525
10:57:01.022 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:222 which is executed by 153 tests
34579990
10:57:01.182 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:01.211 [pool-6024-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:01.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #526
10:57:01.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:221 which is executed by 153 tests
34579990
10:57:01.580 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:01.607 [pool-6028-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:01.814 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #527
10:57:01.815 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:220 which is executed by 153 tests
34579990
10:57:01.977 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:02.004 [pool-6032-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:02.255 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #528
10:57:02.255 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:200 which is executed by 153 tests
1093635194
10:57:02.421 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:02.448 [pool-6036-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:02.663 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:02.691 [pool-6040-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:02.918 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #529
10:57:02.918 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.EquationsMapper:65 which is executed by 154 tests
-1178182743
10:57:03.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #530
10:57:03.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:195 which is executed by 157 tests
1412156549
10:57:03.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #531
10:57:03.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:186 which is executed by 161 tests
1093635194
10:57:03.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #532
10:57:03.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:185 which is executed by 161 tests
1093635194
10:57:03.581 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:03.609 [pool-6044-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:03.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #533
10:57:03.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:170 which is executed by 161 tests
1093635194
10:57:03.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #534
10:57:03.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.AbstractIntegrator:169 which is executed by 161 tests
1093635194
10:57:04.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:04.187 [pool-6048-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:04.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #535
10:57:04.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3035 which is executed by 163 tests
1033054629
10:57:04.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #536
10:57:04.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3032 which is executed by 163 tests
1033054629
10:57:04.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:05.003 [pool-6052-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (27 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:05.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:05.972 [pool-6056-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:06.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #537
10:57:06.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:236 which is executed by 164 tests
34579990
10:57:07.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #538
10:57:07.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.ode.sampling.AbstractStepInterpolator:212 which is executed by 164 tests
34579990
10:57:07.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:07.191 [pool-6060-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:07.409 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:07.435 [pool-6064-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:07.632 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #539
10:57:07.632 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:134 which is executed by 165 tests
1412156549
10:57:07.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #540
10:57:07.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:128 which is executed by 171 tests
1412156549
10:57:07.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #541
10:57:07.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:140 which is executed by 172 tests
1412156549
10:57:08.132 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #542
10:57:08.132 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3370 which is executed by 178 tests
1033054629
10:57:08.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:08.362 [pool-6068-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:09.221 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #543
10:57:09.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:116 which is executed by 186 tests
1412156549
10:57:09.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #544
10:57:09.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:110 which is executed by 186 tests
1412156549
10:57:09.539 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #545
10:57:09.539 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:298 which is executed by 187 tests
1412156549
10:57:09.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #546
10:57:09.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:297 which is executed by 187 tests
1412156549
10:57:09.855 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #547
10:57:09.855 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:294 which is executed by 187 tests
1412156549
10:57:10.013 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:10.039 [pool-6072-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:10.237 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #548
10:57:10.237 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:154 which is executed by 187 tests
1412156549
10:57:10.404 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #549
10:57:10.404 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:153 which is executed by 187 tests
1412156549
10:57:10.561 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:10.588 [pool-6076-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:10.784 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #550
10:57:10.784 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:190 which is executed by 188 tests
1412156549
10:57:10.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #551
10:57:10.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:187 which is executed by 188 tests
1412156549
10:57:11.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:11.132 [pool-6080-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:11.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #552
10:57:11.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:182 which is executed by 188 tests
1412156549
10:57:11.499 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #553
10:57:11.499 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:181 which is executed by 188 tests
1412156549
10:57:11.656 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:11.683 [pool-6084-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:11.891 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #554
10:57:11.891 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:180 which is executed by 188 tests
1412156549
10:57:12.048 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:12.074 [pool-6088-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:12.280 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #555
10:57:12.280 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:179 which is executed by 188 tests
1412156549
10:57:12.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:12.463 [pool-6092-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:12.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #556
10:57:12.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:178 which is executed by 188 tests
1412156549
10:57:12.819 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:12.846 [pool-6096-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:13.062 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #557
10:57:13.062 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:177 which is executed by 188 tests
1412156549
10:57:13.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:13.249 [pool-6100-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:13.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #558
10:57:13.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:176 which is executed by 188 tests
1412156549
10:57:13.614 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:13.658 [pool-6104-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:13.855 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #559
10:57:13.855 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:173 which is executed by 188 tests
1412156549
10:57:14.013 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:14.039 [pool-6108-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:14.234 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #560
10:57:14.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3369 which is executed by 192 tests
1033054629
10:57:14.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:14.475 [pool-6112-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:15.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:15.355 [pool-6116-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:16.202 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #561
10:57:16.202 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3368 which is executed by 192 tests
1033054629
10:57:16.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:16.433 [pool-6120-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:17.267 [pool-6119-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:1909: error: variable y might not have been initialized
        if (y == x) {
            ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:57:17.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #562
10:57:17.267 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3364 which is executed by 192 tests
1033054629
10:57:17.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:17.499 [pool-6122-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:18.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:18.369 [pool-6126-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:19.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #563
10:57:19.214 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:340 which is executed by 199 tests
-1263631007
10:57:19.384 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #564
10:57:19.384 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.Precision:272 which is executed by 202 tests
627790943
10:57:19.546 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:19.572 [pool-6130-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:19.775 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #565
10:57:19.775 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:336 which is executed by 204 tests
-1263631007
10:57:19.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:19.961 [pool-6134-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:20.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:20.187 [pool-6138-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:20.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #566
10:57:20.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:920 which is executed by 205 tests
1033054629
10:57:20.602 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:20.629 [pool-6142-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:21.451 [pool-6141-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:450: error: variable result might not have been initialized
        return result;
               ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:57:21.452 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #567
10:57:21.452 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1576 which is executed by 207 tests
1033054629
10:57:21.654 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #568
10:57:21.654 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1574 which is executed by 207 tests
1033054629
10:57:21.854 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #569
10:57:21.854 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1572 which is executed by 207 tests
1033054629
10:57:22.054 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:22.080 [pool-6144-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:22.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #570
10:57:22.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1571 which is executed by 207 tests
1033054629
10:57:23.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:23.182 [pool-6148-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:24.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #571
10:57:24.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1570 which is executed by 207 tests
1033054629
10:57:24.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:24.249 [pool-6152-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:25.085 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #572
10:57:25.085 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1569 which is executed by 207 tests
1033054629
10:57:25.287 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:25.314 [pool-6156-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:26.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #573
10:57:26.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1568 which is executed by 207 tests
1033054629
10:57:26.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:26.390 [pool-6160-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:27.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #574
10:57:27.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1567 which is executed by 207 tests
1033054629
10:57:27.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #575
10:57:27.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1565 which is executed by 207 tests
1033054629
10:57:27.624 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:27.650 [pool-6164-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:28.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #576
10:57:28.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1564 which is executed by 207 tests
1033054629
10:57:28.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:28.713 [pool-6168-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:29.591 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #577
10:57:29.591 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1562 which is executed by 207 tests
1033054629
10:57:29.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #578
10:57:29.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1561 which is executed by 207 tests
1033054629
10:57:29.992 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #579
10:57:29.992 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1558 which is executed by 207 tests
1033054629
10:57:30.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:30.219 [pool-6172-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:31.056 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #580
10:57:31.056 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1557 which is executed by 207 tests
1033054629
10:57:31.258 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:31.285 [pool-6176-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:32.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #581
10:57:32.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1556 which is executed by 207 tests
1033054629
10:57:32.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #582
10:57:32.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1555 which is executed by 207 tests
1033054629
10:57:32.544 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #583
10:57:32.544 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1552 which is executed by 207 tests
1033054629
10:57:32.755 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #584
10:57:32.755 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1551 which is executed by 207 tests
1033054629
10:57:32.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #585
10:57:32.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1547 which is executed by 207 tests
1033054629
10:57:33.156 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:33.182 [pool-6180-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:34.034 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:34.060 [pool-6184-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:34.897 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #586
10:57:34.897 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1546 which is executed by 207 tests
1033054629
10:57:35.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #587
10:57:35.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1538 which is executed by 207 tests
1033054629
10:57:35.303 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #588
10:57:35.303 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1537 which is executed by 207 tests
1033054629
10:57:35.503 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:35.529 [pool-6188-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:36.330 [pool-6187-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:844: error: variable yb might not have been initialized
        final double ab = ((lna * yb) + (lnb * ya)) + (lnb * yb);
                                  ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:57:36.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #589
10:57:36.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1536 which is executed by 207 tests
1033054629
10:57:36.539 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:36.566 [pool-6190-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:37.380 [pool-6189-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:826: error: variable ya might not have been initialized
            yb = y - ya;
                     ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:57:37.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #590
10:57:37.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1535 which is executed by 207 tests
1033054629
10:57:37.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #591
10:57:37.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1534 which is executed by 207 tests
1033054629
10:57:37.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:37.809 [pool-6192-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:38.618 [pool-6191-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:841: error: variable ya might not have been initialized
        final double aa = lna * ya;
                                ^
FastMath.java:842: error: variable yb might not have been initialized
        final double ab = ((lna * yb) + (lnb * ya)) + (lnb * yb);
                                  ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:57:38.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:38.644 [pool-6194-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:39.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #592
10:57:39.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1517 which is executed by 207 tests
1033054629
10:57:39.702 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:39.729 [pool-6198-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:40.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:40.588 [pool-6202-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:41.445 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #593
10:57:41.445 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1503 which is executed by 207 tests
1033054629
10:57:41.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:41.673 [pool-6206-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:42.513 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:42.546 [pool-6210-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:43.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #594
10:57:43.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1479 which is executed by 207 tests
1033054629
10:57:43.586 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:43.613 [pool-6214-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:44.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:44.486 [pool-6218-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:45.324 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #595
10:57:45.324 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1467 which is executed by 207 tests
1033054629
10:57:45.524 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:45.551 [pool-6222-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:46.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:46.443 [pool-6226-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:47.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #596
10:57:47.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1456 which is executed by 207 tests
1033054629
10:57:47.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:47.523 [pool-6230-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:48.364 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:48.390 [pool-6234-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:49.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #597
10:57:49.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1431 which is executed by 208 tests
1033054629
10:57:49.447 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:49.474 [pool-6238-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:50.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:50.334 [pool-6242-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:51.183 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #598
10:57:51.183 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1426 which is executed by 208 tests
1033054629
10:57:51.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:51.411 [pool-6246-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:52.258 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:52.285 [pool-6250-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:53.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #599
10:57:53.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1422 which is executed by 208 tests
1033054629
10:57:53.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:53.359 [pool-6254-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:54.210 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:54.236 [pool-6258-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:55.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #600
10:57:55.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1420 which is executed by 208 tests
1033054629
10:57:55.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #601
10:57:55.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1321 which is executed by 214 tests
1033054629
10:57:55.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:55.511 [pool-6262-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:56.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #602
10:57:56.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1320 which is executed by 214 tests
1033054629
10:57:56.558 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:56.584 [pool-6266-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:57.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #603
10:57:57.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1266 which is executed by 214 tests
1033054629
10:57:57.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #604
10:57:57.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1265 which is executed by 214 tests
1033054629
10:57:57.828 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:57.855 [pool-6270-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:58.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #605
10:57:58.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1264 which is executed by 214 tests
1033054629
10:57:58.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:58.936 [pool-6274-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:57:59.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #606
10:57:59.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1256 which is executed by 214 tests
1033054629
10:57:59.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:57:59.999 [pool-6278-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:00.846 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #607
10:58:00.846 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1255 which is executed by 214 tests
1033054629
10:58:01.047 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:01.073 [pool-6282-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:01.902 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #608
10:58:01.902 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1251 which is executed by 214 tests
1033054629
10:58:02.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:02.137 [pool-6286-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:02.982 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #609
10:58:02.982 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1250 which is executed by 214 tests
1033054629
10:58:03.182 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:03.208 [pool-6290-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:04.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #610
10:58:04.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1249 which is executed by 214 tests
1033054629
10:58:04.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:04.291 [pool-6294-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:05.135 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #611
10:58:05.135 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1247 which is executed by 214 tests
1033054629
10:58:05.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:05.363 [pool-6298-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:06.196 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #612
10:58:06.196 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1246 which is executed by 214 tests
1033054629
10:58:06.404 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:06.431 [pool-6302-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:07.279 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #613
10:58:07.279 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1243 which is executed by 214 tests
1033054629
10:58:07.479 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:07.506 [pool-6306-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:08.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #614
10:58:08.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1242 which is executed by 214 tests
1033054629
10:58:08.545 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:08.572 [pool-6310-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:09.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #615
10:58:09.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1241 which is executed by 214 tests
1033054629
10:58:09.626 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:09.652 [pool-6314-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:10.483 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #616
10:58:10.483 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1239 which is executed by 214 tests
1033054629
10:58:10.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:10.720 [pool-6318-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (35 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:11.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #617
10:58:11.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1238 which is executed by 214 tests
1033054629
10:58:11.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:11.819 [pool-6322-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:12.654 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #618
10:58:12.654 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1236 which is executed by 214 tests
1033054629
10:58:12.855 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:12.881 [pool-6326-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:13.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #619
10:58:13.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1234 which is executed by 214 tests
1033054629
10:58:13.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #620
10:58:13.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1233 which is executed by 214 tests
1033054629
10:58:14.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #621
10:58:14.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1230 which is executed by 214 tests
1033054629
10:58:14.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:14.380 [pool-6330-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:15.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #622
10:58:15.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1229 which is executed by 214 tests
1033054629
10:58:15.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:15.451 [pool-6334-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:16.288 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #623
10:58:16.288 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1228 which is executed by 214 tests
1033054629
10:58:16.488 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #624
10:58:16.488 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1227 which is executed by 214 tests
1033054629
10:58:16.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #625
10:58:16.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1224 which is executed by 214 tests
1033054629
10:58:16.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #626
10:58:16.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1223 which is executed by 214 tests
1033054629
10:58:17.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #627
10:58:17.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1222 which is executed by 214 tests
1033054629
10:58:17.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #628
10:58:17.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1221 which is executed by 214 tests
1033054629
10:58:17.488 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #629
10:58:17.488 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1220 which is executed by 214 tests
1033054629
10:58:17.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #630
10:58:17.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3471 which is executed by 264 tests
1033054629
10:58:17.889 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:17.916 [pool-6338-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:18.784 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #631
10:58:18.784 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:875 which is executed by 296 tests
1033054629
10:58:19.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:19.028 [pool-6342-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:19.832 [pool-6341-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:438: error: variable intPartB might not have been initialized
        double tempB = ((intPartA * fracPartB) + (intPartB * fracPartA)) + (intPartB * fracPartB);
                                                  ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:58:19.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #632
10:58:19.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:874 which is executed by 296 tests
1033054629
10:58:20.050 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:20.076 [pool-6344-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:20.912 [pool-6343-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:437: error: variable intPartA might not have been initialized
        double tempA = intPartA * fracPartA;
                       ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:58:20.912 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #633
10:58:20.912 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:866 which is executed by 302 tests
1033054629
10:58:21.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:21.138 [pool-6346-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:21.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:21.999 [pool-6350-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:22.838 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #634
10:58:22.838 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:864 which is executed by 302 tests
1033054629
10:58:23.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:23.063 [pool-6354-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:23.872 [pool-6353-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:418: error: variable intVal might not have been initialized
            if (intVal > 709) {
                ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:58:23.872 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #635
10:58:23.872 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3470 which is executed by 312 tests
1033054629
10:58:24.077 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:24.104 [pool-6356-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:24.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:24.965 [pool-6360-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:25.824 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #636
10:58:25.824 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3354 which is executed by 330 tests
1033054629
10:58:26.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #637
10:58:26.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3350 which is executed by 377 tests
1033054629
10:58:26.234 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:26.261 [pool-6364-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:27.097 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:27.123 [pool-6368-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:27.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #638
10:58:27.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3346 which is executed by 377 tests
1033054629
10:58:28.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:28.203 [pool-6372-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:29.034 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:29.061 [pool-6376-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:29.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #639
10:58:29.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3345 which is executed by 377 tests
1033054629
10:58:30.104 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:30.131 [pool-6380-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:30.937 [pool-6379-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:1894: error: variable y might not have been initialized
        if ((x < 0) && (y != x)) {
                        ^
FastMath.java:1897: error: variable y might not have been initialized
        if (y == 0) {
            ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:58:30.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #640
10:58:30.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3341 which is executed by 379 tests
1033054629
10:58:31.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:31.170 [pool-6382-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:32.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:32.030 [pool-6386-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:32.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #641
10:58:32.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3337 which is executed by 379 tests
1033054629
10:58:33.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:33.105 [pool-6390-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:33.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:33.961 [pool-6394-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:34.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #642
10:58:34.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3539 which is executed by 410 tests
1033054629
10:58:35.032 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:35.066 [pool-6398-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:35.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #643
10:58:35.902 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.Precision:280 which is executed by 424 tests
627790943
10:58:36.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #644
10:58:36.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.Precision:278 which is executed by 424 tests
627790943
10:58:36.225 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #645
10:58:36.225 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.Precision:274 which is executed by 424 tests
627790943
10:58:36.403 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:36.430 [pool-6402-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:36.633 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:36.659 [pool-6406-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:36.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #646
10:58:36.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.Precision:271 which is executed by 424 tests
627790943
10:58:37.024 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:37.050 [pool-6410-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:37.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:37.279 [pool-6414-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:37.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #647
10:58:37.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.Precision:268 which is executed by 424 tests
627790943
10:58:37.655 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #648
10:58:37.655 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.Precision:267 which is executed by 424 tests
627790943
10:58:37.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #649
10:58:37.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3005 which is executed by 427 tests
1033054629
10:58:38.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #650
10:58:38.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3542 which is executed by 491 tests
1033054629
10:58:38.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:38.248 [pool-6418-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:39.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #651
10:58:39.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.Incrementor:153 which is executed by 509 tests
-1541725837
10:58:39.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #652
10:58:39.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.Incrementor:150 which is executed by 510 tests
-1541725837
10:58:39.436 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:39.462 [pool-6422-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:39.658 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:39.685 [pool-6426-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:39.885 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #653
10:58:39.885 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.Incrementor:160 which is executed by 531 tests
-1541725837
10:58:40.041 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #654
10:58:40.041 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.Incrementor:159 which is executed by 531 tests
-1541725837
10:58:40.196 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:40.223 [pool-6430-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:40.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #655
10:58:40.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.Incrementor:92 which is executed by 548 tests
-1541725837
10:58:40.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #656
10:58:40.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.Incrementor:91 which is executed by 548 tests
-1541725837
10:58:40.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:40.764 [pool-6434-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:40.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #657
10:58:40.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3541 which is executed by 553 tests
1033054629
10:58:41.168 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:41.195 [pool-6438-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:42.070 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:42.097 [pool-6442-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:42.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #658
10:58:42.942 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3538 which is executed by 581 tests
1033054629
10:58:43.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:43.174 [pool-6446-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:44.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:44.044 [pool-6450-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:44.878 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #659
10:58:44.878 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath$ExpIntTable:3711 which is executed by 1188 tests
1033054629
10:58:45.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #660
10:58:45.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:931 which is executed by 594 tests
1033054629
10:58:45.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #661
10:58:45.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:925 which is executed by 594 tests
1033054629
10:58:45.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:45.516 [pool-6454-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:46.355 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:46.381 [pool-6458-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:47.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #662
10:58:47.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:919 which is executed by 594 tests
1033054629
10:58:47.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:47.450 [pool-6462-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:48.263 [pool-6461-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:448: error: variable result might not have been initialized
        return result;
               ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:58:48.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:48.297 [pool-6464-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (31 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:49.196 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #663
10:58:49.196 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:917 which is executed by 594 tests
1033054629
10:58:49.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #664
10:58:49.397 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:911 which is executed by 594 tests
1033054629
10:58:49.605 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #665
10:58:49.605 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:910 which is executed by 594 tests
1033054629
10:58:49.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #666
10:58:49.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:903 which is executed by 594 tests
1033054629
10:58:49.999 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:50.027 [pool-6468-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:50.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #667
10:58:50.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:902 which is executed by 594 tests
1033054629
10:58:51.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:51.088 [pool-6472-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:51.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #668
10:58:51.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:901 which is executed by 594 tests
1033054629
10:58:52.154 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:52.182 [pool-6476-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:53.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #669
10:58:53.029 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:900 which is executed by 594 tests
1033054629
10:58:53.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:53.285 [pool-6480-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (31 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:54.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #670
10:58:54.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:899 which is executed by 594 tests
1033054629
10:58:54.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #671
10:58:54.352 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:890 which is executed by 594 tests
1033054629
10:58:54.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #672
10:58:54.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:884 which is executed by 594 tests
1033054629
10:58:54.763 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #673
10:58:54.763 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:883 which is executed by 594 tests
1033054629
10:58:54.978 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #674
10:58:54.978 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:882 which is executed by 594 tests
1033054629
10:58:55.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #675
10:58:55.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath$ExpFracTable:3754 which is executed by 1196 tests
1033054629
10:58:55.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #676
10:58:55.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1324 which is executed by 598 tests
1033054629
10:58:55.588 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #677
10:58:55.588 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1319 which is executed by 598 tests
1033054629
10:58:55.786 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:55.813 [pool-6484-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:56.643 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:56.671 [pool-6488-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:57.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #678
10:58:57.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1317 which is executed by 598 tests
1033054629
10:58:57.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:57.809 [pool-6492-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:58.645 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #679
10:58:58.645 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1316 which is executed by 598 tests
1033054629
10:58:58.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:58.873 [pool-6496-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:58:59.743 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #680
10:58:59.743 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1315 which is executed by 598 tests
1033054629
10:58:59.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:58:59.971 [pool-6500-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:00.808 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #681
10:59:00.808 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1314 which is executed by 598 tests
1033054629
10:59:01.009 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:01.036 [pool-6504-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:01.904 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #682
10:59:01.904 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1312 which is executed by 598 tests
1033054629
10:59:02.104 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:02.131 [pool-6508-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:02.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #683
10:59:02.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1311 which is executed by 598 tests
1033054629
10:59:03.181 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:03.208 [pool-6512-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:04.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #684
10:59:04.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1310 which is executed by 598 tests
1033054629
10:59:04.275 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:04.303 [pool-6516-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:05.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #685
10:59:05.139 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1309 which is executed by 598 tests
1033054629
10:59:05.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:05.367 [pool-6520-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:06.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #686
10:59:06.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1307 which is executed by 598 tests
1033054629
10:59:06.435 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:06.462 [pool-6524-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:07.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #687
10:59:07.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1306 which is executed by 598 tests
1033054629
10:59:07.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:07.527 [pool-6528-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:08.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #688
10:59:08.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1305 which is executed by 598 tests
1033054629
10:59:08.594 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:08.621 [pool-6532-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:09.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #689
10:59:09.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1304 which is executed by 598 tests
1033054629
10:59:09.657 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:09.684 [pool-6536-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:10.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #690
10:59:10.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1302 which is executed by 598 tests
1033054629
10:59:10.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:10.776 [pool-6540-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:11.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #691
10:59:11.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1301 which is executed by 598 tests
1033054629
10:59:11.823 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:11.850 [pool-6544-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:12.687 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #692
10:59:12.687 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1300 which is executed by 598 tests
1033054629
10:59:12.886 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:12.913 [pool-6548-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:13.751 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #693
10:59:13.751 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1299 which is executed by 598 tests
1033054629
10:59:13.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:13.978 [pool-6552-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:14.813 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #694
10:59:14.813 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1297 which is executed by 598 tests
1033054629
10:59:15.013 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:15.041 [pool-6556-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:15.878 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #695
10:59:15.878 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1296 which is executed by 598 tests
1033054629
10:59:16.078 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:16.105 [pool-6560-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #696
10:59:16.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1295 which is executed by 598 tests
1033054629
10:59:17.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #697
10:59:17.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1294 which is executed by 598 tests
1033054629
10:59:17.347 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #698
10:59:17.347 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1293 which is executed by 598 tests
1033054629
10:59:17.546 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #699
10:59:17.546 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1292 which is executed by 598 tests
1033054629
10:59:17.745 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #700
10:59:17.745 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1218 which is executed by 598 tests
1033054629
10:59:17.944 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:17.971 [pool-6564-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:18.856 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:18.883 [pool-6568-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:19.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #701
10:59:19.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1216 which is executed by 598 tests
1033054629
10:59:19.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #702
10:59:19.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1215 which is executed by 598 tests
1033054629
10:59:20.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #703
10:59:20.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1213 which is executed by 598 tests
1033054629
10:59:20.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #704
10:59:20.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1202 which is executed by 598 tests
1033054629
10:59:20.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #705
10:59:20.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath$lnMant:3791 which is executed by 598 tests
1033054629
10:59:20.751 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #706
10:59:20.751 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:826 which is executed by 607 tests
1033054629
10:59:21.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:21.046 [pool-6572-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:21.852 [pool-6571-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:426: error: variable intVal might not have been initialized
        final int intFrac = ((int) ((x - intVal) * 1024.0));
                                         ^
FastMath.java:435: error: variable intPartA might not have been initialized
        double tempA = intPartA * fracPartA;
                       ^
FastMath.java:436: error: variable intPartB might not have been initialized
        double tempB = ((intPartA * fracPartB) + (intPartB * fracPartA)) + (intPartB * fracPartB);
                                                  ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:59:21.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:21.880 [pool-6574-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:22.729 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #707
10:59:22.729 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1154 which is executed by 610 tests
1033054629
10:59:22.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:22.956 [pool-6578-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:23.789 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:23.816 [pool-6582-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:24.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #708
10:59:24.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1134 which is executed by 610 tests
1033054629
10:59:25.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:25.030 [pool-6586-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:25.868 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:25.895 [pool-6590-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:26.736 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #709
10:59:26.736 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1132 which is executed by 610 tests
1033054629
10:59:26.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #710
10:59:26.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1123 which is executed by 611 tests
1033054629
10:59:27.133 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:27.161 [pool-6594-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:28.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:28.029 [pool-6598-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:28.869 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #711
10:59:28.869 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1112 which is executed by 611 tests
1033054629
10:59:29.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:29.096 [pool-6602-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:29.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:29.972 [pool-6606-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:30.808 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #712
10:59:30.808 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1109 which is executed by 611 tests
1033054629
10:59:31.008 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #713
10:59:31.008 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:1106 which is executed by 612 tests
1033054629
10:59:31.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:31.245 [pool-6610-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:32.094 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:32.120 [pool-6614-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:32.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #714
10:59:32.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.MathUtils:518 which is executed by 671 tests
-1550426518
10:59:33.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #715
10:59:33.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.MathUtils:515 which is executed by 676 tests
-1550426518
10:59:33.294 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:33.322 [pool-6618-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:33.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)
10:59:33.560 [pool-6622-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 2
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math.ode.events.EventStateTest)
[going backard in time! (7.796578226186635 < 10.99)]
java.lang.AssertionError: going backard in time! (7.796578226186635 < 10.99)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)
    at org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)
    at org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)
    at org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)

10:59:33.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #716
10:59:33.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:375 which is executed by 941 tests
1033054629
10:59:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #717
10:59:33.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.util.FastMath:3023 which is executed by 1221 tests
1033054629
10:59:34.177 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
10:59:34.397 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 587
10:59:34.397 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 3744
10:59:34.397 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 552
10:59:34.397 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 2
10:59:34.397 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 2291520ms
10:59:34.397 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_ANGELIC_VALUE
Command exited with non-zero status 255
3317.26user 91.74system 38:13.79elapsed 148%CPU (0avgtext+0avgdata 3437312maxresident)k
55048inputs+17208outputs (7major+1275631minor)pagefaults 0swaps


Node: graphene-48.nancy.grid5000.fr



Date: Sat Dec  1 10:59:34 EST 2018

