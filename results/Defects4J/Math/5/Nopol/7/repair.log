cd /tmp/Nopol_Defects4J_Math_5;
export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 5 \
	--source src/main/java/ \
	--classpath "target/classes/:target/test-classes/:/tmp/Nopol_Defects4J_Math_5/target/classes/:/tmp/Nopol_Defects4J_Math_5/target/test-classes/:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
00:27:28.068 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
00:27:28.075 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/Nopol_Defects4J_Math_5/target/classes/, file:/tmp/Nopol_Defects4J_Math_5/target/test-classes/, file:/tmp/Nopol_Defects4J_Math_5/target/classes/, file:/tmp/Nopol_Defects4J_Math_5/target/test-classes/, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
00:27:28.075 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
00:27:28.075 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math3.distribution.EnumeratedRealDistributionTest, org.apache.commons.math3.distribution.EnumeratedRealDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LevyDistributionTest, org.apache.commons.math3.distribution.LevyDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RRQRDecompositionTest, org.apache.commons.math3.linear.RRQRDecompositionTest, org.apache.commons.math3.linear.RRQRSolverTest, org.apache.commons.math3.linear.RRQRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventFilterTest, org.apache.commons.math3.ode.events.EventFilterTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.primes.PrimesTest, org.apache.commons.math3.primes.PrimesTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataGeneratorTest, org.apache.commons.math3.random.RandomDataGeneratorTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest]
00:27:28.079 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@66d33a', projectTests=[org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math3.distribution.EnumeratedRealDistributionTest, org.apache.commons.math3.distribution.EnumeratedRealDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LevyDistributionTest, org.apache.commons.math3.distribution.LevyDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RRQRDecompositionTest, org.apache.commons.math3.linear.RRQRDecompositionTest, org.apache.commons.math3.linear.RRQRSolverTest, org.apache.commons.math3.linear.RRQRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventFilterTest, org.apache.commons.math3.ode.events.EventFilterTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.primes.PrimesTest, org.apache.commons.math3.primes.PrimesTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataGeneratorTest, org.apache.commons.math3.random.RandomDataGeneratorTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest], complianceLevel=5, outputFolder=., json=true}
00:27:28.081 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 8
00:27:28.091 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 210 MB
00:27:28.091 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
00:27:28.091 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 241 MB
00:27:28.091 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
00:27:28.093 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
00:27:28.093 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
00:44:56.168 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
00:44:56.169 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:1228 which is executed by 1 tests
-1679819631
00:44:56.844 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
00:44:56.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:305 which is executed by 1 tests
-1679819631
00:44:57.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:44:57.292 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (73 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:00.249 [pool-5-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:00.254 [pool-6-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:00.255 [pool-3-thread-1] DEBUG tests.output - Failing tests with false: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:00.255 [pool-3-thread-1] DEBUG tests.output - Failing tests with true: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:00.256 [pool-3-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.complex.Complex:305.
00:45:00.256 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
00:45:00.256 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:304 which is executed by 5 tests
-1679819631
00:45:00.590 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:00.657 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (54 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:01.360 [pool-9-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:01.365 [pool-10-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:01.365 [pool-7-thread-1] DEBUG tests.output - Failing tests with false: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:01.365 [pool-7-thread-1] DEBUG tests.output - Failing tests with true: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:01.366 [pool-7-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.complex.Complex:304.
00:45:01.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:01.435 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (56 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:02.106 [pool-13-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:02.113 [pool-14-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:02.114 [pool-11-thread-1] DEBUG tests.output - Failing tests with false: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:02.114 [pool-11-thread-1] DEBUG tests.output - Failing tests with true: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:02.114 [pool-11-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.complex.Complex:304.
00:45:02.115 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
00:45:02.115 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:300 which is executed by 6 tests
-1679819631
00:45:02.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:02.490 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (50 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:03.123 [pool-17-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:03.127 [pool-18-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:03.128 [pool-15-thread-1] DEBUG tests.output - Failing tests with false: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:03.128 [pool-15-thread-1] DEBUG tests.output - Failing tests with true: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:03.128 [pool-15-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.complex.Complex:300.
00:45:03.129 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:03.194 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (53 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:03.841 [pool-21-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:03.844 [pool-22-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:03.845 [pool-19-thread-1] DEBUG tests.output - Failing tests with false: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:03.845 [pool-19-thread-1] DEBUG tests.output - Failing tests with true: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:03.845 [pool-19-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.complex.Complex:300.
00:45:03.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
00:45:03.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:348 which is executed by 42 tests
-1679819631
00:45:04.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:04.295 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (123 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:04.855 [pool-25-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:04.860 [pool-26-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:04.861 [pool-23-thread-1] DEBUG tests.output - Failing tests with false: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:04.861 [pool-23-thread-1] DEBUG tests.output - Failing tests with true: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:04.861 [pool-23-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.complex.Complex:348.
00:45:04.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
00:45:04.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:345 which is executed by 45 tests
-1679819631
00:45:05.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:05.237 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (52 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:05.782 [pool-29-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:05.785 [pool-30-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:05.785 [pool-27-thread-1] DEBUG tests.output - Failing tests with false: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:05.786 [pool-27-thread-1] DEBUG tests.output - Failing tests with true: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:05.786 [pool-27-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.complex.Complex:345.
00:45:05.786 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:05.842 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (46 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.379 [pool-33-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:06.389 [pool-34-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.404 [pool-35-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.417 [pool-36-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.419 [pool-37-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.427 [pool-38-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.428 [pool-39-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.430 [pool-40-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.431 [pool-41-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.432 [pool-42-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.433 [pool-43-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.435 [pool-44-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.436 [pool-45-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.437 [pool-46-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(NaN, NaN)> but was: org.apache.commons.math3.complex.Complex<(NaN, NaN)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNan(ComplexFormatAbstractTest.java:255)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.439 [pool-47-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseNan(org.apache.commons.math3.complex.FrenchComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(NaN, NaN)> but was: org.apache.commons.math3.complex.Complex<(NaN, NaN)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(NaN, NaN)> but was: org.apache.commons.math3.complex.Complex<(NaN, NaN)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNan(ComplexFormatAbstractTest.java:255)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:06.440 [pool-48-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.441 [pool-49-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.443 [pool-50-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.445 [pool-51-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:06.446 [pool-52-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.448 [pool-53-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.461 [pool-54-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(NaN, 0.0)> but was: org.apache.commons.math3.complex.Complex<(NaN, 0.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarAddInf(ComplexTest.java:157)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.464 [pool-55-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testScalarAddInf(org.apache.commons.math3.complex.ComplexTest)
[expected: org.apache.commons.math3.complex.Complex<(NaN, 0.0)> but was: org.apache.commons.math3.complex.Complex<(NaN, 0.0)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(NaN, 0.0)> but was: org.apache.commons.math3.complex.Complex<(NaN, 0.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarAddInf(ComplexTest.java:157)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:06.465 [pool-56-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.467 [pool-57-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.468 [pool-58-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.470 [pool-59-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.471 [pool-60-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.473 [pool-61-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.474 [pool-62-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.476 [pool-63-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.478 [pool-64-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.complex.ComplexTest.testEqualsNaN(ComplexTest.java:538)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:45:06.480 [pool-65-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testEqualsNaN(org.apache.commons.math3.complex.ComplexTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.complex.ComplexTest.testEqualsNaN(ComplexTest.java:538)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<(NaN, 0.0)> but was:<(1.0, NaN)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testSerial(ComplexTest.java:1291)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.485 [pool-66-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSerial(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, 0.0)> but was:<(1.0, NaN)>]
java.lang.AssertionError: expected:<(NaN, 0.0)> but was:<(1.0, NaN)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testSerial(ComplexTest.java:1291)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:06.487 [pool-67-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.489 [pool-68-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.490 [pool-69-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.491 [pool-70-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.492 [pool-71-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.493 [pool-72-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.494 [pool-73-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.495 [pool-74-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.496 [pool-75-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.497 [pool-76-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(NaN, NaN)> but was: org.apache.commons.math3.complex.Complex<(NaN, NaN)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNan(ComplexFormatAbstractTest.java:255)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.498 [pool-77-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseNan(org.apache.commons.math3.complex.ComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(NaN, NaN)> but was: org.apache.commons.math3.complex.Complex<(NaN, NaN)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(NaN, NaN)> but was: org.apache.commons.math3.complex.Complex<(NaN, NaN)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNan(ComplexFormatAbstractTest.java:255)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:06.499 [pool-78-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.500 [pool-79-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.501 [pool-80-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.502 [pool-81-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.503 [pool-82-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.2323, -1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(1.2323, -1.434343434343)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(ComplexFormatAbstractTest.java:215)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.505 [pool-83-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseNegativeImaginary(org.apache.commons.math3.complex.FrenchComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(1.2323, -1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(1.2323, -1.434343434343)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.2323, -1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(1.2323, -1.434343434343)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(ComplexFormatAbstractTest.java:215)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.23, 1.43)> but was: org.apache.commons.math3.complex.Complex<(1.23, 1.43)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(ComplexFormatAbstractTest.java:191)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.506 [pool-84-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseSimpleWithDecimals(org.apache.commons.math3.complex.FrenchComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(1.23, 1.43)> but was: org.apache.commons.math3.complex.Complex<(1.23, 1.43)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.23, 1.43)> but was: org.apache.commons.math3.complex.Complex<(1.23, 1.43)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(ComplexFormatAbstractTest.java:191)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.232323232323, -1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(-1.232323232323, -1.434343434343)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNegativeBoth(ComplexFormatAbstractTest.java:223)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.508 [pool-85-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseNegativeBoth(org.apache.commons.math3.complex.FrenchComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(-1.232323232323, -1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(-1.232323232323, -1.434343434343)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.232323232323, -1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(-1.232323232323, -1.434343434343)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNegativeBoth(ComplexFormatAbstractTest.java:223)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.232323232323, 1.4343)> but was: org.apache.commons.math3.complex.Complex<(-1.232323232323, 1.4343)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNegativeReal(ComplexFormatAbstractTest.java:207)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.510 [pool-86-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseNegativeReal(org.apache.commons.math3.complex.FrenchComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(-1.232323232323, 1.4343)> but was: org.apache.commons.math3.complex.Complex<(-1.232323232323, 1.4343)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.232323232323, 1.4343)> but was: org.apache.commons.math3.complex.Complex<(-1.232323232323, 1.4343)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNegativeReal(ComplexFormatAbstractTest.java:207)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.232323232323, 1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(1.232323232323, 1.434343434343)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(ComplexFormatAbstractTest.java:199)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.511 [pool-87-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseSimpleWithDecimalsTrunc(org.apache.commons.math3.complex.FrenchComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(1.232323232323, 1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(1.232323232323, 1.434343434343)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.232323232323, 1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(1.232323232323, 1.434343434343)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(ComplexFormatAbstractTest.java:199)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-Infinity, -Infinity)> but was: org.apache.commons.math3.complex.Complex<(-Infinity, -Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(ComplexFormatAbstractTest.java:271)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.512 [pool-88-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPaseNegativeInfinity(org.apache.commons.math3.complex.FrenchComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(-Infinity, -Infinity)> but was: org.apache.commons.math3.complex.Complex<(-Infinity, -Infinity)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-Infinity, -Infinity)> but was: org.apache.commons.math3.complex.Complex<(-Infinity, -Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(ComplexFormatAbstractTest.java:271)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.2323, -1.4343)> but was: org.apache.commons.math3.complex.Complex<(-1.2323, -1.4343)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(ComplexFormatAbstractTest.java:247)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.514 [pool-89-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseDifferentImaginaryChar(org.apache.commons.math3.complex.FrenchComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(-1.2323, -1.4343)> but was: org.apache.commons.math3.complex.Complex<(-1.2323, -1.4343)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.2323, -1.4343)> but was: org.apache.commons.math3.complex.Complex<(-1.2323, -1.4343)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(ComplexFormatAbstractTest.java:247)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.0, 1.0)> but was: org.apache.commons.math3.complex.Complex<(1.0, 1.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(ComplexFormatAbstractTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.515 [pool-90-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseSimpleNoDecimals(org.apache.commons.math3.complex.FrenchComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(1.0, 1.0)> but was: org.apache.commons.math3.complex.Complex<(1.0, 1.0)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.0, 1.0)> but was: org.apache.commons.math3.complex.Complex<(1.0, 1.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(ComplexFormatAbstractTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(0.0, -1.4343)> but was: org.apache.commons.math3.complex.Complex<(0.0, -1.4343)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseZeroReal(ComplexFormatAbstractTest.java:231)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.542 [pool-91-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseZeroReal(org.apache.commons.math3.complex.FrenchComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(0.0, -1.4343)> but was: org.apache.commons.math3.complex.Complex<(0.0, -1.4343)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(0.0, -1.4343)> but was: org.apache.commons.math3.complex.Complex<(0.0, -1.4343)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseZeroReal(ComplexFormatAbstractTest.java:231)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:06.544 [pool-92-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.2323, 0.0)> but was: org.apache.commons.math3.complex.Complex<(-1.2323, 0.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseZeroImaginary(ComplexFormatAbstractTest.java:239)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.546 [pool-93-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseZeroImaginary(org.apache.commons.math3.complex.FrenchComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(-1.2323, 0.0)> but was: org.apache.commons.math3.complex.Complex<(-1.2323, 0.0)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.2323, 0.0)> but was: org.apache.commons.math3.complex.Complex<(-1.2323, 0.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseZeroImaginary(ComplexFormatAbstractTest.java:239)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(Infinity, Infinity)> but was: org.apache.commons.math3.complex.Complex<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(ComplexFormatAbstractTest.java:263)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.550 [pool-94-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParsePositiveInfinity(org.apache.commons.math3.complex.FrenchComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(Infinity, Infinity)> but was: org.apache.commons.math3.complex.Complex<(Infinity, Infinity)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(Infinity, Infinity)> but was: org.apache.commons.math3.complex.Complex<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(ComplexFormatAbstractTest.java:263)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(-0.5, 0.0)> but was:<(-0.5, -0.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalReal(ComplexTest.java:314)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.556 [pool-95-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalReal(org.apache.commons.math3.complex.ComplexTest)
[expected:<(-0.5, 0.0)> but was:<(-0.5, -0.0)>]
java.lang.AssertionError: expected:<(-0.5, 0.0)> but was:<(-0.5, -0.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalReal(ComplexTest.java:314)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:06.558 [pool-96-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.5, -1.0)> but was: org.apache.commons.math3.complex.Complex<(1.5, -1.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testDivideImaginary(ComplexTest.java:203)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.560 [pool-97-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideImaginary(org.apache.commons.math3.complex.ComplexTest)
[expected: org.apache.commons.math3.complex.Complex<(1.5, -1.0)> but was: org.apache.commons.math3.complex.Complex<(1.5, -1.0)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.5, -1.0)> but was: org.apache.commons.math3.complex.Complex<(1.5, -1.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testDivideImaginary(ComplexTest.java:203)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(5.0, 4.0)> but was: org.apache.commons.math3.complex.Complex<(5.0, 4.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarAdd(ComplexTest.java:137)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.563 [pool-98-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testScalarAdd(org.apache.commons.math3.complex.ComplexTest)
[expected: org.apache.commons.math3.complex.Complex<(5.0, 4.0)> but was: org.apache.commons.math3.complex.Complex<(5.0, 4.0)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(5.0, 4.0)> but was: org.apache.commons.math3.complex.Complex<(5.0, 4.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarAdd(ComplexTest.java:137)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-237.00000000000168, -3115.999999999999)> but was: org.apache.commons.math3.complex.Complex<(-237.00000000000168, -3115.999999999999)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarPow(ComplexTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.565 [pool-99-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testScalarPow(org.apache.commons.math3.complex.ComplexTest)
[expected: org.apache.commons.math3.complex.Complex<(-237.00000000000168, -3115.999999999999)> but was: org.apache.commons.math3.complex.Complex<(-237.00000000000168, -3115.999999999999)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-237.00000000000168, -3115.999999999999)> but was: org.apache.commons.math3.complex.Complex<(-237.00000000000168, -3115.999999999999)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarPow(ComplexTest.java:816)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(Infinity, 1.0)> but was: org.apache.commons.math3.complex.Complex<(Infinity, 1.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarAddInf(ComplexTest.java:154)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.567 [pool-100-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testScalarAddInf(org.apache.commons.math3.complex.ComplexTest)
[expected: org.apache.commons.math3.complex.Complex<(Infinity, 1.0)> but was: org.apache.commons.math3.complex.Complex<(Infinity, 1.0)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(Infinity, 1.0)> but was: org.apache.commons.math3.complex.Complex<(Infinity, 1.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarAddInf(ComplexTest.java:154)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.5, 2.0)> but was: org.apache.commons.math3.complex.Complex<(1.5, 2.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarDivide(ComplexTest.java:269)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.569 [pool-101-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testScalarDivide(org.apache.commons.math3.complex.ComplexTest)
[expected: org.apache.commons.math3.complex.Complex<(1.5, 2.0)> but was: org.apache.commons.math3.complex.Complex<(1.5, 2.0)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.5, 2.0)> but was: org.apache.commons.math3.complex.Complex<(1.5, 2.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarDivide(ComplexTest.java:269)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:06.571 [pool-102-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(6.0, 8.0)> but was: org.apache.commons.math3.complex.Complex<(6.0, 8.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarMultiply(ComplexTest.java:395)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.573 [pool-103-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testScalarMultiply(org.apache.commons.math3.complex.ComplexTest)
[expected: org.apache.commons.math3.complex.Complex<(6.0, 8.0)> but was: org.apache.commons.math3.complex.Complex<(6.0, 8.0)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(6.0, 8.0)> but was: org.apache.commons.math3.complex.Complex<(6.0, 8.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarMultiply(ComplexTest.java:395)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.complex.ComplexTest.testEqualsTrue(ComplexTest.java:516)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:45:06.575 [pool-104-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testEqualsTrue(org.apache.commons.math3.complex.ComplexTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.complex.ComplexTest.testEqualsTrue(ComplexTest.java:516)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:45:06.576 [pool-105-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-Infinity, 1.0)> but was: org.apache.commons.math3.complex.Complex<(-Infinity, 1.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarSubtractInf(ComplexTest.java:487)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.578 [pool-106-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testScalarSubtractInf(org.apache.commons.math3.complex.ComplexTest)
[expected: org.apache.commons.math3.complex.Complex<(-Infinity, 1.0)> but was: org.apache.commons.math3.complex.Complex<(-Infinity, 1.0)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-Infinity, 1.0)> but was: org.apache.commons.math3.complex.Complex<(-Infinity, 1.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarSubtractInf(ComplexTest.java:487)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(0.0, -1.0)> but was:<(-0.0, -1.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testMath221(ComplexTest.java:1070)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.581 [pool-107-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath221(org.apache.commons.math3.complex.ComplexTest)
[expected:<(0.0, -1.0)> but was:<(-0.0, -1.0)>]
java.lang.AssertionError: expected:<(0.0, -1.0)> but was:<(-0.0, -1.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testMath221(ComplexTest.java:1070)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.0, 4.0)> but was: org.apache.commons.math3.complex.Complex<(1.0, 4.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarSubtract(ComplexTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.585 [pool-108-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testScalarSubtract(org.apache.commons.math3.complex.ComplexTest)
[expected: org.apache.commons.math3.complex.Complex<(1.0, 4.0)> but was: org.apache.commons.math3.complex.Complex<(1.0, 4.0)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.0, 4.0)> but was: org.apache.commons.math3.complex.Complex<(1.0, 4.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testScalarSubtract(ComplexTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.0, 1.5)> but was: org.apache.commons.math3.complex.Complex<(1.0, 1.5)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testDivideReal(ComplexTest.java:195)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.588 [pool-109-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideReal(org.apache.commons.math3.complex.ComplexTest)
[expected: org.apache.commons.math3.complex.Complex<(1.0, 1.5)> but was: org.apache.commons.math3.complex.Complex<(1.0, 1.5)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.0, 1.5)> but was: org.apache.commons.math3.complex.Complex<(1.0, 1.5)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testDivideReal(ComplexTest.java:195)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:06.589 [pool-110-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(3.0, 4.0)> but was: org.apache.commons.math3.complex.Complex<(3.0, 4.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testSerial(ComplexTest.java:1289)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.591 [pool-111-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSerial(org.apache.commons.math3.complex.ComplexTest)
[expected: org.apache.commons.math3.complex.Complex<(3.0, 4.0)> but was: org.apache.commons.math3.complex.Complex<(3.0, 4.0)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(3.0, 4.0)> but was: org.apache.commons.math3.complex.Complex<(3.0, 4.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testSerial(ComplexTest.java:1289)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(0.0, 0.5)> but was: org.apache.commons.math3.complex.Complex<(0.0, 0.5)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalImaginary(ComplexTest.java:320)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.594 [pool-112-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalImaginary(org.apache.commons.math3.complex.ComplexTest)
[expected: org.apache.commons.math3.complex.Complex<(0.0, 0.5)> but was: org.apache.commons.math3.complex.Complex<(0.0, 0.5)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(0.0, 0.5)> but was: org.apache.commons.math3.complex.Complex<(0.0, 0.5)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalImaginary(ComplexTest.java:320)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.2323, -1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(1.2323, -1.434343434343)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(ComplexFormatAbstractTest.java:215)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.595 [pool-113-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseNegativeImaginary(org.apache.commons.math3.complex.ComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(1.2323, -1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(1.2323, -1.434343434343)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.2323, -1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(1.2323, -1.434343434343)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(ComplexFormatAbstractTest.java:215)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.23, 1.43)> but was: org.apache.commons.math3.complex.Complex<(1.23, 1.43)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(ComplexFormatAbstractTest.java:191)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.597 [pool-114-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseSimpleWithDecimals(org.apache.commons.math3.complex.ComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(1.23, 1.43)> but was: org.apache.commons.math3.complex.Complex<(1.23, 1.43)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.23, 1.43)> but was: org.apache.commons.math3.complex.Complex<(1.23, 1.43)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(ComplexFormatAbstractTest.java:191)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.232323232323, -1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(-1.232323232323, -1.434343434343)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNegativeBoth(ComplexFormatAbstractTest.java:223)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.598 [pool-115-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseNegativeBoth(org.apache.commons.math3.complex.ComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(-1.232323232323, -1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(-1.232323232323, -1.434343434343)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.232323232323, -1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(-1.232323232323, -1.434343434343)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNegativeBoth(ComplexFormatAbstractTest.java:223)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.232323232323, 1.4343)> but was: org.apache.commons.math3.complex.Complex<(-1.232323232323, 1.4343)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNegativeReal(ComplexFormatAbstractTest.java:207)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.600 [pool-116-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseNegativeReal(org.apache.commons.math3.complex.ComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(-1.232323232323, 1.4343)> but was: org.apache.commons.math3.complex.Complex<(-1.232323232323, 1.4343)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.232323232323, 1.4343)> but was: org.apache.commons.math3.complex.Complex<(-1.232323232323, 1.4343)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseNegativeReal(ComplexFormatAbstractTest.java:207)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.232323232323, 1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(1.232323232323, 1.434343434343)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(ComplexFormatAbstractTest.java:199)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.602 [pool-117-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseSimpleWithDecimalsTrunc(org.apache.commons.math3.complex.ComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(1.232323232323, 1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(1.232323232323, 1.434343434343)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.232323232323, 1.434343434343)> but was: org.apache.commons.math3.complex.Complex<(1.232323232323, 1.434343434343)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(ComplexFormatAbstractTest.java:199)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-Infinity, -Infinity)> but was: org.apache.commons.math3.complex.Complex<(-Infinity, -Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(ComplexFormatAbstractTest.java:271)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.603 [pool-118-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPaseNegativeInfinity(org.apache.commons.math3.complex.ComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(-Infinity, -Infinity)> but was: org.apache.commons.math3.complex.Complex<(-Infinity, -Infinity)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-Infinity, -Infinity)> but was: org.apache.commons.math3.complex.Complex<(-Infinity, -Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(ComplexFormatAbstractTest.java:271)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.2323, -1.4343)> but was: org.apache.commons.math3.complex.Complex<(-1.2323, -1.4343)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(ComplexFormatAbstractTest.java:247)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.604 [pool-119-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseDifferentImaginaryChar(org.apache.commons.math3.complex.ComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(-1.2323, -1.4343)> but was: org.apache.commons.math3.complex.Complex<(-1.2323, -1.4343)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.2323, -1.4343)> but was: org.apache.commons.math3.complex.Complex<(-1.2323, -1.4343)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(ComplexFormatAbstractTest.java:247)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.0, 1.0)> but was: org.apache.commons.math3.complex.Complex<(1.0, 1.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(ComplexFormatAbstractTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.606 [pool-120-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseSimpleNoDecimals(org.apache.commons.math3.complex.ComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(1.0, 1.0)> but was: org.apache.commons.math3.complex.Complex<(1.0, 1.0)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(1.0, 1.0)> but was: org.apache.commons.math3.complex.Complex<(1.0, 1.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(ComplexFormatAbstractTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(0.0, -1.4343)> but was: org.apache.commons.math3.complex.Complex<(0.0, -1.4343)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseZeroReal(ComplexFormatAbstractTest.java:231)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.607 [pool-121-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseZeroReal(org.apache.commons.math3.complex.ComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(0.0, -1.4343)> but was: org.apache.commons.math3.complex.Complex<(0.0, -1.4343)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(0.0, -1.4343)> but was: org.apache.commons.math3.complex.Complex<(0.0, -1.4343)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseZeroReal(ComplexFormatAbstractTest.java:231)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:06.608 [pool-122-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.2323, 0.0)> but was: org.apache.commons.math3.complex.Complex<(-1.2323, 0.0)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseZeroImaginary(ComplexFormatAbstractTest.java:239)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.609 [pool-123-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParseZeroImaginary(org.apache.commons.math3.complex.ComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(-1.2323, 0.0)> but was: org.apache.commons.math3.complex.Complex<(-1.2323, 0.0)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(-1.2323, 0.0)> but was: org.apache.commons.math3.complex.Complex<(-1.2323, 0.0)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParseZeroImaginary(ComplexFormatAbstractTest.java:239)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(Infinity, Infinity)> but was: org.apache.commons.math3.complex.Complex<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(ComplexFormatAbstractTest.java:263)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:06.611 [pool-124-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testParsePositiveInfinity(org.apache.commons.math3.complex.ComplexFormatTest)
[expected: org.apache.commons.math3.complex.Complex<(Infinity, Infinity)> but was: org.apache.commons.math3.complex.Complex<(Infinity, Infinity)>]
java.lang.AssertionError: expected: org.apache.commons.math3.complex.Complex<(Infinity, Infinity)> but was: org.apache.commons.math3.complex.Complex<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(ComplexFormatAbstractTest.java:263)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:06.615 [pool-125-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.616 [pool-126-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.617 [pool-127-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.618 [pool-128-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.619 [pool-129-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.621 [pool-130-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.622 [pool-131-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.623 [pool-132-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.624 [pool-133-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.625 [pool-134-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.626 [pool-135-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.628 [pool-136-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.629 [pool-137-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.631 [pool-138-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.633 [pool-139-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.635 [pool-140-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.637 [pool-141-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.639 [pool-142-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.641 [pool-143-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.643 [pool-144-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.645 [pool-145-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.647 [pool-146-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.649 [pool-147-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.650 [pool-148-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.652 [pool-149-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.660 [pool-150-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.663 [pool-151-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.679 [pool-152-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.680 [pool-153-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.682 [pool-154-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.683 [pool-155-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.684 [pool-156-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.687 [pool-157-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.688 [pool-158-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.690 [pool-159-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.692 [pool-160-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.693 [pool-161-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.695 [pool-162-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:06.697 [pool-163-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:07.198 [pool-31-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
00:45:07.386 [pool-31-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
00:45:07.468 [pool-31-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
00:45:07.543 [pool-31-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
00:45:07.624 [pool-31-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
00:45:07.705 [pool-31-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Failed code synthesis, returning NullCodeGenesis
00:45:07.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
00:45:07.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:344 which is executed by 45 tests
-1679819631
00:45:08.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
00:45:08.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:343 which is executed by 47 tests
-1679819631
00:45:08.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:08.397 [pool-165-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (49 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:08.906 [pool-166-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:08.908 [pool-167-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:08.908 [pool-164-thread-1] DEBUG tests.output - Failing tests with false: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:08.909 [pool-164-thread-1] DEBUG tests.output - Failing tests with true: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:08.909 [pool-164-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.complex.Complex:343.
00:45:08.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:08.964 [pool-169-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (46 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:09.590 [pool-170-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:09.592 [pool-171-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:09.593 [pool-168-thread-1] DEBUG tests.output - Failing tests with false: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:09.593 [pool-168-thread-1] DEBUG tests.output - Failing tests with true: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:09.593 [pool-168-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.complex.Complex:343.
00:45:09.593 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
00:45:09.594 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:340 which is executed by 63 tests
-1679819631
00:45:09.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:10.064 [pool-173-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (88 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:10.568 [pool-174-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:10.573 [pool-175-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:10.578 [pool-172-thread-1] DEBUG tests.output - Failing tests with false: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:10.578 [pool-172-thread-1] DEBUG tests.output - Failing tests with true: 
[testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
00:45:10.578 [pool-172-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.complex.Complex:340.
00:45:10.578 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:10.633 [pool-177-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (45 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:11.123 [pool-178-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:11.125 [pool-179-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.128 [pool-180-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.129 [pool-181-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.141 [pool-182-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.146 [pool-183-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.147 [pool-184-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.153 [pool-185-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.154 [pool-186-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.155 [pool-187-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.156 [pool-188-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.157 [pool-189-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.158 [pool-190-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.159 [pool-191-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.160 [pool-192-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.161 [pool-193-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.162 [pool-194-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.163 [pool-195-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.163 [pool-196-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.165 [pool-197-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:45:11.166 [pool-198-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:45:11.168 [pool-199-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.170 [pool-200-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.171 [pool-201-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.172 [pool-202-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.173 [pool-203-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.175 [pool-204-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.176 [pool-205-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.189 [pool-206-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.191 [pool-207-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.192 [pool-208-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.193 [pool-209-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.195 [pool-210-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.196 [pool-211-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.198 [pool-212-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.199 [pool-213-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.200 [pool-214-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.201 [pool-215-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.203 [pool-216-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.204 [pool-217-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.205 [pool-218-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.206 [pool-219-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.207 [pool-220-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.208 [pool-221-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.209 [pool-222-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.211 [pool-223-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.212 [pool-224-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.213 [pool-225-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.215 [pool-226-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.222 [pool-227-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.224 [pool-228-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.226 [pool-229-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.227 [pool-230-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.229 [pool-231-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.229 [pool-232-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.230 [pool-233-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.231 [pool-234-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.232 [pool-235-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.233 [pool-236-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.234 [pool-237-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.235 [pool-238-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.236 [pool-239-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.237 [pool-240-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.238 [pool-241-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.238 [pool-242-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.239 [pool-243-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:45:11.240 [pool-244-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.exception.TooManyEvaluationsException: illegal state: maximal count (100) exceeded: evaluations
    at org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.incrementEvaluationCount(BaseAbstractUnivariateSolver.java:312)
    at org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.solve(LaguerreSolver.java:387)
    at org.apache.commons.math3.analysis.solvers.LaguerreSolver.laguerre(LaguerreSolver.java:160)
    at org.apache.commons.math3.analysis.solvers.LaguerreSolver.doSolve(LaguerreSolver.java:117)
    at org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(BaseAbstractUnivariateSolver.java:196)
    at org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(BaseAbstractUnivariateSolver.java:201)
00:45:11.258 [pool-245-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testQuadraticFunction(org.apache.commons.math3.analysis.solvers.LaguerreSolverTest)
[illegal state: maximal count (100) exceeded: evaluations]
org.apache.commons.math3.exception.TooManyEvaluationsException: illegal state: maximal count (100) exceeded: evaluations    at org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.incrementEvaluationCount(BaseAbstractUnivariateSolver.java:312)
    at org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.solve(LaguerreSolver.java:387)
    at org.apache.commons.math3.analysis.solvers.LaguerreSolver.laguerre(LaguerreSolver.java:160)
    at org.apache.commons.math3.analysis.solvers.LaguerreSolver.doSolve(LaguerreSolver.java:117)
    at org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(BaseAbstractUnivariateSolver.java:196)
    at org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(BaseAbstractUnivariateSolver.java:201)

00:48:31.259 [pool-176-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
00:48:31.260 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
00:48:31.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
00:48:31.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:217 which is executed by 111 tests
1648821820
00:48:31.580 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
00:48:31.580 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:216 which is executed by 111 tests
1648821820
00:48:31.884 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:48:52.151 [pool-248-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20254 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.NullPointerException
    at org.apache.commons.math3.complex.Complex.equals(Complex.java:144)
    at org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.solve(LaguerreSolver.java:379)
    at org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.solveAll(LaguerreSolver.java:294)
    at org.apache.commons.math3.analysis.solvers.LaguerreSolver.solveAllComplex(LaguerreSolver.java:203)
    at org.apache.commons.math3.analysis.solvers.LaguerreSolverTest.testQuinticFunction2(LaguerreSolverTest.java:123)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:48:52.153 [pool-246-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (220894 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testQuinticFunction2(org.apache.commons.math3.analysis.solvers.LaguerreSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.complex.Complex.equals(Complex.java:144)
    at org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.solve(LaguerreSolver.java:379)
    at org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.solveAll(LaguerreSolver.java:294)
    at org.apache.commons.math3.analysis.solvers.LaguerreSolver.solveAllComplex(LaguerreSolver.java:203)
    at org.apache.commons.math3.analysis.solvers.LaguerreSolverTest.testQuinticFunction2(LaguerreSolverTest.java:123)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:48:52.789 [pool-249-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (271 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:48:52.792 [pool-250-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:48:52.793 [pool-247-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:48:52.793 [pool-247-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:48:52.793 [pool-247-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:216.
00:48:52.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
00:48:52.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:207 which is executed by 112 tests
1648821820
00:48:53.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
00:48:53.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:205 which is executed by 112 tests
1648821820
00:48:53.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:49:09.714 [pool-252-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16335 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:49:10.314 [pool-253-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (244 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:49:10.317 [pool-254-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:49:10.318 [pool-251-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:49:10.318 [pool-251-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:49:10.318 [pool-251-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:205.
00:49:10.318 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
00:49:10.318 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:203 which is executed by 112 tests
1648821820
00:49:10.607 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:49:26.866 [pool-256-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16250 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:49:27.462 [pool-257-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (250 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:49:27.465 [pool-258-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:49:27.466 [pool-255-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:49:27.466 [pool-255-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:49:27.466 [pool-255-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:203.
00:49:27.466 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
00:49:27.466 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:199 which is executed by 112 tests
1648821820
00:49:27.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:49:44.175 [pool-260-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16411 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 624
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:71)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:111)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:49:44.762 [pool-261-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (237 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[624]
java.lang.ArrayIndexOutOfBoundsException: 624    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:71)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:111)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:49:44.766 [pool-262-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:49:44.766 [pool-259-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 624]
00:49:44.767 [pool-259-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:49:44.767 [pool-259-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:199.
00:49:44.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
00:49:44.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:198 which is executed by 112 tests
1648821820
00:49:45.055 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:50:01.378 [pool-264-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16315 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:50:01.977 [pool-265-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (254 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:50:01.980 [pool-266-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:50:01.980 [pool-263-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:50:01.980 [pool-263-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:50:01.981 [pool-263-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:198.
00:50:01.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
00:50:01.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:197 which is executed by 112 tests
1648821820
00:50:02.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:50:18.511 [pool-268-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16233 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 624
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:71)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:50:19.132 [pool-269-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (256 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[624]
java.lang.ArrayIndexOutOfBoundsException: 624    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:71)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:50:19.146 [pool-270-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:50:19.147 [pool-267-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 624]
00:50:19.147 [pool-267-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:50:19.147 [pool-267-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:197.
00:50:19.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:50:35.503 [pool-272-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16347 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 624
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:71)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:50:36.090 [pool-273-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (240 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[624]
java.lang.ArrayIndexOutOfBoundsException: 624    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:71)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:50:36.101 [pool-274-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:50:36.101 [pool-271-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 624]
00:50:36.101 [pool-271-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:50:36.101 [pool-271-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:197.
00:50:36.102 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
00:50:36.102 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:196 which is executed by 112 tests
1648821820
00:50:36.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:50:52.877 [pool-276-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16477 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:50:53.495 [pool-277-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (272 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:50:53.506 [pool-278-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:50:53.509 [pool-275-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:50:53.509 [pool-275-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:50:53.509 [pool-275-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:196.
00:50:53.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
00:50:53.510 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:195 which is executed by 112 tests
1648821820
00:50:53.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:51:10.127 [pool-280-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16309 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:51:10.711 [pool-281-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (240 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:51:10.720 [pool-282-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:51:10.721 [pool-279-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:51:10.721 [pool-279-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:51:10.721 [pool-279-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:195.
00:51:10.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
00:51:10.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:194 which is executed by 112 tests
1648821820
00:51:11.010 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
00:51:11.011 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:193 which is executed by 112 tests
1648821820
00:51:11.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
00:51:11.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:192 which is executed by 112 tests
1648821820
00:51:11.589 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
00:51:11.589 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:191 which is executed by 112 tests
1648821820
00:51:11.878 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:51:28.102 [pool-284-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16216 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:51:28.678 [pool-285-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (232 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:51:28.681 [pool-286-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:51:28.682 [pool-283-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:51:28.682 [pool-283-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:51:28.682 [pool-283-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:191.
00:51:28.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
00:51:28.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:187 which is executed by 112 tests
1648821820
00:51:28.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:51:45.357 [pool-288-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16378 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 2
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:58)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:111)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:51:45.926 [pool-289-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (229 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[2]
java.lang.ArrayIndexOutOfBoundsException: 2    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:58)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:111)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:51:45.933 [pool-290-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:51:45.934 [pool-287-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 2]
00:51:45.934 [pool-287-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:51:45.934 [pool-287-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:187.
00:51:45.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
00:51:45.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:186 which is executed by 112 tests
1648821820
00:51:46.221 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:52:02.584 [pool-292-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16355 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 2
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:58)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:52:03.170 [pool-293-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (242 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[2]
java.lang.ArrayIndexOutOfBoundsException: 2    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:58)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:52:03.180 [pool-294-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:52:03.180 [pool-291-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 2]
00:52:03.180 [pool-291-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:52:03.181 [pool-291-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:186.
00:52:03.181 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:52:19.468 [pool-296-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16279 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 2
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:58)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:52:20.043 [pool-297-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (234 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[2]
java.lang.ArrayIndexOutOfBoundsException: 2    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:58)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:52:20.054 [pool-298-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:52:20.055 [pool-295-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 2]
00:52:20.055 [pool-295-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:52:20.055 [pool-295-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:186.
00:52:20.055 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
00:52:20.055 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:184 which is executed by 112 tests
1648821820
00:52:20.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:52:36.777 [pool-300-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16425 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 624
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:111)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:52:37.375 [pool-301-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (254 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[624]
java.lang.ArrayIndexOutOfBoundsException: 624    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:111)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:52:37.378 [pool-302-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:52:37.379 [pool-299-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 624]
00:52:37.379 [pool-299-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:52:37.379 [pool-299-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:184.
00:52:37.379 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
00:52:37.379 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:183 which is executed by 112 tests
1648821820
00:52:37.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:52:54.033 [pool-304-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16355 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:52:54.611 [pool-305-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (236 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:52:54.614 [pool-306-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:52:54.614 [pool-303-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:52:54.614 [pool-303-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:52:54.614 [pool-303-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:183.
00:52:54.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
00:52:54.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:182 which is executed by 112 tests
1648821820
00:52:54.903 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:53:11.404 [pool-308-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16493 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 624
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:53:12.022 [pool-309-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (257 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[624]
java.lang.ArrayIndexOutOfBoundsException: 624    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:53:12.032 [pool-310-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:53:12.033 [pool-307-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 624]
00:53:12.033 [pool-307-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:53:12.033 [pool-307-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:182.
00:53:12.033 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:53:28.406 [pool-312-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16365 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 624
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:53:28.989 [pool-313-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (240 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[624]
java.lang.ArrayIndexOutOfBoundsException: 624    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:53:28.999 [pool-314-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:53:28.999 [pool-311-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 624]
00:53:28.999 [pool-311-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:53:28.999 [pool-311-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:182.
00:53:29.000 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
00:53:29.000 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:181 which is executed by 112 tests
1648821820
00:53:29.287 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:53:45.718 [pool-316-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16423 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:53:46.305 [pool-317-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (243 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:53:46.314 [pool-318-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:53:46.315 [pool-315-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:53:46.315 [pool-315-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:53:46.315 [pool-315-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:181.
00:53:46.315 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
00:53:46.315 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:180 which is executed by 112 tests
1648821820
00:53:46.603 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:54:02.971 [pool-320-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16360 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:54:03.562 [pool-321-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (246 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:54:03.570 [pool-322-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:54:03.571 [pool-319-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:54:03.571 [pool-319-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:54:03.571 [pool-319-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:180.
00:54:03.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
00:54:03.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:179 which is executed by 112 tests
1648821820
00:54:03.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
00:54:03.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:178 which is executed by 112 tests
1648821820
00:54:04.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
00:54:04.148 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:177 which is executed by 112 tests
1648821820
00:54:04.438 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
00:54:04.438 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:176 which is executed by 112 tests
1648821820
00:54:04.728 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:54:21.055 [pool-324-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16320 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:54:21.633 [pool-325-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (241 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:54:21.636 [pool-326-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:54:21.636 [pool-323-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:54:21.636 [pool-323-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:54:21.637 [pool-323-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:176.
00:54:21.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
00:54:21.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:174 which is executed by 112 tests
1648821820
00:54:21.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
00:54:21.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:173 which is executed by 112 tests
1648821820
00:54:22.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
00:54:22.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:172 which is executed by 112 tests
1648821820
00:54:22.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:54:38.932 [pool-328-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16421 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:54:39.504 [pool-329-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (237 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:54:39.507 [pool-330-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:54:39.508 [pool-327-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:54:39.508 [pool-327-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:54:39.508 [pool-327-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:172.
00:54:39.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
00:54:39.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:167 which is executed by 112 tests
1648821820
00:54:39.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:54:56.167 [pool-332-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16363 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:54:56.737 [pool-333-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (233 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:54:56.740 [pool-334-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:54:56.740 [pool-331-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:54:56.740 [pool-331-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:54:56.740 [pool-331-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:167.
00:54:56.740 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:55:13.038 [pool-336-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16291 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:55:13.607 [pool-337-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (229 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StackOverflowError
    at fr.inria.lille.commons.trace.collector.ValueCollector.collectFrom(ValueCollector.java:17)
    at fr.inria.lille.commons.trace.RuntimeValues.collectInput(RuntimeValues.java:89)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:106)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:68)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:106)
00:55:13.638 [pool-338-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (30 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[null]
java.lang.StackOverflowError    at fr.inria.lille.commons.trace.collector.ValueCollector.collectFrom(ValueCollector.java:17)
    at fr.inria.lille.commons.trace.RuntimeValues.collectInput(RuntimeValues.java:89)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:106)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:68)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:106)

00:55:13.639 [pool-335-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:55:13.639 [pool-335-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): null]
00:55:13.639 [pool-335-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:167.
00:55:13.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
00:55:13.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1490 which is executed by 156 tests
68623
00:55:14.015 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
00:55:14.015 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1487 which is executed by 156 tests
68623
00:55:14.383 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:55:30.736 [pool-340-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16345 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:55:31.961 [pool-341-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (529 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:55:31.966 [pool-342-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:55:31.967 [pool-339-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:55:31.967 [pool-339-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:55:31.967 [pool-339-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1487.
00:55:31.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
00:55:31.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1486 which is executed by 156 tests
68623
00:55:32.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:55:48.696 [pool-344-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16355 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:55:49.866 [pool-345-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (546 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:55:49.871 [pool-346-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:55:49.871 [pool-343-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:55:49.871 [pool-343-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:55:49.871 [pool-343-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1486.
00:55:49.872 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
00:55:49.872 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1484 which is executed by 156 tests
68623
00:55:50.232 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:56:06.572 [pool-348-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16332 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:56:07.796 [pool-349-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (616 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:56:07.801 [pool-350-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:56:07.801 [pool-347-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:56:07.802 [pool-347-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:56:07.802 [pool-347-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1484.
00:56:07.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:56:24.120 [pool-352-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16310 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:56:25.307 [pool-353-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (570 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:56:25.313 [pool-354-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:56:25.314 [pool-351-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:56:25.314 [pool-351-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:56:25.314 [pool-351-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1484.
00:56:25.314 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
00:56:25.314 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1478 which is executed by 156 tests
68623
00:56:25.674 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:56:42.126 [pool-356-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16444 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:56:43.309 [pool-357-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (583 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:56:43.315 [pool-358-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:56:43.316 [pool-355-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:56:43.316 [pool-355-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:56:43.316 [pool-355-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1478.
00:56:43.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:56:59.816 [pool-360-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16490 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:57:00.973 [pool-361-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (568 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:57:00.980 [pool-362-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:57:00.981 [pool-359-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:57:00.982 [pool-359-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:57:00.982 [pool-359-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1478.
00:57:00.982 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
00:57:00.982 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1472 which is executed by 156 tests
68623
00:57:01.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:57:17.902 [pool-364-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16550 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:57:19.077 [pool-365-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (582 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:57:19.083 [pool-366-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:57:19.084 [pool-363-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:57:19.084 [pool-363-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:57:19.084 [pool-363-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1472.
00:57:19.084 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:57:35.444 [pool-368-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15982 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:57:37.122 [pool-369-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1103 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:57:37.128 [pool-370-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:57:37.128 [pool-367-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:57:37.129 [pool-367-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:57:37.129 [pool-367-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1472.
00:57:37.129 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
00:57:37.129 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1465 which is executed by 156 tests
68623
00:57:37.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:57:53.521 [pool-372-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16026 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:57:54.553 [pool-373-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (429 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:57:54.557 [pool-374-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:57:54.558 [pool-371-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:57:54.558 [pool-371-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:57:54.558 [pool-371-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1465.
00:57:54.558 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:58:09.784 [pool-376-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15218 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:58:10.762 [pool-377-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (398 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:58:10.766 [pool-378-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:58:10.771 [pool-375-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:58:10.771 [pool-375-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:58:10.771 [pool-375-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1465.
00:58:10.771 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
00:58:10.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1462 which is executed by 156 tests
68623
00:58:11.127 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:58:26.209 [pool-380-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15075 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:58:39.688 [pool-381-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12909 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:58:39.722 [pool-382-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:58:39.722 [pool-379-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:58:39.722 [pool-379-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:58:39.722 [pool-379-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1462.
00:58:39.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
00:58:39.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1461 which is executed by 156 tests
68623
00:58:40.097 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:58:55.253 [pool-384-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15148 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:02:15.820 [pool-383-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
01:02:15.820 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
01:02:15.820 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
01:02:15.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1460 which is executed by 156 tests
68623
01:02:16.182 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
01:02:16.182 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1459 which is executed by 156 tests
68623
01:02:16.537 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:02:31.871 [pool-387-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15326 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:212)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
01:04:03.824 [pool-388-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (91391 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:212)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:04:04.196 [pool-389-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (370 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:04:04.196 [pool-386-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
01:04:04.196 [pool-386-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:04:04.197 [pool-386-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1459.
01:04:04.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
01:04:04.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1458 which is executed by 156 tests
68623
01:04:04.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
01:04:04.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1456 which is executed by 156 tests
68623
01:04:04.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:04:20.273 [pool-391-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15337 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:04:21.406 [pool-392-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (557 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:04:21.411 [pool-393-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:04:21.411 [pool-390-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:04:21.411 [pool-390-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:04:21.411 [pool-390-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1456.
01:04:21.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:04:36.858 [pool-395-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15439 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:04:37.988 [pool-396-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (570 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:04:37.994 [pool-397-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:04:37.995 [pool-394-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:04:37.995 [pool-394-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:04:37.995 [pool-394-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1456.
01:04:37.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
01:04:37.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1440 which is executed by 156 tests
68623
01:04:38.349 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:04:53.769 [pool-399-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15413 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:04:54.889 [pool-400-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (560 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:04:54.894 [pool-401-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:04:54.895 [pool-398-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:04:54.895 [pool-398-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:04:54.895 [pool-398-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1440.
01:04:54.895 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
01:04:54.895 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1439 which is executed by 156 tests
68623
01:04:55.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:05:10.573 [pool-403-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15311 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:05:11.746 [pool-404-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (620 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:05:11.751 [pool-405-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:05:11.752 [pool-402-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:05:11.752 [pool-402-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:05:11.752 [pool-402-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1439.
01:05:11.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
01:05:11.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1421 which is executed by 156 tests
68623
01:05:12.108 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:05:27.413 [pool-407-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15297 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:05:28.566 [pool-408-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (596 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:05:28.571 [pool-409-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:05:28.572 [pool-406-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:05:28.572 [pool-406-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:05:28.572 [pool-406-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1421.
01:05:28.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
01:05:28.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1420 which is executed by 156 tests
68623
01:05:28.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
01:05:28.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:644 which is executed by 156 tests
68623
01:05:29.274 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
01:05:29.275 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:601 which is executed by 156 tests
1857420685
01:05:29.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
01:05:29.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:578 which is executed by 156 tests
1857420685
01:05:29.875 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:05:45.046 [pool-411-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15163 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.NullPointerException
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:351)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
01:05:45.445 [pool-412-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:351)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:05:45.803 [pool-413-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (356 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:05:45.804 [pool-410-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): null]
01:05:45.804 [pool-410-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:05:45.804 [pool-410-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:578.
01:05:45.805 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:06:00.953 [pool-415-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15140 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.NullPointerException
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:351)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
01:06:01.333 [pool-416-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:351)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:06:01.619 [pool-417-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (285 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:06:01.619 [pool-414-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): null]
01:06:01.619 [pool-414-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:06:01.620 [pool-414-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:578.
01:06:01.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
01:06:01.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:570 which is executed by 156 tests
1857420685
01:06:01.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
01:06:01.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:568 which is executed by 156 tests
1857420685
01:06:02.212 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:06:17.484 [pool-419-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15263 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:06:18.117 [pool-420-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (231 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:06:18.120 [pool-421-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:06:18.121 [pool-418-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:06:18.121 [pool-418-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:06:18.121 [pool-418-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:568.
01:06:18.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
01:06:18.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:564 which is executed by 156 tests
1857420685
01:06:18.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:06:33.672 [pool-423-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15248 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:06:34.323 [pool-424-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (263 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:06:34.329 [pool-425-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:06:34.330 [pool-422-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:06:34.330 [pool-422-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:06:34.330 [pool-422-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:564.
01:06:34.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
01:06:34.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:563 which is executed by 156 tests
1857420685
01:06:34.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:06:49.920 [pool-427-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15271 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:06:50.592 [pool-428-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (283 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:06:50.645 [pool-429-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (51 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:06:50.645 [pool-426-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:06:50.645 [pool-426-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:06:50.646 [pool-426-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:563.
01:06:50.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:07:06.004 [pool-431-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15350 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:07:06.671 [pool-432-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (286 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:07:06.724 [pool-433-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (52 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:07:06.725 [pool-430-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:07:06.725 [pool-430-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:07:06.725 [pool-430-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:563.
01:07:06.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
01:07:06.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:562 which is executed by 156 tests
1857420685
01:07:07.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:07:22.417 [pool-435-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15390 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:07:23.089 [pool-436-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (281 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:07:23.135 [pool-437-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (44 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:07:23.135 [pool-434-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:07:23.135 [pool-434-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:07:23.135 [pool-434-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:562.
01:07:23.136 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
01:07:23.136 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:561 which is executed by 156 tests
1857420685
01:07:23.430 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:07:38.829 [pool-439-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15391 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:07:39.657 [pool-440-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (447 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:07:39.660 [pool-441-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:07:39.661 [pool-438-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:07:39.661 [pool-438-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:07:39.661 [pool-438-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:561.
01:07:39.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
01:07:39.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:559 which is executed by 156 tests
1857420685
01:07:39.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:07:55.253 [pool-443-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15286 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:07:55.877 [pool-444-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (251 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:07:55.880 [pool-445-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:07:55.881 [pool-442-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:07:55.881 [pool-442-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:07:55.881 [pool-442-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:559.
01:07:55.881 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
01:07:55.881 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:555 which is executed by 156 tests
1857420685
01:07:56.176 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:08:11.385 [pool-447-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15202 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
01:08:12.067 [pool-448-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (310 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:08:12.080 [pool-449-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:08:12.081 [pool-446-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
01:08:12.081 [pool-446-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:08:12.081 [pool-446-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:555.
01:08:12.081 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
01:08:12.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:554 which is executed by 156 tests
1857420685
01:08:12.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:08:27.611 [pool-451-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15228 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
01:08:28.231 [pool-452-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (242 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:08:28.244 [pool-453-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:08:28.245 [pool-450-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
01:08:28.245 [pool-450-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:08:28.245 [pool-450-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:554.
01:08:28.245 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:08:43.552 [pool-455-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15300 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
01:08:44.188 [pool-456-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (256 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:08:44.202 [pool-457-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:08:44.202 [pool-454-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
01:08:44.203 [pool-454-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:08:44.203 [pool-454-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:554.
01:08:44.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
01:08:44.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:551 which is executed by 156 tests
1857420685
01:08:44.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:08:59.782 [pool-459-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15273 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:09:00.390 [pool-460-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (237 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:09:00.393 [pool-461-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:09:00.394 [pool-458-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:09:00.394 [pool-458-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:09:00.394 [pool-458-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:551.
01:09:00.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
01:09:00.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:550 which is executed by 156 tests
1857420685
01:09:00.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:09:15.826 [pool-463-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15095 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
01:09:16.441 [pool-464-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (242 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:09:16.449 [pool-465-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:09:16.451 [pool-462-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
01:09:16.451 [pool-462-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:09:16.451 [pool-462-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:550.
01:09:16.451 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
01:09:16.451 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:549 which is executed by 156 tests
1857420685
01:09:16.746 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:09:31.889 [pool-467-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15135 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
01:09:32.517 [pool-468-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (229 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:09:32.530 [pool-469-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:09:32.531 [pool-466-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
01:09:32.531 [pool-466-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:09:32.531 [pool-466-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:549.
01:09:32.531 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:09:47.957 [pool-471-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15419 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
01:09:48.567 [pool-472-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (232 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
01:09:48.569 [pool-473-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

01:09:48.573 [pool-470-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
01:09:48.573 [pool-470-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
01:09:48.573 [pool-470-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:549.
01:09:48.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
01:09:48.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:546 which is executed by 156 tests
1857420685
01:09:48.877 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:10:04.040 [pool-475-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15156 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:10:04.652 [pool-476-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (244 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:10:04.655 [pool-477-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:10:04.655 [pool-474-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:10:04.655 [pool-474-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:10:04.656 [pool-474-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:546.
01:10:04.656 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
01:10:04.656 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:545 which is executed by 156 tests
1857420685
01:10:04.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:10:20.097 [pool-479-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15138 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:10:20.773 [pool-480-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (305 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:10:20.776 [pool-481-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:10:20.779 [pool-478-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:10:20.779 [pool-478-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:10:20.779 [pool-478-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:545.
01:10:20.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
01:10:20.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:544 which is executed by 156 tests
1857420685
01:10:21.073 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:10:36.444 [pool-483-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15364 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:10:37.078 [pool-484-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (258 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:10:37.086 [pool-485-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:10:37.087 [pool-482-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:10:37.087 [pool-482-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:10:37.087 [pool-482-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:544.
01:10:37.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:10:52.423 [pool-487-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15329 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:10:53.043 [pool-488-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (251 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:10:53.047 [pool-489-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:10:53.048 [pool-486-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:10:53.048 [pool-486-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:10:53.048 [pool-486-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:544.
01:10:53.048 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
01:10:53.048 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:541 which is executed by 156 tests
1857420685
01:10:53.342 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:11:08.649 [pool-491-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15300 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:11:09.318 [pool-492-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (298 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:11:09.325 [pool-493-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:11:09.325 [pool-490-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:11:09.325 [pool-490-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:11:09.325 [pool-490-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:541.
01:11:09.326 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
01:11:09.326 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:540 which is executed by 156 tests
1857420685
01:11:09.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:11:24.812 [pool-495-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15184 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:11:25.419 [pool-496-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (236 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:11:25.429 [pool-497-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:11:25.430 [pool-494-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:11:25.430 [pool-494-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:11:25.430 [pool-494-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:540.
01:11:25.430 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:11:40.588 [pool-499-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15151 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:11:41.209 [pool-500-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (249 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:11:41.217 [pool-501-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:11:41.218 [pool-498-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:11:41.218 [pool-498-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:11:41.218 [pool-498-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:540.
01:11:41.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
01:11:41.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:538 which is executed by 156 tests
1857420685
01:11:41.513 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:11:56.757 [pool-503-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15237 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
01:11:57.408 [pool-504-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (265 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:11:57.422 [pool-505-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:11:57.422 [pool-502-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
01:11:57.422 [pool-502-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:11:57.423 [pool-502-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:538.
01:11:57.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
01:11:57.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:537 which is executed by 156 tests
1857420685
01:11:57.719 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:12:12.887 [pool-507-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15159 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
01:12:13.499 [pool-508-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (244 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:414)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:12:13.508 [pool-509-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:12:13.509 [pool-506-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
01:12:13.509 [pool-506-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:12:13.509 [pool-506-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:537.
01:12:13.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
01:12:13.510 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:535 which is executed by 156 tests
1857420685
01:12:13.804 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
01:12:13.804 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:533 which is executed by 156 tests
1857420685
01:12:14.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
01:12:14.100 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:532 which is executed by 156 tests
1857420685
01:12:14.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
01:12:14.395 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:531 which is executed by 156 tests
1857420685
01:12:14.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
01:12:14.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:530 which is executed by 156 tests
1857420685
01:12:14.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
01:12:14.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:332 which is executed by 156 tests
1857420685
01:12:15.283 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
01:12:15.283 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:331 which is executed by 156 tests
1857420685
01:12:15.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:12:30.897 [pool-511-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15313 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:12:31.850 [pool-512-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (577 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:12:31.944 [pool-513-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:12:31.945 [pool-510-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:12:31.945 [pool-510-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:12:31.945 [pool-510-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:331.
01:12:31.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
01:12:31.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:269 which is executed by 156 tests
1857420685
01:12:32.240 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
01:12:32.240 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:251 which is executed by 156 tests
1857420685
01:12:32.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
01:12:32.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:155 which is executed by 160 tests
1648821820
01:12:32.839 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
01:12:32.840 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:154 which is executed by 160 tests
1648821820
01:12:33.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:12:48.326 [pool-515-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15194 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:12:48.885 [pool-516-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (231 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:12:48.887 [pool-517-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:12:48.888 [pool-514-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:12:48.888 [pool-514-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:12:48.888 [pool-514-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:154.
01:12:48.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
01:12:48.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:151 which is executed by 160 tests
1648821820
01:12:49.174 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:13:04.475 [pool-519-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15294 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:13:05.036 [pool-520-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (235 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:13:05.043 [pool-521-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:13:05.044 [pool-518-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:13:05.044 [pool-518-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:13:05.044 [pool-518-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:151.
01:13:05.044 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
01:13:05.044 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:150 which is executed by 160 tests
1648821820
01:13:05.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:13:20.526 [pool-523-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15190 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:13:21.089 [pool-524-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (236 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:13:21.096 [pool-525-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:13:21.097 [pool-522-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:13:21.097 [pool-522-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:13:21.097 [pool-522-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:150.
01:13:21.097 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
01:13:21.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:147 which is executed by 160 tests
1648821820
01:13:21.383 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:13:36.657 [pool-527-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15267 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:13:37.223 [pool-528-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (240 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:13:37.226 [pool-529-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:13:37.226 [pool-526-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:13:37.226 [pool-526-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:13:37.226 [pool-526-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:147.
01:13:37.226 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
01:13:37.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:146 which is executed by 160 tests
1648821820
01:13:37.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:13:52.752 [pool-531-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15233 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:13:53.314 [pool-532-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (232 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:13:53.317 [pool-533-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:13:53.317 [pool-530-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:13:53.317 [pool-530-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:13:53.318 [pool-530-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:146.
01:13:53.318 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
01:13:53.318 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:144 which is executed by 160 tests
1648821820
01:13:53.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
01:13:53.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3489 which is executed by 371 tests
1033054629
01:13:54.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
01:13:54.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:196 which is executed by 1235 tests
936233262
01:13:54.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
01:13:54.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:195 which is executed by 1235 tests
936233262
01:13:54.576 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:14:09.748 [pool-535-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15164 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:14:10.307 [pool-536-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (235 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
01:14:10.310 [pool-537-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

01:14:10.311 [pool-534-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:14:10.311 [pool-534-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
01:14:10.311 [pool-534-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:195.
01:14:10.331 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
01:14:10.734 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 714
01:14:10.734 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 4789
01:14:10.734 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 85
01:14:10.734 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
01:14:10.735 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
01:14:10.735 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 5
01:14:10.735 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT components: [14] [== of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2, == of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2]
01:14:10.735 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol -                   class java.lang.Boolean: 14
01:14:10.735 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
01:14:10.735 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 2802266ms
01:14:10.735 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_SYNTHESIS
Command exited with non-zero status 255
4677.87user 37.84system 46:45.33elapsed 168%CPU (0avgtext+0avgdata 3607844maxresident)k
65448inputs+14368outputs (23major+1823180minor)pagefaults 0swaps


Node: granduc-12.luxembourg.grid5000.fr



Date: Thu Nov 29 01:14:11 EST 2018

