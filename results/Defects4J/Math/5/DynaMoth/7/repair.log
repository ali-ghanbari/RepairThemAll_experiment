cd /tmp/DynaMoth_Defects4J_Math_5;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -d64 -Xmx4g -Xms1g -XX:MaxPermSize=1024m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSClassUnloadingEnabled -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis dynamoth \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 5 \
	--source src/main/java/ \
	--classpath "target/classes/:target/test-classes/:/tmp/DynaMoth_Defects4J_Math_5/target/classes/:/tmp/DynaMoth_Defects4J_Math_5/target/test-classes/:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1024m; support was removed in 8.0
10:41:14.186 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
10:41:14.190 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/DynaMoth_Defects4J_Math_5/target/classes/, file:/tmp/DynaMoth_Defects4J_Math_5/target/test-classes/, file:/tmp/DynaMoth_Defects4J_Math_5/target/classes/, file:/tmp/DynaMoth_Defects4J_Math_5/target/test-classes/, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
10:41:14.190 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
10:41:14.191 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math3.distribution.EnumeratedRealDistributionTest, org.apache.commons.math3.distribution.EnumeratedRealDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LevyDistributionTest, org.apache.commons.math3.distribution.LevyDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RRQRDecompositionTest, org.apache.commons.math3.linear.RRQRDecompositionTest, org.apache.commons.math3.linear.RRQRSolverTest, org.apache.commons.math3.linear.RRQRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventFilterTest, org.apache.commons.math3.ode.events.EventFilterTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.primes.PrimesTest, org.apache.commons.math3.primes.PrimesTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataGeneratorTest, org.apache.commons.math3.random.RandomDataGeneratorTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest]
10:41:14.194 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@2ff4f00f', projectTests=[org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DSCompilerTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.GradientFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.QuaternionTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math3.distribution.EnumeratedRealDistributionTest, org.apache.commons.math3.distribution.EnumeratedRealDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LevyDistributionTest, org.apache.commons.math3.distribution.LevyDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.CurveFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.GaussianFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.HarmonicFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fitting.PolynomialFitterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.CycleCrossoverTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.OrderedCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SegmentTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.DiagonalMatrixTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RRQRDecompositionTest, org.apache.commons.math3.linear.RRQRDecompositionTest, org.apache.commons.math3.linear.RRQRSolverTest, org.apache.commons.math3.linear.RRQRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventFilterTest, org.apache.commons.math3.ode.events.EventFilterTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.PointVectorValuePairTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimplePointCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.SimpleVectorValueCheckerTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexSolverTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.linear.SimplexTableauTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BracketFinderTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.BrentOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimplePointCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.primes.PrimesTest, org.apache.commons.math3.primes.PrimesTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataGeneratorTest, org.apache.commons.math3.random.RandomDataGeneratorTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.SynchronizedRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.DBSCANClustererTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.GTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest], complianceLevel=5, outputFolder=., json=true}
10:41:14.195 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 4
10:41:14.238 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 894 MB
10:41:14.239 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
10:41:14.239 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 990 MB
10:41:14.239 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
10:41:14.240 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
10:41:14.240 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
10:54:26.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
10:54:26.735 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:1228 which is executed by 1 tests
-1679819631
10:54:27.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
10:54:27.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:305 which is executed by 1 tests
-1679819631
10:54:27.438 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:27.526 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (54 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:28.655 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
10:54:28.656 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:304 which is executed by 5 tests
-1679819631
10:54:28.878 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:28.938 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (41 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:29.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:29.384 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (40 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:29.750 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
10:54:29.750 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:300 which is executed by 6 tests
-1679819631
10:54:29.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:30.013 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (37 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:30.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:30.479 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (113 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:30.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
10:54:30.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:348 which is executed by 42 tests
-1679819631
10:54:31.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:31.086 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (35 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:31.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
10:54:31.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:345 which is executed by 45 tests
-1679819631
10:54:31.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:31.672 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (34 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:31.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:32.050 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (36 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:32.498 [pool-31-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testEqualsRealDifference
10:54:32.524 [pool-31-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction
10:54:32.535 [pool-31-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testEqualsImaginaryDifference
10:54:32.555 [pool-31-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2
10:54:32.563 [pool-31-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuadraticFunction
java -cp /tmp/DynaMoth_Defects4J_Math_5/target/classes:/tmp/DynaMoth_Defects4J_Math_5/target/test-classes:/tmp/DynaMoth_Defects4J_Math_5/target/classes:/tmp/DynaMoth_Defects4J_Math_5/target/test-classes:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/home/tdurieux/defects4j4repair/repair_tools/nopol.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar: fr.inria.lille.repair.MethodTestRunner org.apache.commons.math3.complex.ComplexTest#testDivideReal org.apache.commons.math3.complex.FrenchComplexFormatTest#testPaseNegativeInfinity org.apache.commons.math3.complex.ComplexTest#testScalarSubtractInf org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseNegativeBoth org.apache.commons.math3.complex.ComplexTest#testScalarSubtract org.apache.commons.math3.complex.ComplexTest#testScalarPow org.apache.commons.math3.complex.ComplexFormatTest#testParseNan org.apache.commons.math3.complex.ComplexFormatTest#testParsePositiveInfinity org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseNegativeReal org.apache.commons.math3.complex.ComplexFormatTest#testParseNegativeBoth org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc org.apache.commons.math3.complex.ComplexTest#testReciprocalReal org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals org.apache.commons.math3.complex.ComplexTest#testEqualsNaN org.apache.commons.math3.complex.ComplexFormatTest#testParseNegativeReal org.apache.commons.math3.complex.ComplexTest#testScalarMultiply org.apache.commons.math3.complex.ComplexTest#testScalarAddInf org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseNan org.apache.commons.math3.complex.ComplexTest#testReciprocalImaginary org.apache.commons.math3.complex.ComplexFormatTest#testParseZeroReal org.apache.commons.math3.complex.ComplexTest#testScalarAdd org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseZeroImaginary org.apache.commons.math3.complex.FrenchComplexFormatTest#testParsePositiveInfinity org.apache.commons.math3.complex.ComplexFormatTest#testPaseNegativeInfinity org.apache.commons.math3.complex.ComplexTest#testEqualsTrue org.apache.commons.math3.complex.ComplexFormatTest#testParseDifferentImaginaryChar org.apache.commons.math3.complex.ComplexTest#testMath221 org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseZeroReal org.apache.commons.math3.complex.ComplexFormatTest#testParseSimpleWithDecimals org.apache.commons.math3.complex.ComplexFormatTest#testParseSimpleNoDecimals org.apache.commons.math3.complex.ComplexFormatTest#testParseZeroImaginary org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals org.apache.commons.math3.complex.ComplexFormatTest#testParseNegativeImaginary org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseNegativeImaginary org.apache.commons.math3.complex.ComplexTest#testDivideImaginary org.apache.commons.math3.complex.ComplexTest#testScalarDivide org.apache.commons.math3.complex.ComplexTest#testSerial org.apache.commons.math3.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc org.apache.commons.math3.complex.ComplexTest#testReciprocalZero 
10:54:32.962 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - ClassPrepareEvent
10:54:33.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.commons.math3.complex.Complex
10:54:34.029 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:34.036 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testDivideReal iteration 0
10:54:34.043 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=363)
10:54:34.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:34.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=361)
10:54:34.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:34.046 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:34.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:34.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:34.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:34.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:34.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:34.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:34.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:34.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:34.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:34.084 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:34.086 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:34.088 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:34.092 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:34.094 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:34.105 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:34.107 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:34.110 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:34.113 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:34.114 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:34.116 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:34.119 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:34.120 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:34.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:34.124 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:34.126 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:34.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:34.129 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:34.130 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:34.132 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:34.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:34.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:34.137 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:34.138 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:34.139 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:34.140 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:34.141 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:34.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:34.153 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:34.154 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:34.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:34.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:34.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:34.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:34.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:34.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:34.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:34.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:34.166 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:34.168 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:34.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:34.173 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.176 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.178 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.179 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.181 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:34.182 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:34.184 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:34.186 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:34.187 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:34.189 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.190 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.192 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.194 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.195 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.196 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:34.197 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:34.198 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:34.199 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:34.201 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:34.202 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:34.204 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:34.206 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.207 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.209 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.210 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.212 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.213 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:34.214 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:34.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:34.218 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:34.220 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:34.221 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:34.223 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:34.224 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:34.228 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:34.229 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:34.231 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:34.233 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:34.234 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:34.236 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:34.237 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:34.239 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:34.240 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:34.242 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:34.243 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:34.244 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:34.245 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:34.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:34.248 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:34.250 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:34.251 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:34.253 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:34.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:34.256 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:34.257 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:34.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:34.259 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:34.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:34.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:34.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:34.262 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:34.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:34.264 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:34.265 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:34.266 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:34.268 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:34.268 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:34.268 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:34.268 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:34.268 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:34.275 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:34.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:34.278 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:34.280 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.281 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.283 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.284 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.285 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.287 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:34.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:34.290 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:34.291 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:34.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:34.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:34.294 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:34.296 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:34.298 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:34.299 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:34.301 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.302 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.304 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.305 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.307 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.308 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:34.310 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:34.311 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:34.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:34.314 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:34.315 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:34.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:34.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:34.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:34.320 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:34.321 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:34.323 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:34.324 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.326 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.327 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.329 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.330 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.332 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:34.333 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:34.334 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:34.336 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:34.337 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:34.338 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:34.339 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:34.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:34.344 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:34.349 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:34.350 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:34.352 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:34.353 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:34.354 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:34.356 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:34.357 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:34.359 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:34.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:34.361 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:34.363 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:34.365 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:34.366 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:34.368 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:34.369 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:34.370 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:34.372 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:34.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:34.374 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:34.376 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:34.377 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:34.379 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:34.380 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:34.381 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:34.382 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:34.383 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:34.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:34.386 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:34.388 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:34.389 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:34.391 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:34.392 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:34.394 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:34.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:34.397 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:34.398 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:34.400 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:34.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:34.408 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:34.409 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:34.410 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:34.411 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:34.412 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:34.413 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:34.414 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:34.415 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:34.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:34.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:34.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:34.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:34.458 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:34.464 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.FrenchComplexFormatTest#testPaseNegativeInfinity iteration 0
10:54:34.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=755)
10:54:34.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:34.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=753)
10:54:34.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:34.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:34.466 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:34.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:34.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:34.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:34.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:34.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:34.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:34.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:34.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:34.474 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:34.475 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:34.477 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:34.479 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:34.481 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:34.482 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:34.483 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:34.484 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:34.486 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:34.488 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:34.489 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:34.491 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:34.492 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:34.494 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:34.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:34.497 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:34.499 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:34.500 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:34.501 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:34.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:34.505 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:34.507 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:34.507 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:34.508 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:34.509 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:34.510 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:34.511 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:34.512 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:34.513 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:34.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:34.517 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:34.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:34.519 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:34.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:34.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:34.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:34.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:34.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:34.526 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:34.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:34.529 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:34.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.532 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.533 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.534 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.536 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.537 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:34.538 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:34.540 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:34.542 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:34.545 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:34.548 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.552 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.555 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.556 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.557 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:34.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:34.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:34.560 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:34.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:34.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:34.565 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:34.566 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.569 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.570 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.572 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.573 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.574 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:34.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:34.577 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:34.578 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:34.579 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:34.581 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:34.582 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:34.583 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:34.585 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:34.586 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:34.588 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:34.589 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:34.590 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:34.592 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:34.593 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:34.595 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:34.596 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:34.597 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:34.598 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:34.599 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:34.600 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:34.602 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:34.603 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:34.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:34.606 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:34.607 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:34.608 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:34.610 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:34.611 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:34.612 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:34.612 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:34.613 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:34.614 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:34.615 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:34.616 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:34.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:34.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:34.618 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:34.619 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:34.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:34.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:34.621 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:34.621 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:34.621 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:34.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:34.627 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:34.629 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:34.630 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.632 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.633 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.634 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.636 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:34.638 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:34.640 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:34.641 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:34.643 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:34.643 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:34.644 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:34.646 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:34.647 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:34.649 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:34.650 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.652 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.653 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.654 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.656 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.657 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:34.658 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:34.660 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:34.661 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:34.662 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:34.663 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:34.664 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:34.665 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:34.666 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:34.668 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:34.669 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:34.670 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:34.672 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.673 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.674 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.676 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:34.680 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:34.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:34.683 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:34.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:34.685 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:34.686 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:34.688 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:34.689 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:34.691 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:34.692 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:34.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:34.695 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:34.696 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:34.697 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:34.699 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:34.700 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:34.701 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:34.703 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:34.704 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:34.706 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:34.707 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:34.708 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:34.710 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:34.711 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:34.712 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:34.714 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:34.715 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:34.716 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:34.718 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:34.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:34.721 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:34.722 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:34.723 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:34.724 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:34.725 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:34.727 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:34.728 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:34.730 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:34.731 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:34.733 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:34.734 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:34.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:34.737 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:34.738 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:34.740 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:34.741 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:34.742 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:34.743 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:34.744 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:34.745 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:34.753 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:34.754 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:34.755 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:34.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:34.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:34.758 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:34.758 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:34.759 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:34.770 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:34.771 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testScalarSubtractInf iteration 0
10:54:34.772 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=870)
10:54:34.772 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:34.772 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=868)
10:54:34.772 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:34.773 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:34.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:34.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:34.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:34.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:34.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:34.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:34.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:34.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:34.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:34.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:34.781 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:34.782 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:34.784 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:34.785 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:34.787 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:34.787 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:34.788 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:34.790 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:34.791 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:34.792 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:34.794 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:34.795 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:34.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:34.798 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:34.800 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:34.801 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:34.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:34.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:34.804 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:34.806 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:34.807 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:34.808 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:34.809 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:34.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:34.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:34.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:34.812 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:34.813 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:34.814 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:34.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:34.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:34.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:34.818 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:34.818 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:34.818 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:34.818 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:34.818 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:34.824 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:34.825 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:34.826 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:34.828 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.829 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.830 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.832 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.833 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.834 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:34.835 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:34.836 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:34.838 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:34.839 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:34.840 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.842 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.845 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.846 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.847 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:34.847 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:34.848 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:34.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:34.851 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:34.852 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:34.853 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:34.855 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.856 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.858 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.859 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.860 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.861 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:34.862 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:34.864 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:34.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:34.866 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:34.868 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:34.869 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:34.870 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:34.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:34.873 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:34.874 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:34.876 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:34.877 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:34.879 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:34.880 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:34.881 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:34.883 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:34.884 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:34.885 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:34.886 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:34.887 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:34.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:34.890 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:34.892 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:34.893 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:34.894 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:34.896 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:34.897 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:34.898 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:34.899 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:34.900 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:34.900 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:34.901 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:34.902 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:34.903 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:34.904 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:34.904 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:34.905 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:34.906 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:34.908 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:34.908 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:34.908 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:34.908 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:34.908 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:34.913 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:34.914 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:34.916 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:34.917 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.918 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.920 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.921 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.923 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.924 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:34.926 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:34.927 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:34.929 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:34.930 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:34.931 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:34.932 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:34.933 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:34.935 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:34.936 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:34.937 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.940 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.941 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.942 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.944 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:34.945 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:34.946 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:34.948 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:34.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:34.950 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:34.950 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:34.951 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:34.952 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:34.954 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:34.955 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:34.956 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:34.958 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:34.959 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:34.960 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:34.962 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:34.963 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:34.964 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:34.966 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:34.967 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:34.968 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:34.970 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:34.971 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:34.971 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:34.973 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:34.975 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:34.976 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:34.977 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:34.979 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:34.980 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:34.981 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:34.983 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:34.984 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:34.986 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:34.987 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:35.024 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:35.026 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:35.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:35.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:35.031 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:35.032 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:35.033 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:35.035 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:35.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:35.037 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:35.039 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:35.040 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:35.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:35.043 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:35.044 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:35.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:35.046 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:35.047 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:35.049 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:35.050 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:35.051 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:35.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:35.054 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:35.055 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:35.057 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:35.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:35.059 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:35.061 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:35.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:35.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:35.064 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:35.065 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:35.066 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:35.067 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:35.067 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:35.068 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:35.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:35.070 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:35.071 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:35.071 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:35.072 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:35.074 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:35.075 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testScalarSubtractInf iteration 1
10:54:35.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=974)
10:54:35.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:35.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=973)
10:54:35.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:35.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:35.077 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:35.077 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:35.077 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:35.077 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:35.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:35.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:35.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:35.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:35.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:35.083 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:35.085 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:35.086 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:35.088 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:35.089 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:35.090 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:35.091 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:35.092 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:35.094 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:35.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:35.097 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:35.098 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:35.100 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:35.101 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:35.103 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:35.104 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:35.106 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:35.106 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:35.107 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:35.109 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:35.110 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:35.112 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:35.113 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:35.113 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:35.114 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:35.115 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:35.116 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:35.117 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:35.117 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:35.118 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:35.119 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:35.132 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:35.133 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:35.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:35.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:35.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:35.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:35.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:35.140 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:35.141 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:35.143 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:35.149 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.152 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.158 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:35.158 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:35.160 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:35.162 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:35.163 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:35.164 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.165 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.167 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.168 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.169 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:35.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:35.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:35.173 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:35.174 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:35.176 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:35.177 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:35.178 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.181 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.182 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.184 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.184 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:35.185 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:35.187 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:35.188 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:35.189 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:35.191 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:35.192 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:35.193 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:35.194 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:35.196 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:35.197 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:35.199 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:35.200 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:35.201 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:35.202 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:35.204 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:35.205 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:35.206 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:35.207 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:35.208 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:35.209 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:35.210 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:35.212 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:35.213 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:35.214 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:35.216 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:35.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:35.218 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:35.219 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:35.220 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:35.220 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:35.221 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:35.222 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:35.222 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:35.223 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:35.224 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:35.225 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:35.225 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:35.226 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:35.228 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:35.228 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:35.228 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:35.228 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:35.228 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:35.232 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:35.233 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:35.235 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:35.236 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.237 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.238 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.240 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.241 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.242 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:35.243 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:35.245 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:35.246 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:35.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:35.248 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:35.249 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:35.250 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:35.252 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:35.253 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:35.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.255 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.257 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.259 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:35.262 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:35.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:35.264 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:35.265 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:35.266 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:35.267 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:35.268 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:35.269 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:35.270 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:35.272 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:35.273 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:35.274 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.276 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.278 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.280 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.281 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:35.282 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:35.284 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:35.285 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:35.286 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:35.287 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:35.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:35.289 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:35.291 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:35.292 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:35.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:35.295 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:35.296 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:35.297 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:35.299 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:35.300 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:35.301 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:35.302 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:35.304 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:35.305 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:35.306 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:35.308 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:35.309 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:35.310 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:35.311 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:35.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:35.314 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:35.315 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:35.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:35.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:35.319 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:35.320 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:35.322 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:35.322 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:35.323 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:35.325 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:35.326 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:35.327 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:35.329 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:35.330 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:35.331 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:35.332 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:35.334 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:35.335 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:35.336 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:35.338 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:35.339 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:35.340 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:35.341 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:35.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:35.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:35.343 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:35.344 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:35.345 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:35.345 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:35.346 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:35.347 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:35.348 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:35.348 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:35.357 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:35.358 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseNegativeBoth iteration 0
10:54:35.359 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=1079)
10:54:35.359 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:35.359 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1077)
10:54:35.359 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:35.359 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:35.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:35.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:35.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:35.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:35.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:35.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:35.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:35.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:35.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:35.365 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:35.366 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:35.368 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:35.369 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:35.371 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:35.372 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:35.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:35.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:35.375 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:35.376 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:35.377 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:35.379 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:35.380 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:35.382 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:35.383 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:35.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:35.386 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:35.387 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:35.388 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:35.389 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:35.391 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:35.392 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:35.393 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:35.393 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:35.394 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:35.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:35.396 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:35.396 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:35.397 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:35.398 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:35.398 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:35.399 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:35.400 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:35.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:35.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:35.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:35.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:35.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:35.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:35.408 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:35.409 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:35.410 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.412 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.413 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.414 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:35.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:35.419 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:35.420 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:35.421 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:35.422 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.424 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.428 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.429 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:35.429 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:35.430 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:35.431 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:35.433 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:35.434 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:35.435 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:35.436 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.438 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.440 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.441 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.442 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:35.443 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:35.444 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:35.446 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:35.447 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:35.448 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:35.449 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:35.451 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:35.462 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:35.463 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:35.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:35.466 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:35.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:35.469 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:35.470 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:35.471 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:35.473 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:35.474 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:35.475 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:35.476 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:35.477 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:35.479 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:35.480 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:35.481 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:35.482 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:35.484 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:35.485 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:35.486 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:35.487 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:35.488 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:35.489 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:35.489 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:35.490 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:35.491 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:35.492 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:35.493 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:35.493 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:35.494 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:35.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:35.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:35.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:35.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:35.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:35.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:35.501 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:35.502 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:35.503 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:35.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.506 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.507 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.508 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.509 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.511 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:35.512 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:35.513 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:35.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:35.516 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:35.517 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:35.517 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:35.519 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:35.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:35.521 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:35.523 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.524 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.525 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.526 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.528 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.529 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:35.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:35.532 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:35.533 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:35.534 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:35.535 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:35.536 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:35.536 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:35.537 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:35.539 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:35.540 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:35.541 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:35.543 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.544 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.545 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.547 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.548 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.549 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:35.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:35.552 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:35.553 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:35.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:35.555 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:35.556 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:35.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:35.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:35.561 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:35.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:35.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:35.564 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:35.565 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:35.567 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:35.568 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:35.569 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:35.571 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:35.572 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:35.573 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:35.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:35.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:35.577 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:35.579 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:35.580 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:35.581 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:35.583 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:35.584 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:35.585 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:35.586 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:35.588 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:35.589 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:35.590 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:35.591 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:35.593 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:35.595 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:35.596 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:35.597 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:35.598 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:35.600 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:35.601 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:35.602 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:35.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:35.605 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:35.606 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:35.608 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:35.609 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:35.611 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:35.612 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:35.612 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:35.613 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:35.614 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:35.615 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:35.615 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:35.616 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:35.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:35.618 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:35.618 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:35.619 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:35.633 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:35.634 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testScalarSubtract iteration 0
10:54:35.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=1233)
10:54:35.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:35.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1231)
10:54:35.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:35.636 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:35.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:35.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:35.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:35.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:35.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:35.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:35.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:35.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:35.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:35.642 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:35.644 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:35.645 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:35.648 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:35.649 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:35.651 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:35.651 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:35.652 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:35.654 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:35.655 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:35.657 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:35.658 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:35.660 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:35.661 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:35.663 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:35.664 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:35.665 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:35.666 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:35.667 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:35.669 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:35.670 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:35.671 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:35.672 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:35.673 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:35.674 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:35.674 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:35.675 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:35.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:35.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:35.678 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:35.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:35.680 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:35.680 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:35.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:35.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:35.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:35.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:35.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:35.687 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:35.688 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:35.690 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:35.691 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.694 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.695 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.696 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.697 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:35.698 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:35.700 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:35.701 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:35.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:35.704 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.705 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.706 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.708 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.709 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.710 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:35.711 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:35.711 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:35.712 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:35.714 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:35.715 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:35.716 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:35.718 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.720 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.721 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.723 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.723 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:35.724 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:35.726 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:35.727 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:35.728 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:35.730 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:35.731 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:35.732 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:35.734 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:35.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:35.736 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:35.738 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:35.739 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:35.740 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:35.741 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:35.743 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:35.744 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:35.745 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:35.746 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:35.747 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:35.748 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:35.750 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:35.751 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:35.752 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:35.753 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:35.755 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:35.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:35.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:35.758 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:35.759 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:35.759 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:35.760 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:35.761 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:35.762 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:35.762 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:35.763 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:35.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:35.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:35.765 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:35.767 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:35.767 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:35.767 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:35.767 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:35.767 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:35.771 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:35.773 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:35.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:35.775 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.777 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.778 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.780 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.782 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:35.783 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:35.793 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:35.795 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:35.796 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:35.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:35.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:35.799 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:35.800 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:35.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:35.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.804 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.805 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.807 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.808 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.809 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:35.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:35.812 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:35.813 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:35.814 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:35.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:35.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:35.817 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:35.817 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:35.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:35.820 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:35.821 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:35.823 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.824 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.825 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.826 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.828 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.829 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:35.830 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:35.831 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:35.833 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:35.834 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:35.835 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:35.835 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:35.837 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:35.838 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:35.839 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:35.841 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:35.842 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:35.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:35.844 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:35.846 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:35.847 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:35.848 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:35.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:35.851 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:35.852 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:35.853 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:35.855 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:35.856 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:35.857 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:35.858 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:35.860 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:35.861 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:35.862 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:35.864 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:35.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:35.866 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:35.867 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:35.869 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:35.869 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:35.870 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:35.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:35.873 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:35.874 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:35.875 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:35.877 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:35.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:35.879 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:35.881 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:35.882 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:35.883 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:35.885 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:35.886 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:35.887 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:35.888 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:35.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:35.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:35.890 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:35.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:35.892 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:35.892 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:35.893 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:35.894 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:35.895 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:35.895 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:35.903 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:35.908 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testScalarPow iteration 0
10:54:35.909 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=1388)
10:54:35.909 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:35.909 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1386)
10:54:35.909 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:35.910 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:35.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:35.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:35.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:35.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:35.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:35.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:35.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:35.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:35.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:35.916 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:35.917 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:35.919 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:35.920 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:35.922 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:35.923 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:35.924 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:35.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:35.926 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:35.927 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:35.929 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:35.930 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:35.932 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:35.933 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:35.935 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:35.936 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:35.937 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:35.938 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:35.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:35.941 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:35.942 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:35.943 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:35.944 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:35.945 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:35.945 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:35.946 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:35.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:35.948 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:35.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:35.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:35.950 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:35.951 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:35.952 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:35.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:35.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:35.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:35.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:35.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:35.957 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:35.959 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:35.960 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:35.961 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.962 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.964 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.965 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.966 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.967 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:35.968 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:35.969 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:35.971 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:35.972 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:35.973 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.974 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.976 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.977 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.978 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.979 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:35.980 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:35.980 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:35.981 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:35.983 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:35.984 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:35.985 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:35.987 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:35.988 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:35.989 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:35.990 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:35.992 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:35.993 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:35.993 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:35.995 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:35.996 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:35.997 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:35.999 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:36.000 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:36.001 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:36.003 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:36.004 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:36.005 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:36.007 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:36.008 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:36.009 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:36.011 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:36.012 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:36.013 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:36.015 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:36.015 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:36.016 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:36.018 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:36.019 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:36.020 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:36.022 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:36.023 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:36.024 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:36.025 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:36.027 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:36.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:36.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:36.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:36.030 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:36.030 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:36.031 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:36.032 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:36.033 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:36.033 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:36.034 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:36.035 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:36.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:36.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:36.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:36.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:36.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:36.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:36.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:36.043 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:36.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.046 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.047 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.048 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.050 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.051 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:36.052 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:36.054 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:36.055 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:36.056 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:36.057 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:36.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:36.060 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:36.061 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:36.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:36.064 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.065 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.066 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.067 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.070 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:36.071 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:36.073 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:36.074 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:36.075 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:36.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:36.077 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:36.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:36.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:36.080 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:36.081 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:36.083 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:36.084 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.085 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.087 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.088 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.089 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.091 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:36.092 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:36.093 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:36.094 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:36.096 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:36.096 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:36.097 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:36.099 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:36.100 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:36.101 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:36.103 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:36.110 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:36.112 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:36.113 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:36.114 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:36.116 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:36.117 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:36.118 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:36.119 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:36.121 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:36.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:36.124 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:36.125 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:36.126 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:36.127 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:36.129 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:36.130 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:36.131 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:36.132 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:36.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:36.135 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:36.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:36.137 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:36.138 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:36.139 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:36.140 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:36.142 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:36.143 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:36.144 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:36.146 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:36.147 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:36.148 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:36.149 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:36.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:36.152 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:36.153 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:36.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:36.156 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:36.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:36.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:36.158 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:36.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:36.160 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:36.160 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:36.161 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:36.162 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:36.163 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:36.163 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:36.164 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:36.168 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:36.169 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexFormatTest#testParseNan iteration 0
10:54:36.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=1543)
10:54:36.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:36.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1541)
10:54:36.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:36.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:36.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:36.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:36.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:36.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:36.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:36.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:36.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:36.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:36.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:36.176 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:36.177 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:36.179 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:36.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:36.181 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:36.183 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:36.183 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:36.184 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:36.186 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:36.187 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:36.188 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:36.189 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:36.191 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:36.192 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:36.193 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:36.195 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:36.196 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:36.196 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:36.197 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:36.199 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:36.200 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:36.201 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:36.202 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:36.203 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:36.203 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:36.204 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:36.205 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:36.205 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:36.206 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:36.207 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:36.207 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:36.208 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:36.209 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:36.210 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:36.210 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:36.210 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:36.210 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:36.210 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:36.215 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:36.216 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:36.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:36.218 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.220 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.221 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.222 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.223 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.224 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:36.225 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:36.227 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:36.228 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:36.229 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:36.230 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.232 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.233 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.234 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.235 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.236 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:36.237 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:36.238 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:36.238 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:36.240 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:36.241 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:36.242 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:36.244 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.245 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.246 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.249 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.249 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:36.250 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:36.252 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:36.253 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:36.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:36.255 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:36.257 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:36.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:36.259 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:36.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:36.262 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:36.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:36.264 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:36.266 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:36.267 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:36.268 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:36.270 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:36.271 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:36.272 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:36.272 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:36.274 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:36.275 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:36.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:36.278 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:36.279 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:36.281 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:36.282 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:36.283 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:36.284 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:36.285 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:36.285 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:36.286 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:36.287 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:36.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:36.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:36.289 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:36.290 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:36.290 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:36.291 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:36.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:36.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:36.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:36.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:36.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:36.297 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:36.299 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:36.300 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:36.301 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.302 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.305 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.306 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.307 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:36.309 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:36.310 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:36.311 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:36.312 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:36.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:36.314 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:36.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:36.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:36.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:36.320 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.321 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.322 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.323 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.325 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.326 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:36.327 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:36.329 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:36.330 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:36.331 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:36.332 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:36.333 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:36.334 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:36.334 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:36.336 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:36.337 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:36.339 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:36.340 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.341 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.344 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.345 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.346 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:36.347 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:36.349 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:36.350 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:36.357 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:36.358 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:36.359 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:36.361 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:36.362 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:36.363 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:36.364 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:36.365 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:36.367 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:36.368 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:36.369 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:36.370 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:36.372 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:36.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:36.374 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:36.376 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:36.377 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:36.378 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:36.380 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:36.381 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:36.382 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:36.383 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:36.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:36.386 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:36.387 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:36.388 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:36.390 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:36.391 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:36.392 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:36.393 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:36.394 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:36.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:36.397 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:36.398 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:36.399 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:36.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:36.402 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:36.403 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:36.405 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:36.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:36.407 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:36.408 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:36.410 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:36.411 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:36.412 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:36.412 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:36.413 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:36.414 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:36.415 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:36.415 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:36.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:36.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:36.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:36.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:36.419 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:36.423 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:36.424 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexFormatTest#testParsePositiveInfinity iteration 0
10:54:36.424 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=1547)
10:54:36.424 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:36.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1545)
10:54:36.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:36.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:36.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:36.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:36.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:36.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:36.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:36.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:36.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:36.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:36.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:36.431 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:36.433 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:36.434 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:36.436 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:36.437 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:36.438 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:36.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:36.440 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:36.442 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:36.443 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:36.444 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:36.446 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:36.447 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:36.448 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:36.450 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:36.451 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:36.453 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:36.454 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:36.454 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:36.456 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:36.457 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:36.458 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:36.459 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:36.460 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:36.461 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:36.461 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:36.462 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:36.463 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:36.464 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:36.464 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:36.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:36.466 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:36.466 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:36.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:36.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:36.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:36.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:36.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:36.473 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:36.474 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:36.476 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:36.477 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.480 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.481 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.482 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.483 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:36.484 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:36.486 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:36.487 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:36.488 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:36.490 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.491 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.492 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.494 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:36.497 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:36.497 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:36.498 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:36.500 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:36.501 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:36.502 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:36.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.505 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.506 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.508 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.509 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.510 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:36.511 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:36.512 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:36.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:36.515 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:36.516 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:36.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:36.519 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:36.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:36.522 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:36.523 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:36.524 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:36.526 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:36.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:36.528 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:36.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:36.531 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:36.532 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:36.533 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:36.534 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:36.536 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:36.537 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:36.538 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:36.539 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:36.541 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:36.542 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:36.543 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:36.545 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:36.545 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:36.546 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:36.547 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:36.548 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:36.548 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:36.549 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:36.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:36.551 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:36.551 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:36.552 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:36.553 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:36.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:36.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:36.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:36.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:36.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:36.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:36.561 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:36.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:36.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.565 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.566 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.567 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.569 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.570 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:36.571 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:36.573 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:36.574 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:36.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:36.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:36.577 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:36.579 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:36.580 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:36.581 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:36.583 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.584 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.585 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.587 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.588 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.589 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:36.591 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:36.592 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:36.593 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:36.595 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:36.595 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:36.596 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:36.597 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:36.598 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:36.600 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:36.601 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:36.603 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:36.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.605 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.612 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.614 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.616 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:36.619 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:36.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:36.621 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:36.623 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:36.623 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:36.624 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:36.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:36.627 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:36.629 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:36.630 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:36.631 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:36.633 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:36.634 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:36.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:36.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:36.638 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:36.639 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:36.641 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:36.642 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:36.644 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:36.645 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:36.646 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:36.647 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:36.649 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:36.650 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:36.651 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:36.653 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:36.654 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:36.655 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:36.656 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:36.658 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:36.659 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:36.660 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:36.661 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:36.662 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:36.663 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:36.665 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:36.666 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:36.667 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:36.668 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:36.669 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:36.671 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:36.672 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:36.673 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:36.674 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:36.675 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:36.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:36.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:36.678 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:36.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:36.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:36.680 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:36.681 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:36.681 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:36.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:36.683 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:36.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:36.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:36.688 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:36.691 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseNegativeReal iteration 0
10:54:36.691 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=1651)
10:54:36.691 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:36.691 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1649)
10:54:36.692 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:36.692 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:36.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:36.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:36.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:36.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:36.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:36.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:36.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:36.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:36.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:36.698 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:36.699 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:36.701 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:36.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:36.704 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:36.705 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:36.706 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:36.706 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:36.708 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:36.709 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:36.710 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:36.712 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:36.713 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:36.714 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:36.716 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:36.717 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:36.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:36.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:36.720 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:36.722 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:36.723 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:36.724 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:36.725 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:36.726 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:36.726 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:36.727 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:36.728 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:36.728 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:36.729 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:36.730 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:36.731 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:36.731 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:36.732 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:36.733 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:36.733 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:36.733 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:36.733 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:36.733 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:36.738 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:36.739 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:36.740 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:36.741 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.743 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.744 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.745 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.746 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.747 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:36.748 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:36.750 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:36.751 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:36.752 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:36.753 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.755 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.758 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.759 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:36.760 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:36.761 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:36.761 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:36.763 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:36.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:36.766 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:36.767 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.768 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.769 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.771 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.772 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.773 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:36.773 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:36.775 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:36.776 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:36.777 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:36.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:36.780 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:36.781 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:36.783 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:36.784 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:36.785 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:36.787 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:36.788 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:36.789 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:36.790 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:36.792 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:36.793 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:36.794 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:36.795 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:36.796 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:36.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:36.798 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:36.800 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:36.801 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:36.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:36.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:36.805 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:36.806 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:36.807 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:36.807 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:36.808 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:36.809 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:36.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:36.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:36.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:36.812 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:36.812 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:36.813 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:36.814 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:36.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:36.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:36.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:36.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:36.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:36.820 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:36.822 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:36.823 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:36.824 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.826 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.827 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.828 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.829 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.831 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:36.832 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:36.833 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:36.835 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:36.836 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:36.837 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:36.838 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:36.839 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:36.841 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:36.842 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:36.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.845 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.846 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.847 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.850 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:36.851 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:36.852 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:36.854 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:36.855 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:36.856 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:36.857 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:36.857 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:36.858 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:36.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:36.867 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:36.868 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:36.870 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:36.871 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:36.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:36.873 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:36.875 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:36.876 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:36.877 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:36.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:36.879 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:36.881 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:36.881 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:36.882 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:36.884 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:36.885 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:36.886 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:36.888 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:36.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:36.890 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:36.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:36.893 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:36.894 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:36.895 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:36.896 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:36.898 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:36.899 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:36.900 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:36.902 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:36.903 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:36.904 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:36.905 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:36.907 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:36.908 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:36.909 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:36.910 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:36.912 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:36.913 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:36.914 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:36.915 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:36.916 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:36.917 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:36.919 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:36.920 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:36.921 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:36.922 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:36.924 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:36.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:36.926 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:36.927 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:36.929 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:36.930 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:36.931 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:36.932 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:36.934 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:36.934 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:36.935 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:36.936 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:36.937 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:36.937 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:36.938 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:36.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:36.940 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:36.940 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:36.941 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:36.942 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:36.945 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:36.946 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexFormatTest#testParseNegativeBoth iteration 0
10:54:36.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=1805)
10:54:36.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:36.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1803)
10:54:36.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:36.948 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:36.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:36.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:36.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:36.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:36.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:36.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:36.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:36.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:36.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:36.954 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:36.955 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:36.956 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:36.958 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:36.959 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:36.961 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:36.961 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:36.962 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:36.964 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:36.965 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:36.966 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:36.968 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:36.969 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:36.971 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:36.972 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:36.977 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:36.978 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:36.979 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:36.980 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:36.982 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:36.983 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:36.984 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:36.985 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:36.986 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:36.987 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:36.987 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:36.988 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:36.989 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:36.989 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:36.990 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:36.991 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:36.992 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:36.992 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:36.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:36.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:36.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:36.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:36.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:36.999 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:37.000 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:37.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:37.003 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.004 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.007 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.008 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.009 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:37.010 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:37.012 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:37.013 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:37.014 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:37.015 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.017 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.018 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.019 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.021 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.022 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:37.022 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:37.023 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:37.024 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:37.026 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:37.027 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:37.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:37.030 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.031 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.032 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.034 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.035 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:37.037 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:37.038 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:37.040 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:37.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:37.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:37.044 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:37.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:37.046 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:37.048 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:37.049 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:37.051 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:37.052 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:37.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:37.055 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:37.056 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:37.057 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:37.059 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:37.060 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:37.060 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:37.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:37.064 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:37.065 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:37.066 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:37.068 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:37.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:37.070 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:37.072 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:37.072 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:37.073 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:37.074 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:37.075 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:37.075 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:37.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:37.077 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:37.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:37.079 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:37.080 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:37.080 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:37.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:37.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:37.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:37.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:37.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:37.087 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:37.088 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:37.090 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:37.091 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.092 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.094 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.096 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.098 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:37.099 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:37.100 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:37.102 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:37.103 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:37.104 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:37.105 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:37.107 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:37.108 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:37.109 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:37.111 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.112 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.113 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.114 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.116 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.117 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:37.118 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:37.119 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:37.126 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:37.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:37.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:37.129 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:37.130 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:37.131 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:37.133 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:37.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:37.135 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:37.137 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.138 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.139 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.140 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.142 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.143 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:37.144 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:37.146 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:37.147 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:37.148 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:37.149 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:37.150 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:37.152 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:37.153 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:37.154 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:37.156 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:37.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:37.158 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:37.160 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:37.161 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:37.162 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:37.163 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:37.165 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:37.166 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:37.167 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:37.169 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:37.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:37.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:37.173 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:37.174 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:37.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:37.176 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:37.178 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:37.179 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:37.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:37.181 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:37.183 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:37.184 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:37.185 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:37.185 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:37.187 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:37.188 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:37.190 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:37.191 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:37.192 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:37.193 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:37.195 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:37.196 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:37.197 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:37.199 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:37.200 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:37.201 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:37.202 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:37.203 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:37.204 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:37.204 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:37.205 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:37.206 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:37.207 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:37.207 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:37.208 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:37.209 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:37.209 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:37.210 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:37.213 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:37.214 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc iteration 0
10:54:37.215 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=1959)
10:54:37.215 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:37.215 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1957)
10:54:37.215 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:37.216 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:37.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:37.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:37.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:37.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:37.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:37.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:37.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:37.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:37.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:37.222 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:37.223 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:37.225 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:37.226 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:37.227 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:37.229 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:37.230 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:37.230 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:37.232 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:37.233 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:37.234 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:37.236 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:37.237 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:37.239 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:37.240 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:37.241 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:37.243 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:37.244 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:37.244 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:37.246 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:37.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:37.248 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:37.249 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:37.250 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:37.251 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:37.251 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:37.252 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:37.253 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:37.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:37.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:37.255 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:37.256 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:37.257 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:37.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:37.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:37.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:37.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:37.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:37.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:37.264 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:37.266 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:37.267 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.268 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.269 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.271 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.272 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.273 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:37.274 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:37.275 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:37.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:37.278 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:37.279 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.281 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.282 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.283 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.284 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.285 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:37.286 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:37.287 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:37.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:37.289 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:37.291 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:37.292 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:37.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.295 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.296 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.297 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.298 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.299 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:37.300 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:37.302 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:37.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:37.304 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:37.305 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:37.307 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:37.308 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:37.309 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:37.310 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:37.312 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:37.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:37.314 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:37.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:37.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:37.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:37.319 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:37.321 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:37.321 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:37.322 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:37.324 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:37.325 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:37.326 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:37.328 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:37.329 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:37.330 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:37.332 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:37.333 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:37.334 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:37.334 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:37.335 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:37.336 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:37.336 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:37.337 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:37.338 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:37.339 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:37.339 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:37.340 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:37.341 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:37.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:37.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:37.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:37.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:37.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:37.347 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:37.348 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:37.349 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:37.351 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.352 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.353 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.354 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.356 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.357 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:37.358 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:37.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:37.361 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:37.362 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:37.363 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:37.364 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:37.366 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:37.367 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:37.368 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:37.370 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.371 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.372 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.375 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.376 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:37.377 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:37.379 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:37.380 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:37.381 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:37.382 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:37.383 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:37.384 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:37.384 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:37.386 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:37.388 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:37.389 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:37.390 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.391 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.393 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.394 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.397 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:37.398 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:37.399 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:37.400 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:37.402 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:37.402 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:37.403 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:37.405 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:37.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:37.407 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:37.408 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:37.410 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:37.411 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:37.412 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:37.413 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:37.415 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:37.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:37.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:37.419 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:37.420 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:37.422 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:37.423 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:37.424 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:37.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:37.427 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:37.428 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:37.435 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:37.437 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:37.438 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:37.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:37.441 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:37.442 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:37.443 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:37.444 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:37.445 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:37.446 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:37.448 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:37.449 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:37.450 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:37.452 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:37.453 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:37.454 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:37.455 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:37.457 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:37.458 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:37.459 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:37.460 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:37.462 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:37.463 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:37.463 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:37.464 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:37.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:37.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:37.466 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:37.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:37.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:37.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:37.469 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:37.470 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:37.475 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:37.476 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testReciprocalReal iteration 0
10:54:37.476 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=2113)
10:54:37.476 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:37.476 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=2111)
10:54:37.476 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:37.477 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:37.477 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:37.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:37.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:37.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:37.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:37.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:37.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:37.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:37.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:37.482 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:37.484 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:37.485 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:37.487 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:37.488 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:37.489 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:37.490 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:37.491 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:37.492 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:37.493 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:37.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:37.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:37.497 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:37.499 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:37.500 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:37.501 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:37.503 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:37.503 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:37.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:37.506 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:37.507 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:37.508 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:37.509 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:37.510 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:37.510 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:37.511 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:37.512 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:37.512 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:37.513 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:37.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:37.515 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:37.516 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:37.516 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:37.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:37.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:37.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:37.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:37.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:37.523 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:37.524 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:37.525 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:37.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.532 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.533 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.534 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.535 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.536 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:37.537 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:37.539 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:37.540 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:37.541 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:37.542 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.544 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.545 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.546 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.547 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.548 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:37.549 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:37.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:37.551 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:37.552 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:37.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:37.555 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:37.556 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.560 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:37.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:37.565 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:37.566 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:37.568 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:37.569 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:37.570 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:37.572 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:37.573 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:37.574 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:37.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:37.577 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:37.579 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:37.580 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:37.581 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:37.583 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:37.584 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:37.585 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:37.586 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:37.587 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:37.588 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:37.590 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:37.591 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:37.592 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:37.593 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:37.595 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:37.596 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:37.597 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:37.598 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:37.599 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:37.599 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:37.600 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:37.601 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:37.602 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:37.602 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:37.603 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:37.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:37.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:37.605 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:37.606 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:37.606 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:37.606 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:37.607 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:37.607 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:37.611 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:37.613 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:37.614 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:37.615 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.618 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.619 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.621 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.622 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:37.623 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:37.625 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:37.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:37.627 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:37.628 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:37.629 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:37.630 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:37.632 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:37.633 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:37.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.636 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.638 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.640 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.641 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:37.642 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:37.644 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:37.645 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:37.646 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:37.647 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:37.648 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:37.649 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:37.649 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:37.651 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:37.652 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:37.654 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:37.655 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.656 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.658 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.659 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.660 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.662 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:37.663 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:37.664 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:37.665 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:37.667 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:37.668 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:37.668 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:37.670 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:37.671 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:37.673 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:37.674 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:37.675 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:37.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:37.678 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:37.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:37.681 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:37.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:37.683 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:37.685 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:37.686 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:37.688 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:37.689 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:37.690 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:37.691 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:37.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:37.694 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:37.695 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:37.696 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:37.698 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:37.699 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:37.700 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:37.701 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:37.703 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:37.703 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:37.704 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:37.706 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:37.707 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:37.708 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:37.709 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:37.711 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:37.712 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:37.713 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:37.714 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:37.716 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:37.717 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:37.718 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:37.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:37.721 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:37.721 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:37.722 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:37.723 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:37.723 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:37.724 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:37.725 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:37.726 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:37.726 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:37.727 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:37.728 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:37.728 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:37.732 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:37.733 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar iteration 0
10:54:37.734 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=2265)
10:54:37.734 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:37.734 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=2263)
10:54:37.734 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:37.734 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:37.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:37.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:37.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:37.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:37.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:37.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:37.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:37.736 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:37.736 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:37.740 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:37.741 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:37.743 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:37.745 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:37.747 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:37.748 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:37.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:37.750 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:37.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:37.758 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:37.760 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:37.761 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:37.762 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:37.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:37.765 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:37.766 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:37.768 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:37.768 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:37.769 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:37.771 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:37.772 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:37.773 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:37.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:37.775 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:37.775 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:37.776 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:37.777 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:37.777 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:37.778 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:37.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:37.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:37.780 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:37.781 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:37.782 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:37.782 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:37.782 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:37.782 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:37.782 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:37.786 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:37.788 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:37.789 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:37.790 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.791 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.793 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.794 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.795 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.796 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:37.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:37.798 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:37.800 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:37.801 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:37.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.805 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.806 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.807 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.808 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:37.808 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:37.809 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:37.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:37.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:37.813 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:37.814 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:37.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.818 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.820 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.821 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:37.822 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:37.823 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:37.825 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:37.826 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:37.828 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:37.829 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:37.831 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:37.832 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:37.833 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:37.835 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:37.836 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:37.837 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:37.839 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:37.840 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:37.841 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:37.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:37.844 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:37.845 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:37.846 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:37.847 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:37.848 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:37.850 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:37.851 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:37.852 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:37.853 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:37.855 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:37.856 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:37.857 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:37.858 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:37.858 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:37.859 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:37.860 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:37.861 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:37.861 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:37.862 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:37.863 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:37.864 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:37.864 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:37.866 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:37.866 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:37.866 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:37.866 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:37.866 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:37.871 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:37.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:37.873 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:37.875 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.876 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.877 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.879 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.880 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.881 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:37.882 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:37.884 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:37.885 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:37.886 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:37.887 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:37.888 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:37.890 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:37.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:37.892 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:37.894 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.895 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.896 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.897 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.899 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.900 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:37.901 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:37.902 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:37.904 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:37.905 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:37.906 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:37.906 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:37.907 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:37.908 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:37.909 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:37.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:37.912 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:37.913 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:37.915 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:37.916 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:37.917 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:37.919 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:37.920 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:37.921 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:37.922 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:37.924 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:37.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:37.926 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:37.927 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:37.928 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:37.929 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:37.931 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:37.932 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:37.933 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:37.934 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:37.936 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:37.937 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:37.938 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:37.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:37.941 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:37.942 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:37.943 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:37.944 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:37.946 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:37.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:37.948 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:37.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:37.950 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:37.952 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:37.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:37.954 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:37.955 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:37.957 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:37.958 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:37.959 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:37.960 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:37.961 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:37.962 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:37.964 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:37.965 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:37.966 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:37.968 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:37.969 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:37.970 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:37.971 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:37.973 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:37.974 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:37.975 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:37.976 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:37.978 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:37.978 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:37.979 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:37.980 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:37.980 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:37.981 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:37.982 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:37.982 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:37.983 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:37.984 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:37.985 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:37.985 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:37.988 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:37.990 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals iteration 0
10:54:37.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=2419)
10:54:37.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:37.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=2417)
10:54:37.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:37.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:37.995 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:37.996 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:37.996 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:37.996 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:37.996 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:37.996 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:37.996 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:37.996 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:37.996 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:38.000 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:38.007 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:38.009 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:38.010 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:38.011 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:38.013 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:38.013 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:38.014 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:38.016 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:38.017 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:38.018 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:38.020 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:38.021 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:38.022 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:38.024 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:38.025 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:38.026 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:38.027 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:38.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:38.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:38.030 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:38.032 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:38.032 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:38.033 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:38.034 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:38.035 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:38.035 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:38.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:38.037 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:38.037 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:38.038 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:38.039 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:38.040 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:38.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:38.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:38.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:38.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:38.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:38.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:38.047 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:38.048 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:38.049 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.050 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.052 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.054 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.055 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:38.056 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:38.057 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:38.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:38.060 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:38.061 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.065 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.066 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.067 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:38.067 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:38.068 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:38.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:38.070 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:38.072 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:38.073 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:38.074 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.075 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.077 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.079 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.080 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:38.081 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:38.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:38.083 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:38.085 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:38.086 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:38.087 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:38.088 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:38.089 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:38.091 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:38.092 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:38.093 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:38.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:38.096 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:38.097 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:38.098 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:38.100 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:38.101 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:38.102 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:38.102 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:38.104 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:38.105 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:38.107 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:38.108 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:38.109 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:38.110 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:38.111 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:38.113 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:38.113 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:38.114 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:38.115 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:38.115 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:38.116 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:38.117 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:38.118 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:38.119 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:38.119 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:38.120 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:38.121 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:38.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:38.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:38.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:38.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:38.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:38.127 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:38.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:38.129 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:38.131 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.132 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.133 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.137 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:38.138 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:38.139 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:38.141 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:38.142 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:38.143 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:38.143 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:38.145 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:38.146 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:38.147 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:38.149 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.150 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.152 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.154 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:38.156 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:38.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:38.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:38.160 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:38.161 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:38.161 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:38.162 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:38.163 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:38.164 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:38.166 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:38.167 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:38.168 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.169 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.173 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.174 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:38.176 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:38.177 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:38.178 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:38.179 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:38.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:38.181 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:38.182 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:38.184 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:38.185 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:38.186 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:38.187 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:38.189 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:38.190 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:38.191 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:38.192 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:38.194 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:38.195 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:38.196 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:38.197 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:38.199 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:38.200 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:38.201 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:38.202 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:38.204 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:38.205 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:38.206 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:38.208 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:38.209 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:38.210 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:38.211 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:38.212 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:38.214 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:38.214 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:38.215 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:38.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:38.218 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:38.219 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:38.221 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:38.222 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:38.223 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:38.224 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:38.226 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:38.227 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:38.228 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:38.229 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:38.231 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:38.232 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:38.233 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:38.233 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:38.234 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:38.235 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:38.236 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:38.236 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:38.237 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:38.238 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:38.238 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:38.239 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:38.240 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:38.244 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:38.245 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testEqualsNaN iteration 0
10:54:38.245 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=2573)
10:54:38.246 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:38.246 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=2571)
10:54:38.246 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:38.246 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:38.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:38.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:38.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:38.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:38.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:38.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:38.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:38.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:38.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:38.252 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:38.253 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:38.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:38.256 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:38.257 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:38.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:38.259 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:38.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:38.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:38.262 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:38.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:38.265 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:38.266 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:38.267 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:38.269 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:38.270 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:38.271 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:38.272 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:38.273 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:38.274 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:38.276 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:38.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:38.278 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:38.278 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:38.279 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:38.280 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:38.280 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:38.281 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:38.282 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:38.283 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:38.283 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:38.284 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:38.285 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:38.286 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:38.286 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:38.286 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:38.286 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:38.286 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:38.291 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:38.292 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:38.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:38.294 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.296 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.297 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.298 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.299 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.300 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:38.301 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:38.308 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:38.310 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:38.311 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:38.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.314 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.315 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:38.319 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:38.320 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:38.321 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:38.322 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:38.323 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:38.325 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:38.326 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.327 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.328 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.330 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.331 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.331 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:38.332 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:38.334 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:38.335 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:38.336 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:38.337 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:38.339 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:38.340 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:38.341 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:38.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:38.344 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:38.345 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:38.346 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:38.348 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:38.349 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:38.350 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:38.351 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:38.352 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:38.353 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:38.354 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:38.355 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:38.357 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:38.358 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:38.359 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:38.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:38.362 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:38.363 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:38.364 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:38.365 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:38.365 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:38.366 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:38.367 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:38.367 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:38.368 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:38.369 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:38.370 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:38.370 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:38.371 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:38.372 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:38.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:38.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:38.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:38.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:38.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:38.378 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:38.379 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:38.380 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:38.382 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.383 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.384 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.387 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.388 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:38.389 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:38.390 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:38.392 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:38.393 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:38.394 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:38.394 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:38.396 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:38.397 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:38.399 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:38.400 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.402 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.404 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.405 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:38.407 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:38.409 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:38.410 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:38.411 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:38.412 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:38.413 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:38.413 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:38.414 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:38.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:38.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:38.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:38.420 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.421 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.422 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.423 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:38.427 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:38.428 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:38.429 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:38.431 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:38.431 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:38.432 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:38.434 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:38.435 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:38.436 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:38.437 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:38.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:38.440 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:38.441 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:38.442 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:38.444 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:38.445 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:38.446 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:38.447 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:38.449 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:38.450 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:38.451 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:38.453 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:38.454 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:38.455 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:38.456 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:38.458 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:38.459 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:38.460 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:38.461 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:38.463 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:38.464 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:38.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:38.466 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:38.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:38.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:38.469 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:38.471 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:38.472 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:38.473 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:38.474 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:38.476 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:38.477 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:38.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:38.479 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:38.481 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:38.482 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:38.483 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:38.484 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:38.485 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:38.485 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:38.486 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:38.487 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:38.487 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:38.488 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:38.489 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:38.489 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:38.490 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:38.491 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:38.492 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:38.493 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testEqualsNaN iteration 1
10:54:38.493 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=367)
10:54:38.493 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:38.493 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=2573)
10:54:38.494 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:38.494 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:38.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:38.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:38.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:38.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:38.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:38.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:38.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:38.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:38.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:38.500 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:38.501 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:38.503 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:38.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:38.506 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:38.507 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:38.508 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:38.508 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:38.510 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:38.511 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:38.513 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:38.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:38.515 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:38.517 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:38.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:38.519 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:38.521 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:38.521 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:38.522 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:38.524 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:38.525 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:38.526 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:38.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:38.528 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:38.528 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:38.529 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:38.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:38.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:38.531 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:38.532 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:38.533 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:38.533 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:38.534 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:38.535 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:38.535 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:38.535 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:38.535 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:38.535 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:38.540 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:38.542 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:38.543 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:38.544 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.546 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.547 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.548 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.549 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:38.551 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:38.553 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:38.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:38.555 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:38.556 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.560 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:38.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:38.564 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:38.565 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:38.566 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:38.568 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:38.569 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:38.570 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.572 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.573 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.574 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:38.577 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:38.579 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:38.580 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:38.581 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:38.583 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:38.584 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:38.585 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:38.586 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:38.588 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:38.589 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:38.591 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:38.592 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:38.593 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:38.595 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:38.596 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:38.597 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:38.598 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:38.599 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:38.600 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:38.602 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:38.609 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:38.610 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:38.611 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:38.613 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:38.614 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:38.615 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:38.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:38.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:38.618 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:38.619 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:38.619 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:38.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:38.621 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:38.622 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:38.622 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:38.623 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:38.624 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:38.625 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:38.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:38.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:38.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:38.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:38.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:38.631 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:38.632 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:38.633 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:38.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.636 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.639 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.640 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.641 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:38.642 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:38.644 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:38.645 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:38.646 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:38.647 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:38.648 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:38.649 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:38.651 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:38.652 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:38.653 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.655 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.656 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.657 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.658 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.660 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:38.661 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:38.662 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:38.664 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:38.665 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:38.666 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:38.667 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:38.667 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:38.668 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:38.670 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:38.671 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:38.672 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:38.674 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.675 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.676 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.680 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:38.681 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:38.683 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:38.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:38.685 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:38.686 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:38.686 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:38.688 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:38.689 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:38.690 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:38.692 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:38.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:38.694 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:38.695 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:38.697 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:38.698 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:38.699 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:38.700 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:38.701 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:38.703 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:38.704 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:38.705 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:38.707 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:38.708 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:38.709 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:38.710 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:38.712 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:38.713 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:38.714 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:38.715 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:38.716 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:38.718 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:38.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:38.720 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:38.720 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:38.722 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:38.723 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:38.725 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:38.726 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:38.727 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:38.728 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:38.730 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:38.731 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:38.732 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:38.733 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:38.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:38.736 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:38.737 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:38.738 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:38.739 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:38.739 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:38.740 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:38.741 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:38.742 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:38.742 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:38.743 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:38.744 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:38.744 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:38.745 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:38.747 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:38.747 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testEqualsNaN iteration 2
10:54:38.748 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=367)
10:54:38.748 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:38.748 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=2571)
10:54:38.748 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:38.748 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:38.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:38.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:38.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:38.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:38.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:38.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:38.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:38.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:38.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:38.754 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:38.755 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:38.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:38.758 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:38.759 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:38.761 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:38.761 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:38.762 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:38.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:38.765 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:38.766 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:38.768 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:38.769 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:38.770 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:38.772 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:38.773 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:38.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:38.775 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:38.776 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:38.778 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:38.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:38.780 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:38.781 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:38.782 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:38.782 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:38.783 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:38.784 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:38.784 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:38.785 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:38.786 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:38.787 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:38.787 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:38.788 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:38.789 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:38.789 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:38.789 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:38.789 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:38.789 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:38.794 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:38.796 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:38.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:38.798 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.800 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.801 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.804 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:38.805 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:38.807 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:38.808 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:38.809 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:38.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.812 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.813 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.814 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:38.817 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:38.818 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:38.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:38.820 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:38.822 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:38.823 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:38.824 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.825 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.827 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.828 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.829 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.830 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:38.831 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:38.832 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:38.834 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:38.835 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:38.836 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:38.837 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:38.839 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:38.840 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:38.841 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:38.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:38.844 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:38.845 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:38.846 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:38.848 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:38.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:38.850 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:38.851 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:38.852 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:38.853 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:38.854 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:38.856 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:38.857 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:38.858 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:38.859 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:38.861 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:38.862 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:38.863 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:38.864 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:38.864 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:38.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:38.866 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:38.866 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:38.867 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:38.868 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:38.868 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:38.869 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:38.870 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:38.870 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:38.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:38.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:38.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:38.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:38.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:38.877 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:38.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:38.879 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:38.880 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.882 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.883 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.884 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.885 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.887 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:38.888 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:38.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:38.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:38.892 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:38.893 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:38.893 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:38.895 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:38.896 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:38.897 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:38.899 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.900 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.901 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.903 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.904 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:38.912 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:38.914 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:38.915 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:38.916 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:38.917 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:38.918 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:38.918 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:38.919 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:38.921 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:38.922 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:38.923 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:38.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:38.926 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:38.927 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:38.928 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:38.930 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:38.931 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:38.932 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:38.933 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:38.935 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:38.936 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:38.937 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:38.938 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:38.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:38.940 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:38.942 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:38.943 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:38.944 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:38.946 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:38.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:38.948 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:38.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:38.951 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:38.952 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:38.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:38.954 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:38.956 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:38.957 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:38.958 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:38.960 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:38.961 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:38.962 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:38.963 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:38.965 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:38.966 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:38.967 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:38.968 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:38.970 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:38.971 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:38.972 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:38.972 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:38.974 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:38.975 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:38.976 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:38.978 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:38.979 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:38.980 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:38.981 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:38.983 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:38.984 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:38.985 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:38.986 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:38.987 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:38.989 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:38.989 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:38.990 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:38.991 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:38.991 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:38.992 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:38.993 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:38.993 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:38.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:38.995 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:38.995 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:38.996 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:38.999 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:39.000 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexFormatTest#testParseNegativeReal iteration 0
10:54:39.001 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=2577)
10:54:39.001 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:39.001 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=2575)
10:54:39.001 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:39.001 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:39.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:39.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:39.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:39.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:39.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:39.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:39.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:39.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:39.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:39.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:39.008 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:39.009 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:39.011 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:39.012 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:39.013 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:39.014 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:39.015 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:39.016 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:39.018 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:39.019 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:39.021 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:39.022 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:39.023 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:39.025 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:39.026 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:39.027 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:39.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:39.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:39.030 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:39.031 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:39.032 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:39.033 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:39.034 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:39.035 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:39.035 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:39.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:39.037 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:39.037 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:39.038 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:39.039 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:39.040 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:39.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:39.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:39.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:39.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:39.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:39.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:39.046 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:39.047 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:39.048 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:39.050 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.051 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.052 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.054 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.055 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:39.056 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:39.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:39.059 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:39.060 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:39.061 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.064 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.065 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.066 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.067 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:39.068 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:39.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:39.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:39.071 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:39.072 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:39.073 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:39.074 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.077 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.079 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.080 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:39.081 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:39.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:39.084 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:39.085 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:39.086 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:39.087 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:39.089 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:39.090 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:39.091 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:39.093 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:39.094 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:39.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:39.096 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:39.098 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:39.099 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:39.100 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:39.101 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:39.102 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:39.103 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:39.104 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:39.106 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:39.107 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:39.108 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:39.109 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:39.110 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:39.112 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:39.113 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:39.114 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:39.114 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:39.115 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:39.116 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:39.116 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:39.117 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:39.118 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:39.118 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:39.119 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:39.120 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:39.121 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:39.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:39.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:39.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:39.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:39.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:39.126 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:39.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:39.129 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:39.130 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.131 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.133 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.135 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:39.137 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:39.139 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:39.140 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:39.141 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:39.142 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:39.142 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:39.144 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:39.145 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:39.147 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:39.148 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.149 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.150 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.153 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.154 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:39.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:39.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:39.158 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:39.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:39.160 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:39.161 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:39.161 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:39.162 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:39.164 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:39.165 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:39.166 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:39.167 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.169 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.174 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:39.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:39.176 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:39.177 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:39.179 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:39.179 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:39.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:39.182 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:39.183 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:39.184 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:39.185 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:39.187 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:39.188 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:39.189 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:39.190 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:39.192 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:39.193 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:39.194 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:39.195 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:39.196 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:39.198 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:39.199 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:39.200 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:39.202 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:39.203 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:39.204 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:39.211 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:39.213 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:39.214 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:39.215 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:39.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:39.218 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:39.219 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:39.220 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:39.221 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:39.222 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:39.224 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:39.225 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:39.226 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:39.228 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:39.229 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:39.230 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:39.232 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:39.233 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:39.234 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:39.235 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:39.237 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:39.238 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:39.239 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:39.240 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:39.240 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:39.241 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:39.242 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:39.243 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:39.244 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:39.244 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:39.245 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:39.246 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:39.246 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:39.251 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:39.252 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testScalarMultiply iteration 0
10:54:39.252 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=2731)
10:54:39.252 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:39.252 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=2729)
10:54:39.252 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:39.253 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:39.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:39.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:39.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:39.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:39.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:39.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:39.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:39.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:39.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:39.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:39.259 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:39.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:39.262 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:39.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:39.264 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:39.265 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:39.266 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:39.267 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:39.269 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:39.270 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:39.271 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:39.273 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:39.274 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:39.276 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:39.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:39.278 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:39.279 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:39.280 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:39.281 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:39.282 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:39.284 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:39.284 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:39.285 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:39.286 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:39.287 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:39.287 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:39.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:39.289 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:39.289 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:39.290 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:39.291 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:39.291 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:39.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:39.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:39.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:39.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:39.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:39.297 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:39.299 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:39.300 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:39.301 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.302 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.304 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.305 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.306 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.307 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:39.307 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:39.309 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:39.310 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:39.311 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:39.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.314 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.315 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.319 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:39.320 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:39.320 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:39.321 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:39.323 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:39.324 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:39.326 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:39.327 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.328 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.329 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.331 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.332 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.333 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:39.334 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:39.335 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:39.337 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:39.338 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:39.339 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:39.340 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:39.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:39.343 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:39.344 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:39.346 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:39.347 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:39.349 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:39.350 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:39.351 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:39.352 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:39.354 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:39.355 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:39.356 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:39.357 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:39.358 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:39.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:39.361 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:39.362 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:39.364 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:39.365 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:39.366 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:39.367 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:39.368 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:39.369 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:39.369 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:39.370 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:39.371 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:39.372 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:39.372 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:39.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:39.374 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:39.374 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:39.375 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:39.376 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:39.376 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:39.377 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:39.377 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:39.377 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:39.381 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:39.382 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:39.383 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:39.384 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.386 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.387 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.388 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.389 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.390 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:39.392 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:39.393 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:39.394 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:39.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:39.396 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:39.397 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:39.399 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:39.400 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:39.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:39.402 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.404 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.405 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.407 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.409 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:39.410 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:39.411 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:39.412 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:39.414 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:39.414 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:39.415 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:39.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:39.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:39.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:39.419 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:39.421 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:39.422 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.423 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.424 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.427 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.428 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:39.429 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:39.430 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:39.432 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:39.433 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:39.434 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:39.434 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:39.436 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:39.437 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:39.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:39.440 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:39.441 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:39.442 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:39.443 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:39.445 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:39.446 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:39.447 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:39.448 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:39.450 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:39.451 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:39.459 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:39.460 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:39.461 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:39.462 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:39.464 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:39.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:39.466 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:39.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:39.469 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:39.470 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:39.471 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:39.472 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:39.474 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:39.474 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:39.475 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:39.477 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:39.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:39.479 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:39.480 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:39.482 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:39.483 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:39.484 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:39.485 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:39.487 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:39.488 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:39.489 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:39.490 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:39.492 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:39.492 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:39.493 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:39.494 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:39.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:39.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:39.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:39.497 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:39.498 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:39.498 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:39.499 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:39.500 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:39.501 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:39.502 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testScalarMultiply iteration 1
10:54:39.502 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=2883)
10:54:39.503 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:39.503 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=2882)
10:54:39.503 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:39.503 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:39.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:39.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:39.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:39.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:39.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:39.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:39.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:39.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:39.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:39.509 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:39.510 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:39.512 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:39.513 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:39.515 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:39.516 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:39.517 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:39.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:39.519 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:39.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:39.522 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:39.523 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:39.525 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:39.526 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:39.528 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:39.529 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:39.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:39.531 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:39.531 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:39.533 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:39.534 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:39.535 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:39.536 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:39.537 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:39.537 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:39.538 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:39.539 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:39.540 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:39.540 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:39.541 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:39.542 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:39.542 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:39.543 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:39.544 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:39.544 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:39.544 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:39.544 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:39.544 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:39.548 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:39.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:39.551 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:39.552 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.553 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.556 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.557 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:39.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:39.560 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:39.561 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:39.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:39.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.565 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.566 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.567 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.568 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.569 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:39.570 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:39.570 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:39.571 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:39.573 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:39.574 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:39.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:39.577 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.578 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.579 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.580 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.582 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.582 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:39.583 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:39.585 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:39.586 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:39.587 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:39.588 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:39.590 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:39.591 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:39.592 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:39.594 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:39.595 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:39.596 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:39.598 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:39.599 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:39.600 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:39.601 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:39.603 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:39.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:39.605 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:39.605 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:39.607 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:39.608 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:39.610 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:39.611 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:39.612 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:39.613 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:39.615 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:39.616 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:39.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:39.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:39.618 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:39.619 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:39.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:39.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:39.621 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:39.622 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:39.623 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:39.623 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:39.624 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:39.625 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:39.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:39.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:39.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:39.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:39.630 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:39.632 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:39.633 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:39.634 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.636 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.638 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.639 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.641 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:39.642 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:39.643 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:39.645 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:39.646 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:39.647 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:39.647 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:39.649 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:39.650 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:39.652 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:39.653 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.654 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.656 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.657 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.658 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.659 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:39.661 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:39.662 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:39.663 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:39.665 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:39.665 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:39.666 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:39.667 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:39.668 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:39.669 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:39.671 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:39.672 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:39.673 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.674 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.676 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.678 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.680 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:39.681 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:39.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:39.683 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:39.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:39.685 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:39.686 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:39.688 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:39.689 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:39.690 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:39.691 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:39.692 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:39.694 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:39.700 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:39.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:39.703 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:39.704 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:39.706 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:39.707 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:39.708 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:39.710 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:39.711 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:39.712 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:39.713 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:39.715 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:39.716 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:39.717 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:39.718 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:39.720 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:39.721 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:39.722 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:39.723 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:39.724 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:39.725 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:39.726 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:39.728 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:39.729 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:39.730 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:39.731 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:39.733 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:39.734 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:39.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:39.736 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:39.737 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:39.739 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:39.740 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:39.741 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:39.742 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:39.743 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:39.744 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:39.744 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:39.745 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:39.746 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:39.747 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:39.747 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:39.748 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:39.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:39.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:39.750 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:39.754 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:39.755 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testScalarAddInf iteration 0
10:54:39.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=3037)
10:54:39.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:39.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=3035)
10:54:39.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:39.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:39.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:39.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:39.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:39.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:39.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:39.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:39.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:39.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:39.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:39.762 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:39.763 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:39.765 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:39.766 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:39.767 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:39.769 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:39.769 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:39.770 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:39.772 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:39.773 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:39.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:39.776 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:39.777 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:39.778 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:39.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:39.781 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:39.782 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:39.783 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:39.783 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:39.785 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:39.786 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:39.788 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:39.788 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:39.789 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:39.790 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:39.790 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:39.791 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:39.792 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:39.792 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:39.793 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:39.794 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:39.795 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:39.795 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:39.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:39.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:39.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:39.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:39.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:39.801 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:39.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:39.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:39.804 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.806 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.807 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.808 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.809 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:39.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:39.812 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:39.814 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:39.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:39.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.817 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.820 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.821 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.822 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:39.823 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:39.823 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:39.824 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:39.826 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:39.827 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:39.828 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:39.830 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.831 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.832 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.833 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.835 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.835 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:39.836 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:39.838 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:39.839 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:39.840 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:39.841 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:39.842 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:39.844 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:39.845 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:39.846 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:39.848 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:39.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:39.850 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:39.851 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:39.853 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:39.854 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:39.855 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:39.856 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:39.857 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:39.858 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:39.860 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:39.861 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:39.862 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:39.863 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:39.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:39.866 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:39.867 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:39.868 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:39.869 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:39.870 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:39.871 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:39.871 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:39.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:39.873 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:39.874 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:39.874 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:39.875 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:39.876 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:39.876 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:39.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:39.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:39.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:39.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:39.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:39.883 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:39.884 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:39.885 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:39.886 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.888 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.890 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.893 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:39.894 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:39.895 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:39.896 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:39.898 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:39.898 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:39.899 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:39.901 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:39.902 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:39.903 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:39.905 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.906 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.907 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.908 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.910 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:39.912 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:39.914 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:39.915 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:39.916 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:39.917 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:39.918 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:39.918 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:39.919 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:39.921 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:39.922 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:39.923 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:39.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:39.926 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:39.927 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:39.928 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:39.930 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:39.931 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:39.932 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:39.933 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:39.935 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:39.936 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:39.937 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:39.937 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:39.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:39.940 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:39.941 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:39.943 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:39.944 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:39.945 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:39.946 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:39.948 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:39.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:39.950 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:39.951 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:39.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:39.954 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:39.955 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:39.957 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:39.958 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:39.959 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:39.960 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:39.962 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:39.963 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:39.964 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:39.965 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:39.967 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:39.968 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:39.969 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:39.970 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:39.971 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:39.972 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:39.973 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:39.975 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:39.976 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:39.977 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:39.978 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:39.980 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:39.981 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:39.982 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:39.983 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:39.985 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:39.986 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:39.987 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:39.988 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:39.989 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:39.990 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:39.991 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:39.991 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:39.992 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:39.993 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:39.993 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:39.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:40.000 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:40.001 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:40.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:40.003 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:40.004 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testScalarAddInf iteration 1
10:54:40.005 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=3141)
10:54:40.005 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:40.005 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=3140)
10:54:40.005 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:40.005 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:40.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:40.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:40.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:40.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:40.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:40.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:40.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:40.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:40.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:40.011 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:40.012 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:40.014 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:40.015 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:40.016 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:40.018 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:40.018 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:40.019 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:40.021 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:40.022 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:40.023 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:40.025 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:40.026 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:40.027 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:40.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:40.030 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:40.031 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:40.032 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:40.033 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:40.034 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:40.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:40.037 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:40.037 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:40.038 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:40.039 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:40.040 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:40.040 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:40.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:40.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:40.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:40.043 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:40.044 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:40.044 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:40.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:40.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:40.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:40.046 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:40.046 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:40.050 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:40.051 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:40.052 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:40.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.055 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.056 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.057 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.059 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:40.060 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:40.061 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:40.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:40.064 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:40.065 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.067 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.068 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.070 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.071 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:40.072 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:40.073 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:40.073 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:40.075 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:40.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:40.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:40.079 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.080 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.083 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.084 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.085 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:40.086 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:40.087 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:40.089 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:40.090 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:40.091 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:40.092 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:40.094 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:40.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:40.096 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:40.098 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:40.099 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:40.101 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:40.102 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:40.103 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:40.104 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:40.106 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:40.107 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:40.108 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:40.108 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:40.110 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:40.111 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:40.112 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:40.114 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:40.115 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:40.116 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:40.118 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:40.119 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:40.120 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:40.120 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:40.121 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:40.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:40.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:40.123 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:40.124 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:40.125 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:40.125 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:40.126 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:40.127 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:40.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:40.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:40.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:40.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:40.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:40.133 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:40.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:40.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:40.137 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.138 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.139 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.141 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.142 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.143 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:40.144 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:40.146 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:40.147 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:40.148 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:40.149 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:40.150 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:40.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:40.153 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:40.154 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:40.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.158 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.160 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.162 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:40.163 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:40.164 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:40.165 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:40.167 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:40.168 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:40.168 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:40.169 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:40.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:40.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:40.173 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:40.174 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:40.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.177 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.178 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.179 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.181 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.182 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:40.183 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:40.184 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:40.186 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:40.187 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:40.188 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:40.189 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:40.190 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:40.192 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:40.193 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:40.194 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:40.195 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:40.197 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:40.198 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:40.199 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:40.200 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:40.202 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:40.203 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:40.204 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:40.205 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:40.207 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:40.208 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:40.210 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:40.211 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:40.212 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:40.214 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:40.215 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:40.216 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:40.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:40.219 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:40.220 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:40.221 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:40.222 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:40.223 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:40.224 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:40.225 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:40.227 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:40.228 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:40.229 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:40.230 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:40.232 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:40.233 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:40.234 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:40.235 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:40.237 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:40.238 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:40.239 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:40.241 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:40.241 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:40.242 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:40.248 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:40.249 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:40.250 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:40.251 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:40.251 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:40.252 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:40.253 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:40.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:40.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:40.257 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:40.258 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseNan iteration 0
10:54:40.259 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=3145)
10:54:40.259 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:40.259 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=3143)
10:54:40.259 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:40.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:40.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:40.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:40.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:40.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:40.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:40.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:40.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:40.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:40.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:40.265 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:40.266 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:40.268 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:40.269 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:40.270 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:40.272 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:40.272 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:40.273 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:40.275 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:40.276 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:40.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:40.279 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:40.280 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:40.281 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:40.283 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:40.284 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:40.285 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:40.286 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:40.287 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:40.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:40.290 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:40.291 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:40.292 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:40.292 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:40.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:40.294 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:40.294 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:40.295 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:40.296 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:40.296 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:40.297 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:40.298 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:40.298 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:40.300 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:40.300 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:40.300 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:40.300 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:40.300 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:40.305 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:40.306 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:40.307 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:40.308 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.310 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.311 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.312 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.314 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:40.315 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:40.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:40.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:40.319 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:40.320 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.321 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.323 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.324 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.325 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.326 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:40.327 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:40.328 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:40.328 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:40.330 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:40.331 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:40.332 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:40.333 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.335 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.336 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.337 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.338 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.339 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:40.340 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:40.341 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:40.343 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:40.344 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:40.345 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:40.346 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:40.348 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:40.349 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:40.350 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:40.351 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:40.353 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:40.354 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:40.355 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:40.367 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:40.368 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:40.370 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:40.371 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:40.372 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:40.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:40.374 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:40.375 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:40.377 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:40.378 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:40.379 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:40.380 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:40.384 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:40.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:40.386 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:40.387 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:40.387 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:40.388 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:40.389 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:40.390 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:40.391 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:40.391 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:40.392 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:40.393 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:40.394 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:40.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:40.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:40.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:40.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:40.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:40.400 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:40.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:40.403 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:40.404 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.405 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.408 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.409 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.410 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:40.412 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:40.413 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:40.414 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:40.415 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:40.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:40.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:40.419 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:40.420 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:40.421 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:40.422 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.424 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.427 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.429 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:40.430 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:40.431 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:40.432 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:40.434 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:40.434 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:40.435 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:40.436 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:40.437 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:40.438 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:40.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:40.441 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:40.442 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.443 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.445 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.446 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.447 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.448 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:40.450 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:40.451 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:40.452 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:40.453 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:40.454 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:40.455 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:40.457 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:40.458 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:40.459 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:40.460 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:40.462 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:40.463 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:40.464 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:40.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:40.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:40.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:40.469 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:40.470 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:40.472 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:40.473 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:40.474 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:40.476 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:40.477 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:40.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:40.479 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:40.481 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:40.482 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:40.483 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:40.484 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:40.486 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:40.487 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:40.488 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:40.489 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:40.490 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:40.491 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:40.492 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:40.494 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:40.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:40.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:40.497 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:40.499 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:40.500 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:40.506 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:40.508 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:40.509 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:40.511 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:40.512 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:40.513 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:40.513 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:40.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:40.515 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:40.515 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:40.516 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:40.517 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:40.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:40.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:40.519 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:40.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:40.524 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:40.525 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testReciprocalImaginary iteration 0
10:54:40.525 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=3149)
10:54:40.525 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:40.525 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=3147)
10:54:40.526 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:40.526 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:40.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:40.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:40.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:40.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:40.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:40.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:40.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:40.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:40.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:40.532 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:40.533 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:40.534 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:40.536 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:40.537 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:40.538 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:40.539 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:40.540 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:40.541 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:40.543 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:40.544 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:40.545 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:40.547 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:40.548 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:40.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:40.551 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:40.552 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:40.553 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:40.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:40.555 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:40.557 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:40.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:40.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:40.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:40.560 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:40.561 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:40.561 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:40.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:40.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:40.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:40.564 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:40.565 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:40.566 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:40.567 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:40.567 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:40.567 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:40.567 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:40.567 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:40.571 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:40.572 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:40.573 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:40.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.577 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.578 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.579 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.580 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:40.581 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:40.582 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:40.584 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:40.585 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:40.586 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.587 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.588 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.590 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.591 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.592 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:40.592 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:40.593 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:40.594 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:40.595 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:40.597 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:40.598 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:40.599 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.600 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.602 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.603 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.605 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:40.606 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:40.607 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:40.609 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:40.610 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:40.611 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:40.612 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:40.614 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:40.615 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:40.616 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:40.618 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:40.619 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:40.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:40.621 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:40.623 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:40.624 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:40.625 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:40.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:40.627 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:40.628 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:40.630 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:40.631 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:40.632 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:40.633 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:40.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:40.636 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:40.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:40.638 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:40.639 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:40.640 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:40.641 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:40.641 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:40.642 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:40.643 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:40.644 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:40.644 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:40.645 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:40.646 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:40.646 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:40.648 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:40.648 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:40.648 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:40.648 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:40.648 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:40.653 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:40.654 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:40.656 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:40.657 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.658 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.659 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.661 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.662 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.663 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:40.664 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:40.666 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:40.667 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:40.668 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:40.669 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:40.670 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:40.671 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:40.673 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:40.674 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:40.675 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.678 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.680 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:40.683 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:40.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:40.685 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:40.687 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:40.687 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:40.688 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:40.689 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:40.690 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:40.691 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:40.692 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:40.694 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:40.695 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.696 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.697 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.699 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.700 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.701 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:40.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:40.704 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:40.705 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:40.706 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:40.707 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:40.707 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:40.709 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:40.710 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:40.712 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:40.713 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:40.714 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:40.715 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:40.717 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:40.718 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:40.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:40.721 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:40.722 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:40.723 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:40.724 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:40.726 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:40.727 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:40.729 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:40.730 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:40.731 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:40.732 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:40.734 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:40.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:40.736 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:40.737 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:40.739 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:40.740 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:40.741 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:40.742 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:40.743 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:40.744 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:40.745 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:40.752 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:40.754 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:40.755 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:40.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:40.758 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:40.759 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:40.760 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:40.761 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:40.763 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:40.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:40.765 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:40.766 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:40.766 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:40.767 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:40.768 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:40.769 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:40.769 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:40.770 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:40.771 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:40.771 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:40.772 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:40.773 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:40.776 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:40.777 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexFormatTest#testParseZeroReal iteration 0
10:54:40.777 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=3301)
10:54:40.777 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:40.777 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=3299)
10:54:40.778 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:40.778 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:40.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:40.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:40.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:40.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:40.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:40.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:40.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:40.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:40.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:40.783 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:40.785 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:40.786 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:40.788 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:40.789 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:40.790 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:40.791 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:40.791 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:40.793 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:40.794 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:40.796 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:40.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:40.798 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:40.800 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:40.801 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:40.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:40.804 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:40.805 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:40.805 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:40.807 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:40.808 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:40.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:40.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:40.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:40.812 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:40.813 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:40.814 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:40.814 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:40.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:40.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:40.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:40.817 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:40.818 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:40.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:40.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:40.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:40.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:40.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:40.824 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:40.825 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:40.826 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:40.828 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.829 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.830 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.831 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.833 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.833 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:40.834 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:40.836 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:40.837 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:40.838 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:40.839 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.840 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.842 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.844 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.845 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:40.846 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:40.846 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:40.847 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:40.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:40.850 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:40.851 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:40.853 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.854 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.855 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.856 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.858 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.858 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:40.859 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:40.861 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:40.862 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:40.863 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:40.864 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:40.866 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:40.867 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:40.868 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:40.869 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:40.871 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:40.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:40.873 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:40.875 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:40.876 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:40.877 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:40.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:40.880 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:40.880 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:40.881 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:40.883 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:40.884 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:40.885 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:40.886 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:40.888 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:40.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:40.890 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:40.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:40.892 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:40.893 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:40.893 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:40.894 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:40.895 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:40.896 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:40.896 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:40.897 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:40.898 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:40.899 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:40.899 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:40.901 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:40.901 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:40.901 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:40.901 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:40.901 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:40.905 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:40.906 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:40.908 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:40.909 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.910 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.912 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.914 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.915 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:40.916 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:40.917 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:40.919 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:40.920 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:40.921 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:40.921 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:40.923 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:40.924 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:40.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:40.927 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.928 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.929 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.930 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.931 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.933 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:40.934 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:40.935 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:40.936 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:40.938 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:40.938 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:40.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:40.940 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:40.940 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:40.942 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:40.943 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:40.944 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:40.946 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:40.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:40.948 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:40.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:40.951 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:40.952 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:40.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:40.954 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:40.955 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:40.957 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:40.957 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:40.958 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:40.960 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:40.961 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:40.962 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:40.963 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:40.965 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:40.966 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:40.967 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:40.968 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:40.970 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:40.971 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:40.972 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:40.973 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:40.975 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:40.976 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:40.977 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:40.979 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:40.980 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:40.981 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:40.982 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:40.983 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:40.985 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:40.986 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:40.987 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:40.988 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:40.995 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:40.997 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:40.998 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:40.998 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:41.000 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:41.001 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:41.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:41.004 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:41.005 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:41.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:41.007 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:41.009 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:41.010 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:41.011 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:41.012 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:41.013 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:41.015 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:41.015 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:41.016 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:41.017 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:41.017 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:41.018 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:41.019 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:41.019 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:41.020 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:41.021 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:41.022 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:41.022 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:41.026 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:41.027 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testScalarAdd iteration 0
10:54:41.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=3453)
10:54:41.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:41.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=3451)
10:54:41.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:41.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:41.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:41.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:41.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:41.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:41.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:41.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:41.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:41.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:41.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:41.034 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:41.035 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:41.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:41.038 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:41.039 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:41.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:41.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:41.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:41.044 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:41.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:41.046 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:41.048 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:41.049 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:41.050 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:41.052 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:41.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:41.054 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:41.055 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:41.055 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:41.057 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:41.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:41.060 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:41.060 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:41.061 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:41.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:41.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:41.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:41.064 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:41.065 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:41.065 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:41.066 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:41.067 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:41.068 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:41.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:41.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:41.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:41.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:41.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:41.073 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:41.075 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:41.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:41.077 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.080 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.081 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.083 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:41.084 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:41.085 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:41.087 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:41.088 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:41.089 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.090 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.092 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.093 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.094 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:41.096 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:41.097 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:41.097 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:41.099 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:41.100 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:41.101 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:41.103 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.104 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.105 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.106 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.108 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.108 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:41.109 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:41.111 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:41.112 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:41.113 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:41.115 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:41.116 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:41.117 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:41.118 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:41.120 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:41.121 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:41.123 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:41.124 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:41.125 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:41.126 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:41.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:41.129 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:41.130 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:41.131 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:41.132 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:41.133 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:41.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:41.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:41.137 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:41.138 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:41.139 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:41.141 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:41.142 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:41.142 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:41.143 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:41.144 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:41.144 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:41.145 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:41.146 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:41.147 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:41.147 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:41.148 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:41.149 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:41.149 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:41.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:41.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:41.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:41.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:41.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:41.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:41.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:41.158 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:41.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.160 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.162 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.163 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.164 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.166 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:41.167 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:41.168 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:41.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:41.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:41.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:41.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:41.174 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:41.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:41.176 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:41.177 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.179 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.181 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.182 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.184 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:41.185 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:41.186 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:41.187 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:41.189 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:41.189 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:41.190 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:41.191 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:41.191 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:41.193 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:41.194 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:41.196 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:41.197 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.198 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.199 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.201 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.202 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.203 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:41.205 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:41.206 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:41.207 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:41.208 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:41.209 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:41.210 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:41.212 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:41.213 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:41.214 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:41.216 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:41.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:41.218 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:41.219 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:41.221 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:41.222 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:41.223 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:41.225 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:41.226 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:41.227 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:41.229 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:41.230 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:41.231 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:41.233 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:41.234 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:41.235 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:41.236 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:41.238 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:41.239 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:41.240 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:41.242 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:41.243 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:41.244 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:41.245 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:41.246 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:41.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:41.249 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:41.250 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:41.251 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:41.252 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:41.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:41.255 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:41.256 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:41.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:41.259 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:41.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:41.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:41.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:41.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:41.264 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:41.265 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:41.266 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:41.266 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:41.267 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:41.268 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:41.269 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:41.269 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:41.270 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:41.271 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:41.274 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:41.275 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseZeroImaginary iteration 0
10:54:41.275 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=3607)
10:54:41.275 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:41.276 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=3605)
10:54:41.276 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:41.276 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:41.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:41.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:41.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:41.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:41.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:41.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:41.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:41.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:41.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:41.281 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:41.283 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:41.284 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:41.285 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:41.287 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:41.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:41.289 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:41.289 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:41.291 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:41.292 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:41.294 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:41.301 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:41.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:41.304 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:41.305 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:41.307 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:41.308 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:41.309 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:41.309 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:41.311 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:41.312 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:41.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:41.314 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:41.315 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:41.315 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:41.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:41.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:41.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:41.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:41.319 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:41.320 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:41.320 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:41.321 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:41.322 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:41.322 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:41.322 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:41.322 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:41.322 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:41.327 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:41.328 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:41.329 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:41.330 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.332 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.333 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.334 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.335 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.336 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:41.337 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:41.339 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:41.340 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:41.341 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:41.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.344 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.345 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.346 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.348 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.348 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:41.349 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:41.350 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:41.351 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:41.352 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:41.353 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:41.355 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:41.356 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.357 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.359 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.361 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.362 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:41.363 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:41.364 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:41.366 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:41.367 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:41.368 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:41.369 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:41.371 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:41.372 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:41.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:41.375 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:41.376 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:41.378 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:41.379 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:41.380 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:41.381 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:41.383 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:41.384 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:41.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:41.386 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:41.387 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:41.388 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:41.390 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:41.391 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:41.392 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:41.394 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:41.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:41.396 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:41.397 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:41.398 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:41.398 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:41.399 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:41.400 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:41.400 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:41.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:41.402 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:41.403 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:41.403 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:41.404 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:41.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:41.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:41.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:41.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:41.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:41.410 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:41.412 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:41.413 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:41.414 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.419 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.421 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:41.422 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:41.423 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:41.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:41.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:41.427 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:41.427 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:41.429 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:41.430 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:41.432 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:41.433 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.434 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.435 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.437 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.438 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:41.440 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:41.442 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:41.443 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:41.444 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:41.445 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:41.446 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:41.446 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:41.447 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:41.449 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:41.450 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:41.451 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:41.452 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.453 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.455 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.456 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.457 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.459 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:41.460 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:41.461 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:41.462 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:41.463 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:41.464 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:41.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:41.466 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:41.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:41.469 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:41.470 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:41.471 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:41.472 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:41.474 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:41.475 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:41.476 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:41.477 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:41.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:41.480 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:41.481 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:41.482 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:41.484 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:41.485 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:41.486 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:41.487 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:41.488 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:41.490 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:41.491 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:41.492 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:41.493 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:41.494 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:41.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:41.497 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:41.498 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:41.498 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:41.500 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:41.501 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:41.503 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:41.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:41.505 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:41.506 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:41.508 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:41.509 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:41.510 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:41.511 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:41.513 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:41.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:41.515 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:41.516 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:41.517 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:41.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:41.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:41.519 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:41.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:41.521 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:41.521 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:41.522 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:41.523 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:41.524 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:41.527 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:41.528 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.FrenchComplexFormatTest#testParsePositiveInfinity iteration 0
10:54:41.529 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=3759)
10:54:41.529 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:41.529 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=3757)
10:54:41.529 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:41.529 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:41.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:41.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:41.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:41.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:41.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:41.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:41.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:41.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:41.531 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:41.535 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:41.536 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:41.538 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:41.539 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:41.541 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:41.542 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:41.543 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:41.544 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:41.545 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:41.546 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:41.548 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:41.549 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:41.551 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:41.552 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:41.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:41.555 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:41.556 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:41.557 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:41.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:41.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:41.561 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:41.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:41.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:41.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:41.564 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:41.565 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:41.566 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:41.566 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:41.567 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:41.568 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:41.569 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:41.569 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:41.570 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:41.572 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:41.572 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:41.572 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:41.572 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:41.572 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:41.577 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:41.578 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:41.579 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:41.581 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.582 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.583 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.585 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.586 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.587 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:41.587 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:41.589 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:41.590 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:41.592 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:41.593 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.594 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.595 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.597 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.598 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.599 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:41.600 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:41.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:41.621 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:41.623 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:41.624 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:41.625 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:41.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.628 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.629 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.630 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.632 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.632 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:41.633 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:41.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:41.636 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:41.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:41.638 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:41.640 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:41.641 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:41.642 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:41.644 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:41.645 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:41.646 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:41.648 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:41.649 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:41.650 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:41.652 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:41.653 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:41.654 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:41.655 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:41.656 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:41.657 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:41.658 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:41.660 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:41.661 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:41.662 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:41.664 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:41.665 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:41.666 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:41.667 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:41.668 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:41.668 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:41.669 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:41.670 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:41.671 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:41.671 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:41.672 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:41.673 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:41.673 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:41.674 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:41.676 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:41.676 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:41.676 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:41.676 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:41.676 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:41.680 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:41.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:41.683 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:41.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.686 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.687 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.688 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.689 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.691 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:41.692 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:41.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:41.694 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:41.696 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:41.696 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:41.697 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:41.699 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:41.700 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:41.701 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:41.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.703 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.705 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.706 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.707 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.709 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:41.710 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:41.711 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:41.712 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:41.714 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:41.714 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:41.715 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:41.716 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:41.717 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:41.718 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:41.720 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:41.721 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:41.722 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.724 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.725 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.726 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.728 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.729 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:41.730 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:41.731 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:41.733 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:41.734 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:41.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:41.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:41.737 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:41.738 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:41.740 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:41.741 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:41.743 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:41.744 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:41.745 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:41.747 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:41.748 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:41.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:41.750 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:41.752 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:41.753 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:41.755 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:41.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:41.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:41.758 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:41.760 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:41.761 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:41.762 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:41.763 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:41.765 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:41.766 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:41.767 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:41.768 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:41.770 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:41.771 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:41.771 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:41.773 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:41.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:41.776 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:41.777 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:41.778 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:41.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:41.781 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:41.782 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:41.783 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:41.785 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:41.786 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:41.787 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:41.788 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:41.789 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:41.790 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:41.791 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:41.791 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:41.792 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:41.793 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:41.794 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:41.794 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:41.795 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:41.796 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:41.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:41.801 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:41.801 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexFormatTest#testPaseNegativeInfinity iteration 0
10:54:41.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=3863)
10:54:41.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:41.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=3861)
10:54:41.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:41.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:41.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:41.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:41.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:41.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:41.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:41.804 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:41.804 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:41.804 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:41.804 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:41.808 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:41.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:41.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:41.812 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:41.814 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:41.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:41.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:41.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:41.818 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:41.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:41.820 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:41.822 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:41.823 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:41.824 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:41.826 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:41.827 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:41.828 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:41.829 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:41.830 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:41.831 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:41.833 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:41.834 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:41.835 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:41.835 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:41.836 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:41.837 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:41.837 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:41.838 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:41.839 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:41.839 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:41.840 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:41.841 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:41.841 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:41.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:41.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:41.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:41.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:41.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:41.847 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:41.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:41.850 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:41.851 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.852 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.854 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.855 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.856 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.857 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:41.858 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:41.859 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:41.861 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:41.862 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:41.863 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.873 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.875 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.876 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.877 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:41.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:41.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:41.879 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:41.881 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:41.882 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:41.883 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:41.885 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.886 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.887 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.890 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:41.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:41.893 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:41.894 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:41.895 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:41.897 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:41.898 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:41.899 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:41.900 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:41.902 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:41.903 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:41.905 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:41.906 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:41.907 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:41.908 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:41.910 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:41.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:41.912 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:41.913 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:41.914 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:41.915 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:41.917 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:41.918 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:41.919 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:41.920 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:41.922 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:41.923 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:41.924 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:41.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:41.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:41.926 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:41.927 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:41.928 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:41.928 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:41.929 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:41.930 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:41.930 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:41.931 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:41.932 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:41.933 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:41.933 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:41.933 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:41.933 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:41.933 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:41.938 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:41.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:41.940 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:41.942 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.943 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.944 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.945 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.948 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:41.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:41.951 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:41.952 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:41.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:41.954 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:41.955 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:41.956 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:41.958 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:41.959 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:41.960 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.962 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.963 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.964 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.965 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.967 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:41.968 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:41.969 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:41.971 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:41.972 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:41.973 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:41.973 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:41.974 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:41.975 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:41.976 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:41.978 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:41.979 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:41.980 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:41.981 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:41.982 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:41.984 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:41.985 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:41.986 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:41.987 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:41.989 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:41.990 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:41.991 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:41.992 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:41.992 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:41.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:41.995 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:41.996 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:41.998 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:41.999 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:42.000 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:42.001 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:42.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:42.004 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:42.005 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:42.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:42.007 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:42.008 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:42.010 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:42.011 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:42.012 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:42.014 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:42.015 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:42.016 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:42.017 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:42.019 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:42.020 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:42.021 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:42.022 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:42.023 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:42.025 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:42.025 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:42.026 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:42.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:42.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:42.030 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:42.031 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:42.033 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:42.034 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:42.035 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:42.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:42.038 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:42.039 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:42.040 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:42.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:42.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:42.043 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:42.044 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:42.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:42.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:42.046 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:42.047 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:42.047 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:42.048 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:42.049 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:42.049 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:42.050 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:42.054 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:42.056 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testEqualsTrue iteration 0
10:54:42.056 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=3967)
10:54:42.056 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:42.056 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=3965)
10:54:42.056 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:42.057 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:42.057 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:42.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:42.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:42.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:42.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:42.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:42.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:42.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:42.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:42.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:42.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:42.064 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:42.066 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:42.067 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:42.068 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:42.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:42.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:42.071 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:42.072 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:42.073 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:42.075 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:42.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:42.077 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:42.079 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:42.080 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:42.081 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:42.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:42.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:42.084 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:42.085 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:42.086 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:42.087 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:42.088 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:42.088 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:42.089 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:42.090 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:42.090 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:42.091 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:42.092 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:42.092 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:42.093 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:42.094 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:42.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:42.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:42.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:42.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:42.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:42.099 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:42.100 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:42.101 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:42.102 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.104 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.105 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.106 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.107 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.114 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:42.114 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:42.116 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:42.117 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:42.118 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:42.120 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.121 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.123 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.124 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.125 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:42.126 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:42.127 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:42.127 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:42.129 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:42.130 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:42.131 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:42.132 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.135 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.137 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.138 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:42.139 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:42.140 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:42.141 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:42.143 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:42.144 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:42.145 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:42.146 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:42.148 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:42.149 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:42.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:42.152 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:42.153 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:42.154 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:42.156 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:42.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:42.158 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:42.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:42.160 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:42.161 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:42.162 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:42.164 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:42.165 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:42.166 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:42.167 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:42.169 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:42.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:42.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:42.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:42.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:42.173 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:42.174 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:42.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:42.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:42.176 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:42.177 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:42.177 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:42.178 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:42.179 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:42.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:42.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:42.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:42.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:42.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:42.185 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:42.186 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:42.188 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:42.189 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.190 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.191 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.193 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.194 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.195 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:42.196 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:42.198 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:42.199 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:42.200 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:42.201 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:42.202 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:42.203 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:42.204 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:42.206 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:42.207 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.208 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.209 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.211 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.212 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.213 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:42.214 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:42.216 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:42.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:42.218 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:42.219 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:42.220 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:42.220 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:42.221 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:42.223 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:42.224 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:42.225 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:42.226 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.228 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.229 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.230 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.231 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.232 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:42.234 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:42.235 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:42.236 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:42.237 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:42.238 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:42.239 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:42.240 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:42.241 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:42.243 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:42.244 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:42.245 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:42.246 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:42.248 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:42.249 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:42.250 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:42.251 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:42.253 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:42.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:42.255 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:42.257 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:42.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:42.259 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:42.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:42.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:42.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:42.264 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:42.265 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:42.266 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:42.267 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:42.269 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:42.270 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:42.271 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:42.272 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:42.273 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:42.274 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:42.276 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:42.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:42.278 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:42.279 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:42.280 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:42.282 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:42.283 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:42.284 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:42.285 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:42.287 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:42.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:42.289 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:42.290 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:42.291 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:42.291 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:42.292 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:42.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:42.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:42.294 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:42.295 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:42.296 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:42.296 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:42.297 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:42.300 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:42.301 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexFormatTest#testParseDifferentImaginaryChar iteration 0
10:54:42.301 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=4121)
10:54:42.301 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:42.301 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=4119)
10:54:42.302 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:42.302 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:42.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:42.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:42.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:42.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:42.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:42.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:42.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:42.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:42.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:42.307 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:42.308 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:42.309 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:42.311 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:42.312 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:42.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:42.314 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:42.315 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:42.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:42.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:42.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:42.320 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:42.321 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:42.322 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:42.324 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:42.325 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:42.326 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:42.327 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:42.328 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:42.329 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:42.331 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:42.332 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:42.333 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:42.333 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:42.334 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:42.335 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:42.336 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:42.336 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:42.337 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:42.338 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:42.338 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:42.339 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:42.340 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:42.341 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:42.341 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:42.341 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:42.341 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:42.341 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:42.345 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:42.352 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:42.353 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:42.355 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.356 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.357 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.358 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:42.361 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:42.363 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:42.364 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:42.365 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:42.366 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.367 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.369 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.370 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.371 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.372 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:42.372 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:42.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:42.374 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:42.375 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:42.376 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:42.378 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:42.379 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.380 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.381 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.382 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.384 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.384 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:42.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:42.387 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:42.388 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:42.389 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:42.390 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:42.392 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:42.393 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:42.394 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:42.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:42.397 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:42.398 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:42.399 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:42.400 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:42.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:42.403 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:42.404 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:42.405 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:42.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:42.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:42.408 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:42.409 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:42.410 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:42.412 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:42.413 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:42.414 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:42.415 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:42.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:42.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:42.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:42.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:42.419 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:42.420 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:42.421 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:42.421 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:42.422 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:42.423 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:42.423 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:42.424 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:42.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:42.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:42.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:42.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:42.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:42.430 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:42.432 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:42.433 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:42.434 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.435 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.436 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.438 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.440 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:42.441 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:42.442 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:42.444 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:42.445 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:42.446 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:42.446 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:42.448 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:42.449 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:42.450 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:42.451 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.453 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.454 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.455 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.456 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.457 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:42.459 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:42.460 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:42.461 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:42.462 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:42.463 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:42.464 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:42.464 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:42.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:42.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:42.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:42.469 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:42.470 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.472 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.473 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.474 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.475 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.476 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:42.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:42.479 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:42.480 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:42.481 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:42.482 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:42.483 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:42.484 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:42.485 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:42.487 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:42.488 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:42.489 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:42.490 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:42.491 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:42.493 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:42.494 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:42.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:42.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:42.498 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:42.499 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:42.500 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:42.502 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:42.503 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:42.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:42.505 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:42.507 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:42.508 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:42.509 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:42.510 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:42.512 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:42.513 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:42.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:42.515 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:42.516 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:42.517 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:42.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:42.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:42.521 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:42.522 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:42.523 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:42.524 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:42.526 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:42.555 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:42.556 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:42.557 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:42.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:42.560 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:42.561 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:42.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:42.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:42.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:42.564 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:42.565 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:42.566 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:42.566 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:42.567 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:42.568 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:42.569 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:42.569 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:42.573 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:42.574 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testMath221 iteration 0
10:54:42.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=4275)
10:54:42.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:42.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=4273)
10:54:42.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:42.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:42.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:42.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:42.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:42.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:42.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:42.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:42.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:42.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:42.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:42.580 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:42.582 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:42.583 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:42.584 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:42.586 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:42.587 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:42.587 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:42.588 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:42.590 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:42.591 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:42.592 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:42.594 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:42.595 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:42.596 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:42.598 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:42.599 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:42.600 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:42.601 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:42.601 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:42.603 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:42.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:42.605 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:42.606 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:42.607 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:42.607 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:42.608 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:42.609 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:42.610 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:42.610 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:42.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:42.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:42.618 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:42.619 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:42.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:42.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:42.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:42.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:42.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:42.624 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:42.625 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:42.627 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:42.628 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.629 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.630 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.632 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.633 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.633 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:42.634 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:42.636 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:42.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:42.638 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:42.639 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.641 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.642 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.643 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.644 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.645 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:42.646 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:42.646 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:42.647 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:42.649 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:42.650 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:42.651 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:42.652 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.653 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.655 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.656 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.657 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.658 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:42.658 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:42.660 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:42.661 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:42.662 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:42.664 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:42.665 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:42.666 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:42.667 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:42.669 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:42.670 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:42.671 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:42.673 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:42.674 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:42.675 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:42.676 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:42.678 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:42.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:42.680 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:42.680 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:42.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:42.683 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:42.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:42.685 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:42.687 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:42.691 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:42.692 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:42.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:42.694 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:42.695 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:42.695 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:42.696 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:42.697 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:42.697 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:42.698 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:42.699 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:42.699 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:42.700 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:42.701 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:42.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:42.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:42.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:42.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:42.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:42.706 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:42.707 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:42.708 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:42.709 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.711 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.712 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.713 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.714 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.715 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:42.717 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:42.718 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:42.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:42.720 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:42.721 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:42.722 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:42.723 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:42.724 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:42.726 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:42.727 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.728 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.729 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.730 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.732 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.733 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:42.734 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:42.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:42.737 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:42.738 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:42.738 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:42.739 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:42.740 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:42.741 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:42.742 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:42.743 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:42.744 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:42.746 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.747 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.748 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.751 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.752 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:42.753 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:42.754 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:42.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:42.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:42.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:42.758 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:42.760 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:42.761 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:42.762 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:42.763 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:42.765 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:42.766 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:42.767 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:42.768 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:42.769 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:42.771 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:42.772 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:42.773 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:42.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:42.776 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:42.777 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:42.778 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:42.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:42.780 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:42.782 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:42.783 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:42.784 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:42.785 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:42.786 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:42.788 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:42.789 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:42.790 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:42.791 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:42.791 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:42.793 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:42.794 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:42.795 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:42.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:42.798 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:42.799 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:42.800 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:42.801 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:42.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:42.804 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:42.805 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:42.806 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:42.807 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:42.808 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:42.809 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:42.809 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:42.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:42.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:42.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:42.812 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:42.813 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:42.813 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:42.814 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:42.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:42.818 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:42.819 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseZeroReal iteration 0
10:54:42.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=4427)
10:54:42.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:42.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=4425)
10:54:42.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:42.820 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:42.820 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:42.821 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:42.821 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:42.821 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:42.821 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:42.821 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:42.821 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:42.821 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:42.821 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:42.825 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:42.826 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:42.827 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:42.829 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:42.830 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:42.831 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:42.832 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:42.833 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:42.834 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:42.836 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:42.837 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:42.838 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:42.840 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:42.841 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:42.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:42.844 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:42.845 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:42.846 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:42.847 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:42.848 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:42.850 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:42.851 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:42.852 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:42.858 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:42.859 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:42.859 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:42.860 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:42.861 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:42.861 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:42.862 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:42.863 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:42.863 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:42.864 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:42.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:42.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:42.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:42.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:42.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:42.869 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:42.871 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:42.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:42.873 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.875 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.876 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.877 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.879 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.879 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:42.880 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:42.882 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:42.883 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:42.884 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:42.885 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.887 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.888 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:42.892 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:42.893 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:42.894 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:42.895 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:42.896 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:42.898 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:42.899 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.900 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.902 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.903 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.904 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.905 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:42.906 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:42.907 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:42.909 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:42.910 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:42.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:42.912 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:42.914 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:42.915 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:42.916 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:42.918 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:42.919 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:42.920 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:42.921 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:42.923 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:42.924 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:42.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:42.926 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:42.927 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:42.928 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:42.929 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:42.931 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:42.932 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:42.933 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:42.934 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:42.936 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:42.937 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:42.938 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:42.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:42.940 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:42.940 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:42.941 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:42.942 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:42.942 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:42.943 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:42.944 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:42.944 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:42.945 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:42.946 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:42.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:42.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:42.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:42.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:42.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:42.951 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:42.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:42.954 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:42.955 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.956 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.957 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.959 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.960 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.961 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:42.962 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:42.964 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:42.965 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:42.966 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:42.967 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:42.968 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:42.969 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:42.971 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:42.972 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:42.973 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.974 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.976 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.977 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.978 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.979 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:42.981 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:42.982 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:42.983 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:42.984 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:42.985 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:42.986 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:42.987 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:42.987 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:42.989 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:42.990 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:42.992 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:42.993 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:42.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:42.995 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:42.997 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:42.998 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:42.999 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:43.000 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:43.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:43.003 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:43.004 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:43.005 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:43.005 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:43.007 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:43.008 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:43.010 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:43.011 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:43.012 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:43.013 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:43.015 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:43.016 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:43.017 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:43.018 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:43.020 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:43.021 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:43.022 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:43.024 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:43.025 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:43.026 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:43.027 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:43.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:43.030 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:43.031 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:43.032 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:43.034 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:43.035 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:43.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:43.037 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:43.039 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:43.039 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:43.040 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:43.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:43.043 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:43.044 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:43.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:43.047 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:43.048 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:43.049 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:43.050 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:43.052 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:43.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:43.054 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:43.055 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:43.057 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:43.057 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:43.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:43.059 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:43.060 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:43.060 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:43.061 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:43.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:43.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:43.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:43.064 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:43.065 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:43.068 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:43.068 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexFormatTest#testParseSimpleWithDecimals iteration 0
10:54:43.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=4579)
10:54:43.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:43.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=4577)
10:54:43.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:43.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:43.070 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:43.070 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:43.070 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:43.070 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:43.070 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:43.070 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:43.071 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:43.071 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:43.071 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:43.075 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:43.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:43.077 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:43.079 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:43.080 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:43.081 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:43.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:43.083 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:43.084 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:43.085 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:43.087 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:43.088 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:43.089 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:43.091 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:43.092 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:43.094 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:43.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:43.101 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:43.102 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:43.104 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:43.105 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:43.106 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:43.107 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:43.108 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:43.108 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:43.109 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:43.110 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:43.110 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:43.111 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:43.112 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:43.112 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:43.113 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:43.114 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:43.115 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:43.115 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:43.115 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:43.115 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:43.115 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:43.119 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:43.121 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:43.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:43.123 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.124 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.126 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.127 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.129 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:43.129 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:43.131 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:43.132 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:43.133 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:43.135 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.137 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.138 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.140 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.140 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:43.141 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:43.142 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:43.143 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:43.144 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:43.145 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:43.147 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:43.148 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.149 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.150 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.153 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.153 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:43.154 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:43.156 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:43.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:43.158 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:43.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:43.160 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:43.162 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:43.163 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:43.164 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:43.165 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:43.167 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:43.168 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:43.169 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:43.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:43.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:43.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:43.174 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:43.174 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:43.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:43.177 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:43.178 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:43.179 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:43.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:43.182 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:43.183 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:43.184 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:43.185 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:43.186 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:43.187 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:43.188 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:43.188 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:43.189 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:43.190 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:43.191 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:43.191 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:43.192 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:43.193 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:43.194 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:43.195 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:43.195 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:43.195 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:43.195 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:43.195 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:43.200 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:43.201 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:43.202 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:43.203 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.205 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.206 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.207 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.208 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.210 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:43.211 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:43.212 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:43.213 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:43.215 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:43.215 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:43.216 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:43.218 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:43.219 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:43.220 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:43.221 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.223 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.224 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.225 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.226 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.228 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:43.229 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:43.230 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:43.231 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:43.232 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:43.233 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:43.234 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:43.235 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:43.235 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:43.237 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:43.238 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:43.239 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:43.241 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.242 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.243 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.244 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.246 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:43.248 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:43.249 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:43.251 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:43.252 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:43.253 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:43.253 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:43.255 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:43.256 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:43.257 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:43.259 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:43.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:43.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:43.262 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:43.264 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:43.265 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:43.266 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:43.267 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:43.269 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:43.270 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:43.272 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:43.273 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:43.274 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:43.275 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:43.276 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:43.278 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:43.279 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:43.280 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:43.281 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:43.283 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:43.284 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:43.285 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:43.286 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:43.287 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:43.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:43.289 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:43.291 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:43.292 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:43.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:43.294 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:43.295 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:43.297 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:43.298 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:43.299 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:43.300 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:43.302 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:43.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:43.304 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:43.305 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:43.305 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:43.306 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:43.307 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:43.307 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:43.308 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:43.309 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:43.310 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:43.310 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:43.311 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:43.312 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:43.315 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:43.315 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexFormatTest#testParseSimpleNoDecimals iteration 0
10:54:43.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=4733)
10:54:43.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:43.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=4731)
10:54:43.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:43.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:43.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:43.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:43.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:43.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:43.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:43.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:43.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:43.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:43.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:43.322 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:43.323 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:43.324 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:43.326 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:43.327 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:43.328 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:43.329 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:43.330 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:43.331 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:43.332 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:43.339 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:43.341 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:43.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:43.344 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:43.345 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:43.346 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:43.347 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:43.348 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:43.349 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:43.350 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:43.351 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:43.353 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:43.353 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:43.354 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:43.355 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:43.355 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:43.356 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:43.357 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:43.357 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:43.358 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:43.359 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:43.359 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:43.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:43.361 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:43.361 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:43.361 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:43.361 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:43.361 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:43.366 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:43.367 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:43.368 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:43.369 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.371 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.372 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.374 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.375 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:43.375 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:43.377 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:43.378 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:43.379 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:43.381 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.382 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.383 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.384 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.386 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:43.387 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:43.387 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:43.388 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:43.390 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:43.391 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:43.392 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:43.393 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.394 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.397 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.398 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.398 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:43.399 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:43.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:43.402 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:43.403 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:43.404 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:43.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:43.407 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:43.408 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:43.409 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:43.411 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:43.412 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:43.413 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:43.414 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:43.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:43.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:43.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:43.419 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:43.420 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:43.420 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:43.422 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:43.423 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:43.424 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:43.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:43.427 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:43.428 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:43.429 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:43.430 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:43.431 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:43.432 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:43.432 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:43.433 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:43.434 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:43.434 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:43.435 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:43.436 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:43.436 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:43.437 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:43.438 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:43.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:43.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:43.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:43.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:43.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:43.443 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:43.444 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:43.446 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:43.447 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.448 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.449 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.451 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.452 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.453 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:43.454 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:43.455 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:43.457 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:43.458 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:43.458 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:43.459 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:43.461 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:43.462 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:43.463 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:43.464 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.466 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.469 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.470 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:43.472 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:43.473 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:43.474 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:43.475 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:43.476 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:43.477 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:43.477 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:43.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:43.480 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:43.481 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:43.482 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:43.484 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.485 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.486 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.487 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.488 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.490 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:43.491 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:43.492 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:43.493 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:43.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:43.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:43.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:43.498 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:43.499 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:43.500 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:43.501 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:43.503 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:43.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:43.505 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:43.506 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:43.507 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:43.509 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:43.510 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:43.511 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:43.512 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:43.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:43.515 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:43.516 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:43.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:43.519 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:43.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:43.521 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:43.522 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:43.524 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:43.525 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:43.526 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:43.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:43.528 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:43.529 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:43.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:43.531 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:43.532 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:43.534 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:43.535 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:43.536 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:43.537 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:43.538 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:43.539 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:43.541 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:43.542 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:43.543 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:43.544 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:43.546 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:43.546 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:43.547 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:43.548 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:43.548 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:43.549 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:43.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:43.551 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:43.551 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:43.552 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:43.553 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:43.553 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:43.556 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:43.557 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexFormatTest#testParseZeroImaginary iteration 0
10:54:43.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=4887)
10:54:43.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:43.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=4885)
10:54:43.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:43.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:43.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:43.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:43.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:43.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:43.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:43.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:43.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:43.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:43.560 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:43.564 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:43.565 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:43.566 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:43.568 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:43.569 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:43.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:43.577 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:43.578 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:43.579 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:43.580 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:43.582 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:43.583 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:43.584 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:43.586 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:43.587 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:43.588 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:43.590 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:43.590 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:43.591 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:43.593 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:43.594 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:43.595 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:43.596 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:43.596 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:43.597 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:43.598 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:43.598 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:43.599 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:43.600 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:43.600 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:43.601 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:43.602 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:43.602 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:43.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:43.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:43.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:43.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:43.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:43.608 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:43.609 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:43.610 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:43.611 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.613 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.614 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.615 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.616 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:43.618 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:43.619 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:43.621 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:43.622 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:43.623 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.624 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.627 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.628 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.629 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:43.629 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:43.630 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:43.631 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:43.632 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:43.634 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:43.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:43.636 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.639 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.640 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.641 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.642 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:43.643 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:43.644 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:43.645 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:43.647 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:43.648 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:43.649 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:43.650 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:43.652 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:43.653 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:43.654 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:43.655 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:43.657 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:43.658 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:43.659 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:43.660 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:43.662 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:43.663 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:43.664 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:43.664 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:43.666 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:43.667 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:43.668 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:43.670 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:43.671 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:43.672 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:43.673 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:43.675 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:43.675 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:43.676 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:43.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:43.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:43.678 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:43.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:43.680 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:43.680 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:43.681 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:43.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:43.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:43.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:43.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:43.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:43.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:43.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:43.687 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:43.689 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:43.690 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:43.691 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.692 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.694 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.695 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.696 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.697 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:43.698 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:43.700 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:43.701 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:43.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:43.703 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:43.703 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:43.705 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:43.706 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:43.707 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:43.708 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.710 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.711 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.712 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.713 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.715 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:43.716 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:43.717 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:43.718 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:43.720 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:43.720 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:43.721 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:43.722 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:43.723 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:43.724 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:43.725 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:43.727 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:43.728 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.729 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.730 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.732 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.733 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.734 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:43.736 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:43.737 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:43.738 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:43.739 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:43.740 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:43.741 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:43.742 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:43.744 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:43.745 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:43.746 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:43.748 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:43.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:43.750 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:43.751 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:43.753 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:43.754 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:43.755 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:43.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:43.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:43.759 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:43.761 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:43.763 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:43.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:43.765 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:43.766 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:43.768 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:43.769 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:43.770 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:43.771 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:43.772 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:43.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:43.775 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:43.776 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:43.776 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:43.778 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:43.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:43.780 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:43.781 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:43.783 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:43.784 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:43.785 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:43.786 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:43.787 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:43.788 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:43.790 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:43.791 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:43.792 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:43.793 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:43.793 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:43.794 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:43.795 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:43.796 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:43.796 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:43.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:43.798 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:43.799 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:43.799 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:43.800 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:43.809 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:43.809 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals iteration 0
10:54:43.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=5039)
10:54:43.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:43.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=5037)
10:54:43.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:43.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:43.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:43.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:43.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:43.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:43.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:43.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:43.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:43.812 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:43.812 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:43.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:43.817 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:43.818 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:43.820 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:43.821 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:43.822 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:43.823 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:43.824 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:43.825 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:43.826 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:43.828 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:43.829 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:43.830 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:43.831 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:43.833 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:43.834 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:43.835 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:43.836 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:43.837 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:43.838 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:43.839 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:43.841 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:43.841 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:43.842 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:43.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:43.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:43.844 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:43.845 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:43.845 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:43.846 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:43.847 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:43.848 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:43.848 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:43.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:43.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:43.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:43.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:43.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:43.854 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:43.855 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:43.856 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:43.857 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.859 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.860 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.861 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.862 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.863 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:43.864 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:43.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:43.866 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:43.868 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:43.869 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.870 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.871 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.873 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.874 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.874 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:43.875 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:43.876 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:43.877 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:43.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:43.879 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:43.881 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:43.882 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.883 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.884 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.885 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.887 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.887 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:43.888 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:43.890 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:43.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:43.892 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:43.893 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:43.895 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:43.896 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:43.897 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:43.898 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:43.900 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:43.901 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:43.902 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:43.904 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:43.905 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:43.906 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:43.907 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:43.909 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:43.909 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:43.910 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:43.912 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:43.913 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:43.914 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:43.915 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:43.916 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:43.918 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:43.919 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:43.920 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:43.921 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:43.921 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:43.922 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:43.923 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:43.924 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:43.924 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:43.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:43.926 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:43.926 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:43.927 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:43.928 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:43.929 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:43.929 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:43.929 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:43.929 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:43.929 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:43.940 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:43.941 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:43.943 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:43.944 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.945 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.946 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.948 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.950 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:43.952 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:43.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:43.954 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:43.955 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:43.956 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:43.957 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:43.958 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:43.959 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:43.961 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:43.962 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.963 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.964 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.966 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.967 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.968 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:43.969 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:43.970 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:43.972 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:43.973 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:43.974 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:43.974 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:43.975 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:43.976 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:43.977 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:43.978 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:43.980 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:43.981 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:43.982 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:43.983 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:43.984 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:43.986 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:43.987 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:43.988 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:43.989 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:43.991 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:43.992 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:43.993 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:43.993 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:43.995 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:43.996 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:43.997 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:43.999 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:44.000 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:44.001 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:44.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:44.004 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:44.005 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:44.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:44.007 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:44.009 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:44.010 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:44.012 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:44.013 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:44.014 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:44.015 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:44.017 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:44.018 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:44.019 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:44.020 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:44.021 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:44.023 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:44.024 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:44.025 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:44.026 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:44.027 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:44.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:44.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:44.030 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:44.032 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:44.033 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:44.034 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:44.035 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:44.037 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:44.038 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:44.039 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:44.040 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:44.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:44.043 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:44.044 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:44.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:44.046 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:44.046 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:44.047 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:44.048 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:44.054 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:44.055 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:44.056 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:44.056 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:44.057 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:44.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:44.061 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:44.061 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexFormatTest#testParseNegativeImaginary iteration 0
10:54:44.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=5193)
10:54:44.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:44.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=5191)
10:54:44.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:44.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:44.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:44.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:44.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:44.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:44.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:44.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:44.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:44.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:44.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:44.067 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:44.068 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:44.070 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:44.071 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:44.072 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:44.074 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:44.074 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:44.075 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:44.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:44.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:44.079 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:44.080 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:44.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:44.083 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:44.084 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:44.086 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:44.087 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:44.088 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:44.088 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:44.090 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:44.091 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:44.092 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:44.093 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:44.094 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:44.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:44.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:44.096 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:44.097 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:44.097 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:44.098 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:44.099 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:44.100 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:44.100 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:44.101 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:44.101 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:44.101 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:44.101 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:44.102 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:44.106 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:44.107 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:44.109 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:44.110 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.111 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.112 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.114 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.115 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.116 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:44.116 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:44.118 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:44.119 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:44.121 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:44.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.123 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.124 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.126 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.127 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:44.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:44.129 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:44.130 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:44.131 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:44.133 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:44.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:44.135 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.138 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.139 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.140 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.141 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:44.142 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:44.143 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:44.144 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:44.146 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:44.147 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:44.148 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:44.149 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:44.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:44.152 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:44.154 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:44.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:44.156 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:44.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:44.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:44.160 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:44.161 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:44.162 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:44.163 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:44.164 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:44.165 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:44.167 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:44.168 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:44.169 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:44.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:44.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:44.173 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:44.174 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:44.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:44.176 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:44.176 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:44.177 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:44.178 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:44.178 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:44.179 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:44.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:44.181 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:44.181 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:44.182 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:44.183 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:44.183 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:44.183 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:44.183 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:44.183 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:44.187 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:44.188 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:44.190 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:44.191 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.192 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.193 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.195 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.196 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.197 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:44.198 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:44.199 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:44.201 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:44.202 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:44.203 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:44.203 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:44.205 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:44.206 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:44.207 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:44.209 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.210 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.211 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.212 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.214 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.215 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:44.216 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:44.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:44.219 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:44.220 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:44.221 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:44.221 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:44.222 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:44.223 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:44.224 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:44.225 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:44.227 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:44.228 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.229 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.230 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.232 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.233 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.234 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:44.235 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:44.237 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:44.238 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:44.239 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:44.240 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:44.241 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:44.242 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:44.244 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:44.245 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:44.246 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:44.248 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:44.249 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:44.250 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:44.252 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:44.253 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:44.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:44.255 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:44.257 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:44.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:44.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:44.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:44.262 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:44.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:44.265 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:44.266 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:44.267 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:44.269 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:44.270 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:44.271 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:44.272 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:44.274 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:44.275 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:44.276 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:44.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:44.278 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:44.279 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:44.281 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:44.282 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:44.283 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:44.285 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:44.286 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:44.287 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:44.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:44.290 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:44.291 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:44.298 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:44.299 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:44.300 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:44.301 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:44.301 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:44.302 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:44.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:44.304 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:44.304 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:44.305 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:44.306 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:44.306 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:44.307 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:44.310 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:44.311 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseNegativeImaginary iteration 0
10:54:44.311 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=5347)
10:54:44.311 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:44.311 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=5345)
10:54:44.311 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:44.312 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:44.312 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:44.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:44.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:44.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:44.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:44.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:44.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:44.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:44.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:44.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:44.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:44.319 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:44.321 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:44.322 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:44.323 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:44.324 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:44.324 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:44.326 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:44.327 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:44.328 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:44.330 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:44.331 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:44.332 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:44.334 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:44.335 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:44.336 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:44.337 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:44.337 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:44.339 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:44.340 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:44.341 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:44.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:44.343 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:44.343 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:44.344 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:44.345 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:44.345 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:44.346 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:44.347 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:44.348 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:44.348 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:44.349 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:44.350 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:44.350 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:44.350 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:44.350 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:44.350 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:44.355 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:44.356 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:44.357 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:44.358 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.361 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.362 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.363 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.364 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:44.365 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:44.366 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:44.368 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:44.369 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:44.370 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.371 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.372 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.374 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.375 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.376 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:44.376 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:44.377 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:44.378 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:44.379 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:44.380 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:44.382 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:44.383 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.384 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.387 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.388 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.389 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:44.389 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:44.391 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:44.392 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:44.393 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:44.394 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:44.396 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:44.397 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:44.398 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:44.399 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:44.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:44.402 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:44.404 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:44.405 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:44.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:44.407 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:44.409 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:44.410 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:44.411 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:44.411 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:44.413 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:44.414 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:44.415 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:44.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:44.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:44.419 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:44.421 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:44.422 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:44.423 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:44.423 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:44.424 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:44.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:44.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:44.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:44.427 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:44.428 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:44.428 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:44.429 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:44.430 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:44.431 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:44.431 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:44.431 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:44.431 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:44.431 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:44.436 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:44.437 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:44.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:44.440 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.441 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.442 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.444 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.445 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.446 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:44.448 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:44.449 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:44.450 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:44.451 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:44.452 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:44.453 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:44.455 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:44.456 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:44.457 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:44.458 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.460 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.461 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.462 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.463 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:44.466 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:44.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:44.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:44.469 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:44.470 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:44.471 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:44.472 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:44.472 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:44.474 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:44.475 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:44.476 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:44.477 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.479 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.480 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.481 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.482 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.484 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:44.485 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:44.486 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:44.487 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:44.489 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:44.490 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:44.490 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:44.492 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:44.493 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:44.494 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:44.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:44.497 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:44.498 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:44.499 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:44.501 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:44.502 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:44.503 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:44.504 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:44.506 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:44.507 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:44.509 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:44.510 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:44.511 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:44.512 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:44.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:44.515 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:44.516 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:44.517 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:44.519 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:44.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:44.521 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:44.522 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:44.524 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:44.524 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:44.525 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:44.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:44.528 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:44.529 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:44.531 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:44.532 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:44.538 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:44.540 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:44.541 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:44.543 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:44.544 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:44.545 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:44.547 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:44.548 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:44.549 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:44.549 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:44.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:44.551 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:44.551 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:44.552 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:44.553 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:44.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:44.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:44.555 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:44.556 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:44.560 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:44.561 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testDivideImaginary iteration 0
10:54:44.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=5501)
10:54:44.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:44.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=5499)
10:54:44.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:44.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:44.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:44.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:44.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:44.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:44.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:44.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:44.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:44.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:44.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:44.568 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:44.569 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:44.570 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:44.572 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:44.573 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:44.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:44.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:44.576 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:44.578 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:44.579 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:44.580 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:44.582 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:44.583 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:44.584 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:44.586 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:44.587 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:44.588 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:44.589 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:44.590 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:44.591 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:44.592 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:44.594 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:44.594 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:44.595 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:44.596 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:44.597 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:44.597 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:44.598 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:44.599 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:44.600 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:44.600 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:44.601 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:44.602 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:44.603 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:44.603 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:44.603 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:44.603 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:44.603 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:44.607 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:44.609 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:44.610 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:44.611 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.613 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.614 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.615 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.616 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:44.618 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:44.619 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:44.621 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:44.622 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:44.623 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.624 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.627 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.628 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.629 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:44.629 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:44.630 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:44.631 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:44.632 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:44.634 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:44.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:44.636 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.639 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.640 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.641 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.642 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:44.643 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:44.644 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:44.645 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:44.647 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:44.648 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:44.649 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:44.650 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:44.652 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:44.653 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:44.655 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:44.656 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:44.657 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:44.658 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:44.660 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:44.661 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:44.662 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:44.664 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:44.664 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:44.665 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:44.667 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:44.668 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:44.669 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:44.670 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:44.672 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:44.673 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:44.674 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:44.676 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:44.676 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:44.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:44.678 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:44.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:44.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:44.680 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:44.681 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:44.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:44.682 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:44.683 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:44.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:44.685 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:44.685 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:44.685 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:44.685 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:44.685 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:44.690 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:44.692 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:44.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:44.694 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.695 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.697 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.698 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.699 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.700 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:44.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:44.703 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:44.704 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:44.706 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:44.706 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:44.707 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:44.709 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:44.710 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:44.711 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:44.712 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.714 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.715 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.716 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.718 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:44.720 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:44.721 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:44.723 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:44.724 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:44.725 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:44.725 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:44.726 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:44.727 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:44.728 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:44.730 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:44.731 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:44.732 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.734 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.736 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.737 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.739 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:44.740 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:44.741 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:44.743 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:44.744 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:44.745 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:44.745 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:44.747 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:44.748 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:44.750 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:44.751 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:44.752 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:44.753 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:44.755 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:44.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:44.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:44.758 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:44.760 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:44.761 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:44.762 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:44.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:44.765 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:44.766 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:44.767 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:44.768 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:44.770 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:44.771 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:44.772 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:44.773 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:44.775 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:44.776 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:44.777 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:44.778 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:44.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:44.780 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:44.787 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:44.789 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:44.790 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:44.791 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:44.792 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:44.794 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:44.795 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:44.796 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:44.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:44.798 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:44.800 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:44.801 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:44.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:44.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:44.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:44.804 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:44.805 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:44.806 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:44.806 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:44.807 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:44.808 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:44.808 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:44.809 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:44.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:44.813 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:44.814 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testScalarDivide iteration 0
10:54:44.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=5655)
10:54:44.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:44.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=5653)
10:54:44.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:44.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:44.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:44.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:44.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:44.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:44.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:44.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:44.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:44.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:44.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:44.820 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:44.822 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:44.823 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:44.824 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:44.825 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:44.827 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:44.827 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:44.828 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:44.830 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:44.831 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:44.832 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:44.834 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:44.835 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:44.836 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:44.838 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:44.839 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:44.840 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:44.841 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:44.842 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:44.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:44.844 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:44.846 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:44.846 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:44.847 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:44.848 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:44.848 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:44.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:44.850 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:44.851 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:44.851 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:44.852 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:44.853 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:44.853 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:44.855 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:44.855 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:44.855 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:44.855 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:44.855 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:44.859 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:44.860 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:44.862 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:44.863 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.864 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.867 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.868 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.868 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:44.869 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:44.871 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:44.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:44.873 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:44.874 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.876 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.877 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.879 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.880 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:44.880 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:44.881 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:44.882 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:44.883 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:44.884 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:44.886 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:44.887 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.888 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.890 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.892 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.892 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:44.893 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:44.894 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:44.896 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:44.897 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:44.898 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:44.900 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:44.901 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:44.902 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:44.903 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:44.905 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:44.906 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:44.907 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:44.909 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:44.910 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:44.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:44.912 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:44.914 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:44.914 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:44.915 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:44.917 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:44.918 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:44.919 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:44.920 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:44.922 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:44.923 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:44.924 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:44.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:44.926 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:44.927 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:44.927 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:44.928 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:44.929 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:44.930 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:44.930 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:44.931 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:44.932 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:44.932 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:44.933 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:44.934 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:44.934 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:44.935 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:44.935 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:44.935 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:44.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:44.940 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:44.941 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:44.942 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.944 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.945 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.946 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.949 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:44.950 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:44.951 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:44.952 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:44.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:44.954 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:44.955 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:44.956 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:44.957 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:44.958 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:44.960 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.961 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.962 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.963 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.964 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.966 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:44.967 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:44.968 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:44.969 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:44.970 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:44.971 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:44.972 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:44.973 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:44.973 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:44.975 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:44.976 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:44.977 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:44.979 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:44.980 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:44.981 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:44.982 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:44.984 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:44.985 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:44.986 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:44.987 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:44.989 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:44.990 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:44.991 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:44.991 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:44.993 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:44.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:44.996 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:44.997 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:44.998 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:44.999 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:45.001 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:45.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:45.003 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:45.004 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:45.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:45.007 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:45.008 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:45.010 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:45.011 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:45.012 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:45.013 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:45.015 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:45.016 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:45.017 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:45.018 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:45.025 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:45.027 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:45.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:45.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:45.030 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:45.031 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:45.032 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:45.033 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:45.035 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:45.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:45.037 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:45.038 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:45.039 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:45.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:45.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:45.043 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:45.044 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:45.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:45.046 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:45.048 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:45.048 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:45.049 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:45.050 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:45.050 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:45.051 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:45.052 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:45.052 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:45.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:45.054 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:45.054 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:45.055 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:45.132 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:45.133 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testSerial iteration 0
10:54:45.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=6002)
10:54:45.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:45.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=6000)
10:54:45.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:45.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:45.135 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:45.135 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:45.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:45.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:45.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:45.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:45.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:45.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:45.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:45.140 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:45.142 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:45.143 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:45.145 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:45.146 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:45.147 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:45.148 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:45.148 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:45.150 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:45.151 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:45.153 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:45.154 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:45.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:45.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:45.158 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:45.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:45.160 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:45.161 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:45.162 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:45.163 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:45.165 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:45.166 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:45.166 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:45.167 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:45.168 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:45.169 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:45.169 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:45.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:45.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:45.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:45.172 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:45.173 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:45.174 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:45.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:45.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:45.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:45.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:45.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:45.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:45.181 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:45.182 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:45.183 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.185 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.186 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.187 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.189 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.189 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:45.190 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:45.192 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:45.193 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:45.194 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:45.195 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.197 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.198 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.199 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.200 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.206 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:45.207 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:45.208 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:45.209 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:45.211 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:45.212 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:45.213 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:45.214 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.216 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.217 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.218 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.219 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.220 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:45.221 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:45.222 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:45.224 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:45.225 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:45.226 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:45.227 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:45.229 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:45.230 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:45.231 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:45.233 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:45.234 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:45.235 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:45.236 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:45.238 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:45.239 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:45.240 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:45.241 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:45.242 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:45.243 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:45.244 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:45.246 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:45.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:45.248 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:45.250 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:45.251 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:45.252 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:45.253 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:45.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:45.255 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:45.255 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:45.256 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:45.257 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:45.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:45.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:45.259 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:45.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:45.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:45.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:45.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:45.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:45.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:45.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:45.263 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:45.267 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:45.268 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:45.270 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:45.271 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.272 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.273 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.274 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.276 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:45.278 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:45.280 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:45.281 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:45.282 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:45.283 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:45.284 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:45.286 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:45.287 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:45.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:45.289 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.291 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.292 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.294 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.296 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:45.297 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:45.298 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:45.299 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:45.301 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:45.301 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:45.302 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:45.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:45.303 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:45.305 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:45.306 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:45.307 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:45.309 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.310 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.311 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.312 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.314 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.315 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:45.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:45.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:45.319 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:45.320 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:45.321 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:45.321 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:45.323 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:45.324 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:45.325 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:45.327 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:45.328 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:45.329 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:45.330 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:45.332 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:45.333 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:45.334 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:45.336 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:45.337 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:45.338 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:45.340 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:45.341 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:45.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:45.343 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:45.345 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:45.346 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:45.347 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:45.348 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:45.349 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:45.351 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:45.352 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:45.353 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:45.354 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:45.355 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:45.356 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:45.357 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:45.359 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:45.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:45.361 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:45.363 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:45.364 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:45.365 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:45.366 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:45.368 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:45.369 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:45.370 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:45.371 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:45.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:45.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:45.374 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:45.375 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:45.375 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:45.376 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:45.377 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:45.378 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:45.378 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:45.379 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:45.380 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:45.380 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:45.382 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:45.383 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testSerial iteration 1
10:54:45.383 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=6159)
10:54:45.383 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:45.383 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=6158)
10:54:45.384 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:45.384 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:45.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:45.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:45.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:45.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:45.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:45.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:45.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:45.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:45.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:45.389 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:45.391 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:45.392 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:45.394 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:45.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:45.396 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:45.397 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:45.398 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:45.399 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:45.400 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:45.402 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:45.403 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:45.405 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:45.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:45.408 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:45.409 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:45.410 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:45.411 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:45.412 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:45.413 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:45.415 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:45.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:45.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:45.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:45.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:45.419 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:45.420 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:45.420 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:45.421 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:45.422 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:45.423 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:45.423 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:45.424 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:45.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:45.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:45.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:45.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:45.425 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:45.430 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:45.431 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:45.433 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:45.434 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.435 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.437 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.438 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.439 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.440 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:45.441 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:45.443 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:45.444 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:45.445 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:45.447 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.448 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.449 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.451 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.452 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.453 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:45.453 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:45.454 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:45.455 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:45.456 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:45.458 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:45.459 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:45.460 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.461 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.463 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.464 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.466 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:45.466 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:45.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:45.469 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:45.470 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:45.472 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:45.473 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:45.474 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:45.475 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:45.477 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:45.478 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:45.479 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:45.481 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:45.482 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:45.483 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:45.485 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:45.486 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:45.487 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:45.488 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:45.489 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:45.490 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:45.491 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:45.493 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:45.494 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:45.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:45.497 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:45.498 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:45.499 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:45.500 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:45.506 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:45.507 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:45.508 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:45.509 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:45.509 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:45.510 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:45.511 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:45.511 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:45.512 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:45.513 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:45.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:45.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:45.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:45.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:45.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:45.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:45.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:45.521 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:45.522 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.524 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.525 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.526 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.527 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.529 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:45.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:45.531 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:45.533 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:45.534 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:45.535 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:45.535 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:45.537 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:45.538 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:45.540 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:45.541 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.542 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.543 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.545 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.546 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.547 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:45.549 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:45.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:45.551 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:45.552 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:45.553 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:45.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:45.555 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:45.555 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:45.557 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:45.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:45.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:45.561 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.565 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.566 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.567 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:45.568 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:45.570 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:45.571 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:45.572 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:45.573 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:45.574 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:45.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:45.577 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:45.578 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:45.579 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:45.580 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:45.582 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:45.583 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:45.584 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:45.585 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:45.587 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:45.588 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:45.589 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:45.590 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:45.592 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:45.593 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:45.594 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:45.596 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:45.597 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:45.598 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:45.599 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:45.601 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:45.602 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:45.603 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:45.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:45.606 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:45.607 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:45.608 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:45.608 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:45.610 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:45.611 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:45.612 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:45.614 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:45.615 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:45.616 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:45.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:45.619 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:45.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:45.621 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:45.622 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:45.624 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:45.625 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:45.625 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:45.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:45.627 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:45.628 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:45.628 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:45.629 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:45.630 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:45.630 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:45.631 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:45.632 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:45.632 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:45.634 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:45.635 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testSerial iteration 2
10:54:45.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=6161)
10:54:45.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:45.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=6160)
10:54:45.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:45.636 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:45.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:45.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:45.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:45.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:45.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:45.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:45.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:45.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:45.637 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:45.641 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:45.643 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:45.644 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:45.645 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:45.647 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:45.648 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:45.649 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:45.649 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:45.651 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:45.652 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:45.654 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:45.655 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:45.656 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:45.658 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:45.659 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:45.661 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:45.662 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:45.663 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:45.663 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:45.665 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:45.666 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:45.668 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:45.668 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:45.669 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:45.670 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:45.670 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:45.671 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:45.672 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:45.673 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:45.673 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:45.674 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:45.675 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:45.676 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:45.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:45.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:45.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:45.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:45.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:45.681 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:45.683 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:45.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:45.685 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.686 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.688 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.689 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.690 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.691 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:45.692 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:45.693 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:45.694 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:45.696 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:45.697 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.698 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.699 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.700 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:45.703 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:45.704 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:45.704 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:45.706 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:45.707 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:45.709 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:45.710 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.711 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.712 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.714 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.715 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.716 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:45.716 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:45.718 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:45.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:45.721 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:45.722 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:45.723 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:45.724 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:45.726 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:45.727 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:45.729 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:45.730 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:45.731 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:45.732 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:45.734 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:45.735 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:45.736 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:45.738 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:45.738 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:45.739 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:45.741 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:45.742 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:45.743 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:45.750 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:45.751 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:45.753 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:45.754 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:45.755 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:45.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:45.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:45.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:45.758 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:45.759 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:45.759 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:45.760 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:45.761 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:45.762 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:45.762 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:45.763 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:45.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:45.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:45.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:45.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:45.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:45.769 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:45.770 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:45.771 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:45.772 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.775 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.776 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.777 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:45.780 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:45.781 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:45.782 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:45.784 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:45.784 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:45.785 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:45.787 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:45.788 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:45.789 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:45.790 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.792 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.793 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.794 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.795 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:45.798 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:45.799 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:45.801 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:45.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:45.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:45.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:45.804 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:45.805 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:45.806 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:45.807 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:45.809 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:45.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.811 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.813 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.814 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.816 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:45.818 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:45.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:45.820 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:45.822 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:45.822 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:45.823 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:45.825 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:45.826 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:45.827 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:45.829 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:45.830 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:45.831 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:45.833 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:45.834 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:45.835 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:45.837 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:45.838 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:45.839 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:45.841 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:45.842 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:45.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:45.845 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:45.846 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:45.847 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:45.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:45.850 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:45.851 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:45.853 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:45.854 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:45.855 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:45.856 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:45.858 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:45.858 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:45.859 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:45.861 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:45.862 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:45.863 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:45.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:45.866 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:45.867 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:45.869 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:45.870 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:45.871 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:45.873 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:45.874 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:45.875 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:45.876 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:45.877 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:45.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:45.879 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:45.879 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:45.880 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:45.881 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:45.881 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:45.882 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:45.883 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:45.884 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:45.884 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:45.888 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:45.889 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testSerial iteration 3
10:54:45.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.ComplexTest$TestComplex(id=6265)
10:54:45.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:45.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.ComplexTest$TestComplex(id=6264)
10:54:45.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:45.890 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:45.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:45.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:45.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:45.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:45.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:45.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:45.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:45.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:45.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:45.895 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:45.896 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:45.898 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:45.899 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:45.901 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:45.902 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:45.903 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:45.903 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:45.905 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:45.906 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:45.907 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:45.909 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:45.910 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:45.912 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:45.913 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:45.915 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:45.916 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:45.917 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:45.917 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:45.919 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:45.920 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:45.922 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:45.922 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:45.923 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:45.924 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:45.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:45.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:45.926 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:45.927 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:45.927 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:45.928 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:45.929 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:45.930 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:45.931 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:45.931 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:45.931 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:45.931 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:45.931 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:45.938 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:45.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:45.940 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:45.942 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.943 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.944 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.945 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:45.948 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:45.950 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.equals((java.lang.Object) this)
10:54:45.951 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.equals((java.lang.Object) other)
10:54:45.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.equals((java.lang.Object) c)
10:54:45.954 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:45.956 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:45.957 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:45.958 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.959 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.960 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.962 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.963 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.964 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:45.964 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:45.965 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:45.966 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:45.967 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:45.969 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:45.970 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:45.971 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:45.972 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:45.973 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:45.975 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:45.976 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:45.977 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:45.977 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:45.979 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:45.980 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:45.981 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:45.983 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:45.984 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:45.985 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:45.987 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:45.988 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:45.989 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:45.991 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:45.998 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:45.999 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:46.000 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:46.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:46.003 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:46.004 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:46.005 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:46.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:46.007 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:46.008 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:46.010 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:46.011 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:46.012 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:46.014 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:46.015 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:46.016 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:46.017 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:46.018 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:46.018 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:46.019 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:46.020 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:46.020 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:46.021 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:46.022 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:46.022 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:46.023 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:46.024 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:46.026 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:46.026 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:46.026 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:46.026 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:46.026 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:46.031 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:46.032 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:46.033 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:46.035 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.036 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.037 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.038 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.040 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:46.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:46.043 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:46.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:46.046 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:46.047 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:46.047 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:46.049 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.equals((java.lang.Object) this)
10:54:46.050 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.equals((java.lang.Object) other)
10:54:46.051 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.equals((java.lang.Object) c)
10:54:46.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:46.054 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:46.056 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:46.057 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.059 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.061 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:46.065 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:46.066 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:46.067 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:46.068 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:46.069 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:46.070 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:46.071 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:46.071 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:46.073 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:46.074 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:46.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:46.077 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.079 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.081 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.083 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:46.085 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:46.086 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:46.087 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:46.088 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:46.089 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:46.090 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:46.092 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:46.093 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:46.094 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:46.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:46.097 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:46.098 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:46.099 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:46.100 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:46.102 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:46.103 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:46.104 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:46.106 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:46.107 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:46.108 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:46.110 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:46.111 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:46.112 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:46.113 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:46.115 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:46.116 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:46.117 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:46.118 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:46.120 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:46.121 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:46.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:46.123 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:46.124 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:46.125 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:46.126 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:46.128 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:46.129 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:46.130 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:46.132 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:46.133 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:46.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:46.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:46.137 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:46.138 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:46.139 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:46.141 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:46.142 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:46.143 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:46.144 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:46.144 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:46.145 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:46.146 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:46.147 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:46.147 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:46.148 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:46.149 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:46.150 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:46.150 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:46.152 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:46.153 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testSerial iteration 4
10:54:46.153 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.ComplexTest$TestComplex(id=6416)
10:54:46.153 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:46.153 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=6158)
10:54:46.154 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:46.154 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:46.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:46.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:46.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:46.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:46.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:46.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:46.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:46.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:46.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:46.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:46.160 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:46.162 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:46.163 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:46.165 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:46.166 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:46.167 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:46.167 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:46.169 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:46.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:46.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:46.173 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:46.174 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:46.176 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:46.177 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:46.178 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:46.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:46.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:46.181 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:46.183 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:46.184 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:46.185 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:46.186 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:46.186 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:46.187 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:46.188 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:46.188 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:46.189 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:46.190 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:46.190 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:46.191 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:46.192 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:46.193 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:46.194 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:46.194 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:46.194 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:46.194 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:46.194 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:46.199 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:46.200 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:46.201 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:46.203 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.204 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.205 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.206 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.208 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.209 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:46.209 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:46.211 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.equals((java.lang.Object) this)
10:54:46.212 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.equals((java.lang.Object) other)
10:54:46.213 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.equals((java.lang.Object) c)
10:54:46.215 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:46.216 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:46.218 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:46.219 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.220 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.222 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.223 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.224 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.225 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:46.226 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:46.226 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:46.227 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:46.229 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:46.230 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:46.231 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:46.233 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.234 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.235 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.237 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.243 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.244 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:46.245 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:46.247 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:46.248 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:46.249 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:46.250 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:46.252 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:46.253 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:46.254 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:46.256 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:46.257 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:46.258 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:46.260 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:46.261 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:46.262 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:46.264 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:46.265 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:46.266 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:46.267 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:46.268 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:46.269 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:46.271 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:46.272 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:46.273 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:46.275 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:46.276 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:46.277 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:46.278 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:46.279 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:46.280 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:46.281 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:46.281 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:46.282 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:46.283 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:46.284 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:46.284 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:46.285 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:46.286 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:46.287 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:46.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:46.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:46.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:46.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:46.288 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:46.293 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:46.295 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:46.296 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:46.297 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.299 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.300 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.301 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.302 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.304 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:46.305 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:46.306 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:46.307 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:46.309 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:46.309 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:46.310 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:46.312 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.equals((java.lang.Object) this)
10:54:46.313 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.equals((java.lang.Object) other)
10:54:46.314 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.equals((java.lang.Object) c)
10:54:46.316 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:46.317 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:46.318 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:46.319 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.321 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.322 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.323 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.324 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.326 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:46.327 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:46.328 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:46.330 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:46.331 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:46.332 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:46.332 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:46.333 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:46.334 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:46.335 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:46.336 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:46.338 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:46.339 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.340 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.342 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.343 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.344 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.345 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:46.347 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:46.348 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:46.349 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:46.350 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:46.351 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:46.352 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:46.353 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:46.355 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:46.356 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:46.357 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:46.358 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:46.360 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:46.361 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:46.362 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:46.364 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:46.365 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:46.366 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:46.367 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:46.369 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:46.370 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:46.372 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:46.373 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:46.374 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:46.375 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:46.377 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:46.378 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:46.379 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:46.380 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:46.382 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:46.383 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:46.384 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:46.385 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:46.386 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:46.387 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:46.389 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:46.390 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:46.391 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:46.393 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:46.394 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:46.395 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:46.397 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:46.398 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:46.399 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:46.401 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:46.402 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:46.403 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:46.405 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:46.405 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:46.406 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:46.407 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:46.408 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:46.408 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:46.409 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:46.410 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:46.411 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:46.412 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:46.412 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:46.413 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:46.415 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:46.416 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testSerial iteration 5
10:54:46.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.ComplexTest$TestComplex(id=6417)
10:54:46.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:46.416 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=6160)
10:54:46.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:46.417 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:46.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:46.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:46.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:46.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:46.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:46.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:46.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:46.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:46.418 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:46.423 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:46.424 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:46.426 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:46.427 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:46.428 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:46.430 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:46.431 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:46.431 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:46.433 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:46.434 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:46.436 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:46.437 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:46.438 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:46.440 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:46.441 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:46.443 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:46.444 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:46.445 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:46.445 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:46.447 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:46.448 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:46.449 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:46.450 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:46.451 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:46.451 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:46.452 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:46.453 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:46.454 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:46.454 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:46.455 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:46.456 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:46.456 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:46.457 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:46.458 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:46.458 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:46.458 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:46.458 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:46.458 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:46.463 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:46.464 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:46.465 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:46.467 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.468 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.469 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.470 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.472 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.472 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:46.473 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:46.475 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.equals((java.lang.Object) this)
10:54:46.476 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.equals((java.lang.Object) other)
10:54:46.477 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.equals((java.lang.Object) c)
10:54:46.479 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:46.480 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:46.481 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:46.483 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.484 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.485 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.486 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.488 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.494 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:46.495 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:46.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:46.496 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:46.498 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:46.499 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:46.501 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:46.502 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.503 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.505 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.506 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.507 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.508 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:46.508 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:46.510 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:46.511 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:46.513 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:46.514 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:46.515 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:46.516 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:46.518 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:46.519 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:46.520 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:46.522 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:46.523 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:46.524 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:46.525 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:46.526 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:46.528 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:46.529 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:46.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:46.530 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:46.532 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:46.533 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:46.534 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:46.536 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:46.537 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:46.538 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:46.539 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:46.541 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:46.541 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:46.542 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:46.543 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:46.543 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:46.544 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:46.545 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:46.545 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:46.546 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:46.547 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:46.548 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:46.548 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:46.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:46.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:46.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:46.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:46.550 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:46.554 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:46.555 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:46.557 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:46.558 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.559 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.560 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.562 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.563 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.564 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:46.565 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:46.567 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:46.568 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:46.569 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:46.570 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:46.571 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:46.572 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.equals((java.lang.Object) this)
10:54:46.574 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.equals((java.lang.Object) other)
10:54:46.575 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.equals((java.lang.Object) c)
10:54:46.577 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:46.578 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:46.579 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:46.580 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.582 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.583 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.584 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.586 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.587 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:46.588 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:46.589 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:46.591 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:46.592 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:46.593 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:46.593 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:46.594 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:46.595 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:46.596 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:46.598 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:46.599 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:46.600 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.601 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.603 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.604 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.605 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.606 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:46.608 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:46.609 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:46.610 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:46.612 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:46.612 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:46.613 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:46.615 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:46.616 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:46.617 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:46.618 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:46.620 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:46.621 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:46.622 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:46.623 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:46.625 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:46.626 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:46.627 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:46.628 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:46.630 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:46.631 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:46.633 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:46.634 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:46.635 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:46.636 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:46.638 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:46.639 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:46.640 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:46.642 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:46.643 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:46.644 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:46.645 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:46.647 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:46.648 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:46.648 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:46.650 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:46.651 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:46.652 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:46.654 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:46.655 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:46.656 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:46.657 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:46.659 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:46.660 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:46.661 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:46.662 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:46.664 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:46.665 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:46.666 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:46.666 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:46.667 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:46.668 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:46.669 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:46.669 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:46.670 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:46.671 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:46.671 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:46.672 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:46.673 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:46.676 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:46.677 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc iteration 0
10:54:46.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=6521)
10:54:46.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:46.677 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=6519)
10:54:46.678 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:46.678 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:46.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:46.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:46.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:46.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:46.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:46.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:46.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:46.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:46.679 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:46.684 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:46.685 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:46.686 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:46.688 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:46.689 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:46.691 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:46.691 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:46.692 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:46.694 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:46.695 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:46.696 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:46.698 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:46.699 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:46.701 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:46.702 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:46.704 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:46.705 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:46.705 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:46.706 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:46.708 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:46.709 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:46.710 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:46.711 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:46.712 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:46.712 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:46.713 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:46.714 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:46.714 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:46.715 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:46.716 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:46.716 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:46.717 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:46.718 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:46.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:46.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:46.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:46.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:46.719 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:46.724 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:46.725 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:46.726 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:46.727 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.729 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.730 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.731 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.732 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.733 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:46.739 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:46.741 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:46.742 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:46.744 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:46.745 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.746 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.747 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.749 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.750 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.751 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:46.752 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:46.752 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:46.753 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:46.755 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:46.756 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:46.757 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:46.758 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.760 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.761 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.762 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.764 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:46.765 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:46.767 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:46.768 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:46.769 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:46.770 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:46.772 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:46.773 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:46.774 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:46.775 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:46.777 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:46.778 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:46.779 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:46.781 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:46.782 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:46.783 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:46.784 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:46.786 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:46.786 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:46.787 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:46.788 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:46.790 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:46.791 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:46.792 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:46.793 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:46.794 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:46.796 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:46.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:46.797 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:46.798 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:46.799 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:46.799 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:46.800 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:46.801 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:46.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:46.802 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:46.803 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:46.804 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:46.804 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:46.806 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:46.806 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:46.806 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:46.806 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:46.806 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:46.810 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:46.812 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:46.813 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:46.814 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.815 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.817 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.818 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.819 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.820 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:46.822 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:46.823 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:46.824 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:46.826 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:46.826 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:46.827 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:46.829 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:46.830 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:46.831 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:46.833 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.834 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.835 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.836 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.838 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.839 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:46.840 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:46.842 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:46.843 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:46.844 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:46.845 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:46.846 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:46.847 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:46.847 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:46.849 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:46.850 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:46.852 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:46.853 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.854 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.856 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.857 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.858 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.859 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:46.861 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:46.862 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:46.863 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:46.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:46.865 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:46.866 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:46.868 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:46.869 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:46.870 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:46.872 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:46.873 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:46.874 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:46.875 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:46.877 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:46.878 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:46.879 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:46.881 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:46.882 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:46.883 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:46.885 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:46.886 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:46.887 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:46.889 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:46.890 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:46.891 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:46.892 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:46.894 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:46.895 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:46.896 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:46.898 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:46.899 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:46.900 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:46.901 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:46.902 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:46.903 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:46.905 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:46.906 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:46.907 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:46.909 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:46.910 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:46.911 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:46.912 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:46.914 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:46.915 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:46.916 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:46.917 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:46.919 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:46.919 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:46.920 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:46.921 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:46.921 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:46.922 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:46.923 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:46.923 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:46.924 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:46.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:46.925 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:46.926 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:46.936 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:54:46.937 [pool-31-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testReciprocalZero iteration 0
10:54:46.937 [pool-31-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] c=instance of org.apache.commons.math3.complex.Complex(id=368)
10:54:46.937 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:54:46.937 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=367)
10:54:46.937 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:54:46.938 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c
10:54:46.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:54:46.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:54:46.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:54:46.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:54:46.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:54:46.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:54:46.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:54:46.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:54:46.939 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:54:46.943 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:54:46.944 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:54:46.946 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) c)
10:54:46.947 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:46.948 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:46.950 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:46.950 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:46.951 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:46.953 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:46.954 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:46.955 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:46.957 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:54:46.958 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:54:46.959 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) c)
10:54:46.961 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:54:46.962 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:54:46.964 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) c)
10:54:46.964 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:54:46.965 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:54:46.966 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:54:46.968 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:54:46.969 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) c)
10:54:46.970 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:54:46.970 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:54:46.971 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:54:46.972 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:54:46.972 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:46.973 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:54:46.974 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:54:46.974 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:54:46.975 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:54:46.976 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:54:46.977 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:54:46.978 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:54:46.978 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:54:46.978 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:54:46.978 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:54:46.978 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:54:46.982 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:54:46.984 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:54:46.985 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) c)
10:54:46.992 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:46.994 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:46.995 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:46.996 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:46.997 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:46.998 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:54:46.999 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:54:47.001 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:47.002 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:47.003 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:47.004 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:47.006 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:47.007 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:47.008 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:47.010 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:47.010 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:47.011 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:47.012 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:54:47.013 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:54:47.014 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:47.016 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:47.017 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:47.018 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:47.019 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:47.021 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:47.022 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:47.023 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:47.024 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:54:47.025 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:54:47.026 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:54:47.028 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:54:47.029 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) c)
10:54:47.030 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:54:47.032 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:54:47.033 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:54:47.034 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:54:47.035 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:54:47.037 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:54:47.038 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:54:47.040 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) c)
10:54:47.041 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:54:47.042 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:54:47.044 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:54:47.045 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:54:47.046 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:54:47.047 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:54:47.048 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:54:47.049 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:54:47.051 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:54:47.052 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) c)
10:54:47.053 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:54:47.054 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:54:47.056 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:54:47.057 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:54:47.058 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:54:47.059 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:54:47.060 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:54:47.061 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:54:47.061 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:54:47.062 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:47.063 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:54:47.064 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:54:47.064 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:54:47.065 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:54:47.066 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:54:47.066 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:54:47.068 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.I
10:54:47.068 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.NaN
10:54:47.068 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.INF
10:54:47.068 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ONE
10:54:47.068 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.ZERO
10:54:47.073 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this)
10:54:47.074 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other)
10:54:47.076 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) c)
10:54:47.077 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.I)
10:54:47.078 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:47.079 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:54:47.081 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:47.082 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:47.083 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.I)
10:54:47.085 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:47.086 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.INF)
10:54:47.087 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:47.088 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:47.089 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.imaginary)
10:54:47.090 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((double) this.real)
10:54:47.092 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this)
10:54:47.093 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other)
10:54:47.094 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) c)
10:54:47.095 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:54:47.097 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:47.098 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:54:47.099 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:47.100 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:47.102 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.I)
10:54:47.103 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:47.104 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.INF)
10:54:47.105 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:47.107 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:47.107 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:47.108 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:47.109 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.imaginary)
10:54:47.109 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((double) this.real)
10:54:47.111 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this)
10:54:47.112 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other)
10:54:47.114 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) c)
10:54:47.115 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:54:47.116 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:54:47.117 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:54:47.118 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:54:47.120 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:54:47.121 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.I)
10:54:47.122 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.NaN)
10:54:47.124 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.INF)
10:54:47.125 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ONE)
10:54:47.126 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((org.apache.commons.math3.complex.Complex) other.ZERO)
10:54:47.127 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.imaginary)
10:54:47.127 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((double) this.real)
10:54:47.129 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this)
10:54:47.130 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other)
10:54:47.131 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) c)
10:54:47.133 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.I)
10:54:47.134 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.NaN)
10:54:47.135 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.INF)
10:54:47.136 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ONE)
10:54:47.137 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) this.ZERO)
10:54:47.139 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.I)
10:54:47.140 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.NaN)
10:54:47.141 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.INF)
10:54:47.142 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ONE)
10:54:47.144 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.divide((java.lang.Object) other.ZERO)
10:54:47.145 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this)
10:54:47.146 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other)
10:54:47.148 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) c)
10:54:47.149 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.I)
10:54:47.150 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.NaN)
10:54:47.152 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.INF)
10:54:47.153 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ONE)
10:54:47.154 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) this.ZERO)
10:54:47.155 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.I)
10:54:47.157 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.NaN)
10:54:47.158 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.INF)
10:54:47.159 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ONE)
10:54:47.161 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((java.lang.Object) other.ZERO)
10:54:47.161 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 0)
10:54:47.162 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.multiply((int) 1)
10:54:47.164 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this)
10:54:47.165 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other)
10:54:47.166 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) c)
10:54:47.167 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.I)
10:54:47.169 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.NaN)
10:54:47.170 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.INF)
10:54:47.171 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ONE)
10:54:47.173 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) this.ZERO)
10:54:47.174 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.I)
10:54:47.175 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.NaN)
10:54:47.176 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.INF)
10:54:47.178 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ONE)
10:54:47.179 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.subtract((java.lang.Object) other.ZERO)
10:54:47.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.abs()
10:54:47.180 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getImaginary()
10:54:47.181 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getReal()
10:54:47.182 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.isInfinite()
10:54:47.182 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:47.183 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.exp()
10:54:47.184 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.log()
10:54:47.185 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt()
10:54:47.185 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.sqrt1z()
10:54:47.186 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.getArgument()
10:54:47.187 [pool-31-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] c.negate()
10:54:47.193 [pool-31-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - Exit


========= Info ==========
Nb constants             42
Nb method invocations    168
Nb field access          4
Nb variables             4
Total                    218
Nb evaluated expressions 1
Init Execution time      1416 ms
Collect Execution time   13172 ms
Combine Execution time   133.0 ms
Nb Combination par sec   8 combinations/sec
Total Execution time     14721 ms
Nb line execution        50
Nb results               1

Results:
1. c.isNaN


========================
         Stat
========================
Operators: 
EQ 3
INSTANCEOF 1
AND 1
Methods: 
Variable: 
imaginary 4
real 4
isNaN 4
other 3
c 3

 & 42 & 168 & 4 & 4 & 218 & 1 & 14722 ms & 50 &
10:54:47.328 [pool-31-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: org.apache.commons.math3.complex.Complex:345: CONDITIONAL c.isNaN
10:54:47.631 [pool-31-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "c.isNaN" is working
10:54:47.748 [pool-31-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Failing tests [testReciprocalZero(org.apache.commons.math3.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
10:54:47.749 [pool-31-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a valid patch in SourceLocation org.apache.commons.math3.complex.Complex:345
10:54:47.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
10:54:47.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:344 which is executed by 45 tests
-1679819631
10:54:47.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
10:54:47.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:343 which is executed by 47 tests
-1679819631
10:54:48.181 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:48.223 [pool-10236-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (34 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:48.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:48.562 [pool-10240-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (33 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:48.855 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
10:54:48.855 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.complex.Complex:340 which is executed by 63 tests
-1679819631
10:54:49.089 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:49.161 [pool-10244-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (42 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:49.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:49.517 [pool-10248-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (51 ms)
<> Total tests run: 123
<> Ignored tests: 0
<> Failed tests: 1
~ testReciprocalZero(org.apache.commons.math3.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:49.909 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testDivideReal
10:54:49.911 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.FrenchComplexFormatTest#testPaseNegativeInfinity
10:54:49.912 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testScalarSubtractInf
10:54:49.912 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseNegativeBoth
10:54:49.913 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testDivideInf
10:54:49.914 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testScalarSubtract
10:54:49.915 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexFormatTest#testParsePositiveInfinity
10:54:49.915 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseNegativeReal
10:54:49.916 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexFormatTest#testParseNegativeBoth
10:54:49.927 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testDivideZero
10:54:49.928 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testReciprocalInf
10:54:49.929 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc
10:54:49.930 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testScalarPowNaNBase
10:54:49.930 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals
10:54:49.931 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testDivideZeroZero
10:54:49.932 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testScalarMultiply
10:54:49.933 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseNan
10:58:09.933 [pool-10247-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:58:09.935 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.FrenchComplexFormatTest#testParsePositiveInfinity
10:58:09.936 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testScalarSubtractNaN
10:58:09.936 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf
10:58:09.938 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexFormatTest#testParseSimpleNoDecimals
10:58:09.942 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexFormatTest#testParseZeroImaginary
10:58:09.943 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexFormatTest#testParseNegativeImaginary
10:58:09.944 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testDivideImaginary
10:58:09.945 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testMultiplyNaNInf
10:58:09.946 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc
10:58:09.946 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexFieldTest#testZero
10:58:09.950 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testScalarAddNaN
10:58:09.951 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testScalarPow
10:58:09.951 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexFormatTest#testParseNan
10:58:09.952 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testEqualsSame
10:58:09.953 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testScalarPowNaNExponent
10:58:09.953 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testReciprocalReal
10:58:09.955 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar
10:58:09.956 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testEqualsNaN
10:58:09.956 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexFormatTest#testParseNegativeReal
10:58:09.957 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testScalarAddInf
10:58:09.958 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testReciprocalImaginary
10:58:09.958 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexFormatTest#testParseZeroReal
10:58:09.959 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexFieldTest#testOne
10:58:09.959 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testScalarMultiplyInf
10:58:09.960 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testScalarAdd
10:58:09.961 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseZeroImaginary
10:58:09.961 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexFormatTest#testPaseNegativeInfinity
10:58:09.962 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testEqualsTrue
10:58:09.962 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexFormatTest#testParseDifferentImaginaryChar
10:58:09.963 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testMath221
10:58:09.963 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseZeroReal
10:58:09.972 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexFormatTest#testParseSimpleWithDecimals
10:58:09.973 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testScalarMultiplyNaN
10:58:09.973 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testScalarDivideNaN
10:58:09.974 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals
10:58:09.974 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.FrenchComplexFormatTest#testParseNegativeImaginary
10:58:09.976 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testScalarDivide
10:58:09.978 [pool-10247-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.commons.math3.complex.ComplexTest#testSerial
java -cp /tmp/DynaMoth_Defects4J_Math_5/target/classes:/tmp/DynaMoth_Defects4J_Math_5/target/test-classes:/tmp/DynaMoth_Defects4J_Math_5/target/classes:/tmp/DynaMoth_Defects4J_Math_5/target/test-classes:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/home/tdurieux/defects4j4repair/repair_tools/nopol.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar: fr.inria.lille.repair.MethodTestRunner org.apache.commons.math3.complex.ComplexTest#testEqualsImaginaryDifference org.apache.commons.math3.complex.ComplexTest#testEqualsRealDifference org.apache.commons.math3.complex.ComplexTest#testEqualsClass org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuadraticFunction org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 org.apache.commons.math3.complex.ComplexTest#testEqualsNull org.apache.commons.math3.complex.ComplexTest#testReciprocalZero 
10:58:10.200 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - ClassPrepareEvent
10:58:10.208 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] org.apache.commons.math3.complex.Complex
10:58:10.771 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:10.772 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testEqualsImaginaryDifference iteration 0
10:58:10.773 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=360)
10:58:10.773 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:10.773 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=358)
10:58:10.773 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:10.775 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:10.775 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:10.775 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:10.775 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:10.775 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:10.775 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:10.775 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:10.775 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:10.775 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:10.790 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:10.795 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:10.797 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:10.798 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:10.799 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:10.799 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:10.801 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:10.802 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:10.804 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:10.805 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:10.807 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:10.808 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:10.809 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:10.809 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:10.811 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:10.812 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:10.813 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:10.813 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:10.814 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:10.815 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:10.816 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:10.825 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:10.826 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:10.827 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:10.828 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:10.828 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:10.829 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:10.830 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:10.830 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:10.830 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:10.830 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:10.830 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:10.835 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:10.836 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:10.837 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:10.838 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:10.840 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:10.841 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:10.842 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:10.843 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:10.843 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:10.845 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:10.846 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:10.847 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:10.848 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:10.849 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:10.851 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:10.852 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:10.853 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:10.853 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:10.854 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:10.855 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:10.856 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:10.857 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:10.859 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:10.860 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:10.861 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:10.862 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:10.863 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:10.864 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:10.865 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:10.866 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:10.867 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:10.868 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:10.878 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:10.879 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:10.881 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:10.882 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:10.883 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:10.884 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:10.886 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:10.887 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:10.888 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:10.889 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:10.890 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:10.891 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:10.892 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:10.893 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:10.894 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:10.895 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:10.897 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:10.898 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:10.899 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:10.900 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:10.901 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:10.902 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:10.902 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:10.905 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:10.905 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:10.906 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:10.907 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:10.908 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:10.909 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:10.909 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:10.911 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:10.944 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:10.945 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testEqualsRealDifference iteration 0
10:58:10.948 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=652)
10:58:10.948 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:10.948 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=650)
10:58:10.949 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:10.949 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:10.950 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:10.950 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:10.950 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:10.950 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:10.950 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:10.950 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:10.950 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:10.950 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:10.954 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:10.956 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:10.957 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:10.958 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:10.959 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:10.960 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:10.961 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:10.963 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:10.964 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:10.965 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:10.967 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:10.968 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:10.969 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:10.969 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:10.971 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:10.972 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:10.973 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:10.974 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:10.974 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:10.975 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:10.976 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:10.976 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:10.977 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:10.978 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:10.979 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:10.979 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:10.980 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:10.981 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:10.981 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:10.981 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:10.981 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:10.981 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:10.986 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:10.987 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:10.988 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:10.990 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:10.991 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:10.992 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:10.993 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:10.994 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:10.995 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:10.996 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:10.997 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:10.998 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.000 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.001 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.002 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.003 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.004 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.005 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.005 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:11.006 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:11.007 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.009 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.010 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.011 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.012 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.013 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.014 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.015 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:11.016 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:11.017 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:11.018 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:11.020 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:11.021 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:11.022 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:11.023 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:11.024 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:11.026 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:11.027 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:11.028 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:11.029 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:11.031 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:11.032 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:11.033 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:11.034 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.035 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.036 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:11.037 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:11.038 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:11.040 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:11.041 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:11.042 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:11.043 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:11.044 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:11.045 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:11.045 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:11.046 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:11.047 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.047 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:11.048 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:11.049 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:11.050 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:11.050 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:11.051 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.059 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:11.060 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testEqualsClass iteration 0
10:58:11.060 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.ComplexTest(id=722)
10:58:11.060 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:11.061 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=721)
10:58:11.062 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:11.063 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:11.063 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:11.063 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:11.063 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:11.063 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:11.063 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:11.063 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:11.063 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:11.063 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:11.068 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.069 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.070 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.071 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.072 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.074 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:11.078 [pool-10562-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.commons.math3.complex.Complex.divide(java.lang.Object) [instance of org.apache.commons.math3.complex.ComplexTest(id=722)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
10:58:11.080 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:11.082 [pool-10564-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.commons.math3.complex.Complex.multiply(java.lang.Object) [instance of org.apache.commons.math3.complex.ComplexTest(id=722)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
10:58:11.083 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.083 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.085 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:11.086 [pool-10568-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method org.apache.commons.math3.complex.Complex.subtract(java.lang.Object) [instance of org.apache.commons.math3.complex.ComplexTest(id=722)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
10:58:11.087 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:11.088 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:11.089 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:11.090 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:11.090 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.104 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:11.106 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:11.107 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:11.109 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:11.110 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:11.110 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.135 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:11.138 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuadraticFunction iteration 0
10:58:11.138 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=765)
10:58:11.138 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:11.138 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=761)
10:58:11.138 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:11.139 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:11.139 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:11.139 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:11.139 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:11.139 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:11.139 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:11.139 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:11.139 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:11.139 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:11.145 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.146 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.148 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.149 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.150 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.151 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.152 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.153 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.155 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:11.156 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:11.158 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:11.159 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:11.160 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.161 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.162 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:11.163 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:11.164 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:11.165 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:11.166 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:11.166 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:11.167 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.168 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:11.169 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:11.169 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:11.170 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:11.171 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:11.171 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.173 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:11.173 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:11.173 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:11.173 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:11.173 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:11.178 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.180 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.181 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.182 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.184 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.185 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.186 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.187 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:11.188 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:11.189 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.191 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.192 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.193 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.194 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.196 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.197 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.198 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.199 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.199 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:11.200 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:11.202 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.203 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.204 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.206 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.207 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.208 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.209 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.210 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:11.215 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:11.217 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:11.218 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:11.220 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:11.221 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:11.222 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:11.224 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:11.226 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:11.228 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:11.229 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:11.230 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:11.232 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:11.233 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:11.234 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:11.236 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:11.236 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.237 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.239 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:11.240 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:11.241 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:11.243 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:11.244 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:11.245 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:11.246 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:11.247 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:11.248 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:11.249 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:11.249 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:11.250 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.251 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:11.252 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:11.253 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:11.253 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:11.254 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:11.255 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.257 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:11.265 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction iteration 0
10:58:11.266 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=846)
10:58:11.266 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:11.266 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=842)
10:58:11.266 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:11.267 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:11.267 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:11.267 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:11.267 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:11.267 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:11.267 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:11.267 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:11.267 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:11.267 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:11.272 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.274 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.275 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.277 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.277 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.278 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.280 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.281 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.283 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:11.284 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:11.285 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:11.287 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:11.287 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.288 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.290 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:11.291 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:11.292 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:11.292 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:11.293 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:11.294 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:11.294 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.295 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:11.296 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:11.296 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:11.297 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:11.298 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:11.298 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.300 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:11.300 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:11.300 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:11.300 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:11.300 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:11.304 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.305 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.307 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.308 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.309 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.310 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.311 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.312 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:11.313 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:11.314 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.316 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.317 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.318 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.319 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.321 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.322 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.323 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.324 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.324 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:11.325 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:11.327 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.328 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.329 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.331 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.332 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.333 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.334 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.335 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:11.336 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:11.338 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:11.339 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:11.340 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:11.341 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:11.343 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:11.344 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:11.345 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:11.347 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:11.348 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:11.349 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:11.351 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:11.352 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:11.353 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:11.354 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:11.355 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.356 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.357 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:11.359 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:11.360 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:11.361 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:11.363 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:11.364 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:11.365 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:11.366 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:11.367 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:11.367 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:11.368 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:11.369 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.369 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:11.370 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:11.371 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:11.371 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:11.372 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:11.373 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.380 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:11.381 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction iteration 1
10:58:11.382 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=911)
10:58:11.382 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:11.382 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=910)
10:58:11.382 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:11.383 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:11.383 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:11.383 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:11.383 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:11.383 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:11.383 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:11.383 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:11.383 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:11.383 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:11.387 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.389 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.390 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.392 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.401 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.402 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.404 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.405 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.407 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:11.408 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:11.410 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:11.411 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:11.412 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.412 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.414 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:11.415 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:11.416 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:11.416 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:11.417 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:11.418 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:11.418 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.419 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:11.420 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:11.421 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:11.421 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:11.422 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:11.423 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.424 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:11.424 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:11.424 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:11.424 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:11.424 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:11.429 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.430 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.431 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.432 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.434 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.435 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.436 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.437 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:11.437 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:11.439 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.440 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.441 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.443 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.444 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.445 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.446 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.447 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.448 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.448 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:11.449 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:11.450 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.452 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.453 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.454 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.455 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.457 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.458 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.458 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:11.459 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:11.461 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:11.462 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:11.463 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:11.464 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:11.465 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:11.467 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:11.468 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:11.469 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:11.470 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:11.472 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:11.473 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:11.474 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:11.476 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:11.477 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:11.477 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.478 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.480 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:11.481 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:11.482 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:11.483 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:11.485 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:11.486 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:11.487 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:11.488 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:11.488 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:11.489 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:11.490 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:11.490 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.491 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:11.492 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:11.492 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:11.493 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:11.494 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:11.495 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.495 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:11.497 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction iteration 2
10:58:11.497 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=976)
10:58:11.497 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:11.497 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=975)
10:58:11.497 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:11.498 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:11.498 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:11.498 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:11.498 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:11.498 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:11.499 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:11.499 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:11.499 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:11.499 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:11.503 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.504 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.506 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.507 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.507 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.508 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.510 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.511 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.512 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:11.513 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:11.515 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:11.516 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:11.517 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.517 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.519 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:11.520 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:11.521 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:11.521 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:11.522 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:11.523 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:11.523 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.524 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:11.525 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:11.525 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:11.526 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:11.527 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:11.527 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.529 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:11.529 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:11.529 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:11.529 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:11.529 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:11.533 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.534 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.536 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.537 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.538 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.539 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.541 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.541 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:11.542 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:11.544 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.545 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.546 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.547 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.548 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.550 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.551 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.552 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.552 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.553 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:11.554 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:11.555 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.556 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.558 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.559 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.560 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.561 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.563 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.563 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:11.564 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:11.565 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:11.567 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:11.568 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:11.569 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:11.570 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:11.572 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:11.573 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:11.574 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:11.576 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:11.577 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:11.578 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:11.579 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:11.581 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:11.582 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:11.583 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.583 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.585 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:11.586 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:11.587 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:11.589 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:11.590 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:11.591 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:11.592 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:11.593 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:11.594 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:11.594 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:11.595 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:11.596 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.597 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:11.597 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:11.598 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:11.599 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:11.599 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:11.600 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.601 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:11.602 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction iteration 3
10:58:11.603 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1041)
10:58:11.603 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:11.603 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1040)
10:58:11.603 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:11.604 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:11.604 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:11.604 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:11.604 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:11.604 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:11.604 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:11.604 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:11.604 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:11.604 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:11.609 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.610 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.612 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.613 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.614 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.614 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.616 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.617 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.619 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:11.620 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:11.621 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:11.623 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:11.623 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.624 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.626 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:11.627 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:11.627 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:11.628 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:11.651 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:11.652 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:11.653 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.653 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:11.654 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:11.655 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:11.656 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:11.656 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:11.657 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.658 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:11.658 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:11.658 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:11.658 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:11.658 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:11.663 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.664 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.665 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.666 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.668 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.669 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.670 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.671 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:11.671 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:11.673 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.674 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.675 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.677 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.678 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.679 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.680 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.681 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.682 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.682 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:11.683 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:11.685 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.686 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.687 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.688 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.690 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.691 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.692 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.693 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:11.694 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:11.695 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:11.696 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:11.698 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:11.699 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:11.700 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:11.701 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:11.703 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:11.704 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:11.705 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:11.707 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:11.708 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:11.709 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:11.710 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:11.711 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:11.712 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.713 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.714 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:11.716 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:11.717 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:11.718 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:11.719 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:11.720 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:11.721 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:11.722 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:11.723 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:11.723 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:11.724 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:11.725 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.726 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:11.726 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:11.727 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:11.727 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:11.728 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:11.729 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.730 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:11.731 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction iteration 4
10:58:11.731 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1106)
10:58:11.731 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:11.731 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1105)
10:58:11.731 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:11.732 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:11.732 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:11.732 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:11.732 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:11.732 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:11.732 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:11.732 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:11.733 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:11.733 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:11.736 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.737 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.739 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.740 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.741 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.741 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.743 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.744 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.746 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:11.747 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:11.748 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:11.750 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:11.750 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.751 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.753 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:11.754 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:11.755 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:11.755 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:11.758 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:11.759 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:11.760 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.760 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:11.761 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:11.762 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:11.762 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:11.763 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:11.764 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.765 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:11.765 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:11.765 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:11.765 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:11.765 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:11.769 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.771 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.772 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.773 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.775 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.776 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.777 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.778 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:11.778 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:11.780 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.781 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.783 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.784 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.785 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.786 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.788 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.788 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.789 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.790 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:11.790 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:11.792 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.793 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.794 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.795 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.797 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.798 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.799 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.800 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:11.800 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:11.802 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:11.803 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:11.804 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:11.805 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:11.807 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:11.808 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:11.809 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:11.810 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:11.812 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:11.813 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:11.814 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:11.815 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:11.816 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:11.817 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:11.818 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.819 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.820 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:11.821 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:11.823 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:11.824 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:11.825 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:11.826 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:11.827 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:11.828 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:11.829 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:11.830 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:11.830 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:11.831 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.832 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:11.832 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:11.833 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:11.834 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:11.834 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:11.835 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.838 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:11.839 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 0
10:58:11.840 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1175)
10:58:11.840 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:11.840 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1171)
10:58:11.840 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:11.841 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:11.841 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:11.841 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:11.841 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:11.841 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:11.841 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:11.841 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:11.841 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:11.841 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:11.846 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.847 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.848 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.850 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.850 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.851 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.853 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.854 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.856 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:11.857 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:11.858 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:11.860 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:11.860 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.861 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.863 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:11.864 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:11.865 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:11.865 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:11.866 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:11.867 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:11.867 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.868 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:11.869 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:11.870 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:11.870 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:11.871 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:11.872 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.873 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:11.873 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:11.873 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:11.873 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:11.873 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:11.877 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.879 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.880 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.881 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.882 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.900 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.902 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.903 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:11.903 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:11.905 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.906 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.907 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.909 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.910 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.911 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.912 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.913 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.914 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.914 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:11.915 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:11.916 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.918 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.919 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:11.920 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:11.921 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:11.922 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:11.924 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:11.924 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:11.925 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:11.927 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:11.928 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:11.929 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:11.930 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:11.931 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:11.933 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:11.934 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:11.935 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:11.936 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:11.938 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:11.939 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:11.940 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:11.941 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:11.942 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:11.943 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:11.944 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:11.945 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:11.946 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:11.948 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:11.949 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:11.950 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:11.951 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:11.952 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:11.953 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:11.954 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:11.955 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:11.955 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:11.956 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.957 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:11.957 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:11.958 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:11.959 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:11.960 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:11.960 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:11.961 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:11.962 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 1
10:58:11.963 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1240)
10:58:11.963 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:11.963 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1239)
10:58:11.963 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:11.964 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:11.964 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:11.964 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:11.964 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:11.964 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:11.964 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:11.964 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:11.964 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:11.964 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:11.968 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.969 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:11.971 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:11.972 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:11.973 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.973 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.975 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:11.976 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:11.978 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:11.979 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:11.980 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:11.981 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:11.982 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:11.983 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:11.984 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:11.985 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:11.986 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:11.987 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:11.987 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:11.988 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:11.989 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.990 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:11.990 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:11.991 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:11.992 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:11.992 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:11.993 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:11.994 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:11.994 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:11.994 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:11.994 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:11.994 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:11.998 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:11.999 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.001 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.002 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.003 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.004 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.005 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.006 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:12.007 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:12.008 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.009 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.011 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.012 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.013 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.014 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.015 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.016 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.017 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.017 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:12.018 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:12.020 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.021 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.022 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.023 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.024 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.026 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.027 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.027 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:12.028 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:12.030 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:12.031 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:12.032 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:12.033 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:12.034 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:12.036 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:12.037 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:12.038 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:12.040 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:12.041 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:12.042 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:12.043 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:12.045 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:12.046 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:12.046 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.047 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.049 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:12.050 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:12.051 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:12.052 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:12.053 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:12.055 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:12.056 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:12.056 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:12.057 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:12.058 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:12.058 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:12.059 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.060 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:12.060 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:12.061 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:12.062 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:12.062 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:12.063 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.064 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:12.065 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 2
10:58:12.065 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1306)
10:58:12.065 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:12.065 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1305)
10:58:12.065 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:12.066 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:12.066 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:12.066 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:12.066 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:12.066 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:12.066 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:12.066 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:12.066 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:12.066 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:12.070 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.071 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.073 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.074 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.075 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.076 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.077 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.078 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.080 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:12.081 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:12.082 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:12.084 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:12.084 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.085 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.086 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:12.088 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:12.088 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:12.089 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:12.090 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:12.091 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:12.091 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.092 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:12.093 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:12.093 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:12.094 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:12.095 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:12.095 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.097 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:12.097 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:12.097 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:12.097 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:12.097 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:12.101 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.102 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.104 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.105 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.106 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.107 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.109 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.109 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:12.110 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:12.111 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.113 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.114 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.115 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.116 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.118 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.119 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.120 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.120 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.121 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:12.132 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:12.134 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.135 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.136 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.137 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.139 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.140 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.141 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.142 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:12.142 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:12.144 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:12.145 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:12.146 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:12.147 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:12.149 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:12.150 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:12.151 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:12.153 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:12.154 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:12.155 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:12.156 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:12.157 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:12.159 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:12.160 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:12.160 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.161 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.163 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:12.164 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:12.165 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:12.166 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:12.167 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:12.168 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:12.170 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:12.170 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:12.171 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:12.172 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:12.172 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:12.173 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.174 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:12.174 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:12.175 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:12.176 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:12.176 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:12.177 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.178 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:12.179 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 3
10:58:12.179 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1372)
10:58:12.179 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:12.179 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1371)
10:58:12.180 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:12.180 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:12.181 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:12.181 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:12.181 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:12.181 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:12.181 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:12.181 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:12.181 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:12.181 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:12.185 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.186 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.188 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.189 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.190 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.190 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.192 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.193 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.195 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:12.196 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:12.197 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:12.198 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:12.199 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.200 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.201 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:12.203 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:12.203 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:12.204 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:12.204 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:12.205 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:12.206 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.207 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:12.207 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:12.208 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:12.209 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:12.209 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:12.210 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.211 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:12.211 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:12.211 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:12.211 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:12.211 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:12.215 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.217 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.218 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.219 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.220 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.222 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.223 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.224 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:12.224 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:12.226 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.227 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.228 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.230 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.231 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.232 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.233 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.234 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.234 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.235 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:12.236 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:12.237 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.238 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.240 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.241 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.242 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.243 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.244 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.245 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:12.246 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:12.247 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:12.249 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:12.250 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:12.251 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:12.252 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:12.253 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:12.255 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:12.256 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:12.257 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:12.258 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:12.260 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:12.261 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:12.262 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:12.263 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:12.264 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.264 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.266 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:12.267 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:12.268 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:12.270 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:12.271 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:12.272 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:12.273 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:12.274 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:12.274 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:12.275 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:12.276 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:12.277 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.277 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:12.278 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:12.279 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:12.279 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:12.280 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:12.280 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.281 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:12.282 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 4
10:58:12.283 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1438)
10:58:12.283 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:12.283 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1437)
10:58:12.283 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:12.284 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:12.284 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:12.284 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:12.284 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:12.284 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:12.284 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:12.284 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:12.284 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:12.284 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:12.288 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.289 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.291 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.292 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.293 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.293 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.295 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.296 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.297 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:12.299 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:12.300 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:12.301 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:12.302 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.303 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.304 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:12.305 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:12.306 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:12.307 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:12.307 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:12.308 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:12.309 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.310 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:12.310 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:12.311 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:12.312 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:12.312 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:12.313 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.314 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:12.314 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:12.314 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:12.314 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:12.314 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:12.318 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.319 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.320 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.322 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.323 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.324 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.325 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.326 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:12.327 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:12.328 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.329 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.331 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.332 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.333 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.334 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.336 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.336 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.337 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.338 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:12.338 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:12.340 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.341 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.342 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.344 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.345 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.346 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.347 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.348 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:12.349 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:12.350 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:12.352 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:12.353 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:12.354 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:12.366 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:12.367 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:12.369 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:12.370 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:12.371 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:12.373 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:12.374 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:12.375 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:12.376 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:12.378 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:12.378 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.379 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.381 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:12.382 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:12.383 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:12.384 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:12.386 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:12.387 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:12.388 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:12.389 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:12.389 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:12.390 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:12.391 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:12.391 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.392 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:12.393 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:12.394 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:12.394 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:12.395 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:12.396 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.397 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:12.398 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 5
10:58:12.398 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1504)
10:58:12.398 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:12.398 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1503)
10:58:12.398 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:12.399 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:12.399 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:12.399 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:12.399 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:12.399 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:12.399 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:12.399 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:12.399 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:12.399 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:12.404 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.405 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.407 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.408 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.408 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.409 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.411 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.412 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.413 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:12.415 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:12.416 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:12.417 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:12.418 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.419 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.420 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:12.421 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:12.422 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:12.423 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:12.424 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:12.424 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:12.425 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.426 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:12.426 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:12.427 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:12.428 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:12.428 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:12.429 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.430 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:12.430 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:12.430 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:12.430 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:12.430 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:12.435 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.436 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.437 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.439 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.440 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.441 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.442 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.443 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:12.444 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:12.445 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.447 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.448 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.449 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.450 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.452 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.453 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.454 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.454 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.455 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:12.456 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:12.458 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.459 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.460 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.461 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.463 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.464 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.465 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.466 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:12.467 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:12.468 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:12.469 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:12.471 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:12.472 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:12.473 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:12.475 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:12.476 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:12.477 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:12.479 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:12.480 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:12.481 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:12.482 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:12.483 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:12.485 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:12.485 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.486 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.488 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:12.489 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:12.490 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:12.491 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:12.493 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:12.494 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:12.495 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:12.496 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:12.496 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:12.497 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:12.498 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:12.498 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.499 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:12.500 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:12.501 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:12.501 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:12.502 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:12.503 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.503 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:12.505 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 6
10:58:12.505 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1570)
10:58:12.505 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:12.505 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1569)
10:58:12.505 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:12.506 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:12.506 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:12.506 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:12.506 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:12.506 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:12.506 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:12.506 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:12.506 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:12.506 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:12.511 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.512 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.514 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.515 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.516 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.516 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.518 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.519 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.521 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:12.522 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:12.523 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:12.525 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:12.525 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.526 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.528 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:12.529 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:12.529 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:12.530 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:12.531 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:12.532 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:12.532 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.533 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:12.534 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:12.534 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:12.535 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:12.536 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:12.536 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.537 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:12.537 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:12.537 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:12.537 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:12.537 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:12.542 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.543 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.544 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.546 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.547 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.548 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.549 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.550 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:12.551 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:12.552 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.553 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.554 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.556 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.557 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.558 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.559 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.560 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.560 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.561 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:12.562 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:12.563 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.564 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.566 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.567 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.568 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.569 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.570 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.571 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:12.572 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:12.573 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:12.574 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:12.576 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:12.577 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:12.578 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:12.579 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:12.580 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:12.582 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:12.583 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:12.584 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:12.585 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:12.587 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:12.588 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:12.589 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:12.590 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.590 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.592 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:12.593 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:12.604 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:12.605 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:12.606 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:12.608 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:12.609 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:12.610 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:12.610 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:12.611 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:12.612 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:12.612 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.613 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:12.614 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:12.614 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:12.615 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:12.616 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:12.616 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.617 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:12.618 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 7
10:58:12.619 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1636)
10:58:12.619 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:12.619 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1635)
10:58:12.619 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:12.620 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:12.620 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:12.620 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:12.620 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:12.620 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:12.620 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:12.620 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:12.620 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:12.620 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:12.624 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.625 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.627 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.628 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.629 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.629 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.631 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.632 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.633 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:12.635 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:12.636 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:12.637 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:12.638 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.639 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.640 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:12.641 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:12.642 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:12.643 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:12.643 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:12.644 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:12.645 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.645 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:12.646 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:12.647 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:12.647 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:12.648 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:12.649 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.650 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:12.650 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:12.650 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:12.650 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:12.650 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:12.654 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.655 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.656 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.657 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.658 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.660 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.661 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.661 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:12.662 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:12.664 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.665 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.666 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.667 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.668 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.669 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.671 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.671 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.672 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.673 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:12.673 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:12.675 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.676 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.677 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.678 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.680 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.681 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.682 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.683 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:12.683 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:12.685 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:12.686 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:12.687 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:12.688 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:12.690 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:12.691 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:12.692 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:12.693 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:12.695 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:12.696 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:12.697 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:12.698 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:12.699 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:12.700 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:12.701 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.702 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.703 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:12.704 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:12.706 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:12.707 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:12.708 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:12.709 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:12.710 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:12.711 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:12.711 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:12.712 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:12.713 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:12.713 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.714 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:12.715 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:12.715 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:12.716 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:12.717 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:12.717 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.718 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:12.719 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 8
10:58:12.720 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1702)
10:58:12.720 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:12.720 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1701)
10:58:12.720 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:12.721 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:12.721 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:12.721 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:12.721 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:12.721 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:12.721 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:12.721 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:12.721 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:12.721 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:12.725 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.726 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.728 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.729 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.730 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.731 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.732 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.733 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.735 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:12.736 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:12.738 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:12.739 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:12.739 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.740 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.742 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:12.743 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:12.744 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:12.744 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:12.745 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:12.746 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:12.746 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.747 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:12.748 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:12.748 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:12.749 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:12.750 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:12.750 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.751 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:12.751 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:12.752 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:12.752 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:12.752 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:12.756 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.757 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.758 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.759 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.760 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.762 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.763 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.764 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:12.764 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:12.766 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.767 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.768 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.770 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.771 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.772 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.773 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.774 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.775 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.775 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:12.776 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:12.778 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.779 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.780 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.781 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.783 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.784 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.785 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.786 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:12.787 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:12.788 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:12.789 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:12.791 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:12.792 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:12.793 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:12.794 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:12.796 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:12.797 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:12.798 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:12.800 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:12.801 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:12.802 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:12.803 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:12.805 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:12.805 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.806 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.808 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:12.809 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:12.810 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:12.812 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:12.813 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:12.814 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:12.815 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:12.816 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:12.817 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:12.817 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:12.818 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:12.819 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.819 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:12.820 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:12.821 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:12.822 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:12.831 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:12.832 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.833 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:12.834 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 9
10:58:12.834 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1768)
10:58:12.834 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:12.834 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1767)
10:58:12.834 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:12.835 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:12.835 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:12.835 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:12.835 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:12.835 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:12.835 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:12.835 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:12.836 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:12.836 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:12.839 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.841 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.842 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.843 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.844 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.845 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.846 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.848 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.849 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:12.850 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:12.852 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:12.853 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:12.854 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.854 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.856 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:12.857 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:12.858 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:12.859 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:12.859 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:12.860 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:12.861 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.862 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:12.862 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:12.863 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:12.864 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:12.864 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:12.865 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.866 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:12.866 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:12.866 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:12.866 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:12.866 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:12.871 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.872 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.873 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.874 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.876 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.877 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.878 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.879 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:12.880 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:12.881 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.883 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.884 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.885 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.886 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.888 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.889 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.890 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.890 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.891 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:12.892 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:12.893 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.895 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.896 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.897 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.898 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.900 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.901 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.902 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:12.902 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:12.904 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:12.905 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:12.907 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:12.908 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:12.909 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:12.910 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:12.912 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:12.913 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:12.914 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:12.915 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:12.917 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:12.918 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:12.919 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:12.920 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:12.921 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.922 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.923 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:12.924 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:12.925 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:12.927 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:12.928 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:12.929 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:12.930 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:12.931 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:12.932 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:12.932 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:12.933 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:12.934 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.934 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:12.935 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:12.936 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:12.936 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:12.937 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:12.938 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:12.938 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:12.939 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 10
10:58:12.940 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1834)
10:58:12.940 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:12.940 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1833)
10:58:12.940 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:12.941 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:12.941 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:12.941 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:12.941 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:12.941 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:12.941 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:12.941 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:12.941 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:12.941 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:12.945 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.946 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.948 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.949 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.950 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.950 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.952 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.953 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:12.955 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:12.956 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:12.957 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:12.959 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:12.959 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:12.960 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:12.961 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:12.963 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:12.963 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:12.964 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:12.965 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:12.965 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:12.966 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.967 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:12.967 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:12.968 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:12.969 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:12.969 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:12.970 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:12.971 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:12.971 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:12.971 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:12.971 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:12.971 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:12.975 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:12.977 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:12.978 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.979 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.980 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.981 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.983 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.983 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:12.984 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:12.986 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:12.987 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:12.988 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:12.989 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:12.991 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:12.992 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:12.993 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:12.994 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:12.994 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:12.995 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:12.996 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:12.998 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:12.999 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:13.000 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.001 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.002 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.004 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.005 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.005 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:13.006 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:13.008 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:13.009 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:13.010 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:13.011 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:13.012 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:13.014 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:13.015 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:13.016 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:13.018 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:13.019 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:13.020 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:13.021 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:13.022 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:13.024 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:13.024 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:13.025 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:13.027 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:13.028 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:13.029 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:13.030 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:13.032 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:13.033 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:13.034 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:13.035 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:13.035 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:13.036 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:13.037 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:13.038 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:13.038 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:13.039 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:13.040 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:13.041 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:13.041 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:13.042 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:13.043 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:13.044 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 11
10:58:13.044 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1900)
10:58:13.044 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:13.044 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1899)
10:58:13.044 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:13.045 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:13.045 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:13.045 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:13.045 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:13.045 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:13.046 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:13.046 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:13.046 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:13.046 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:13.050 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:13.051 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:13.053 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:13.054 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:13.055 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:13.055 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:13.057 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:13.058 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:13.060 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:13.061 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:13.062 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:13.077 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:13.078 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:13.078 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:13.080 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:13.081 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:13.082 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:13.082 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:13.083 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:13.084 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:13.085 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:13.085 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:13.086 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:13.087 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:13.087 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:13.088 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:13.089 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:13.090 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:13.090 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:13.090 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:13.090 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:13.090 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:13.094 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:13.095 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:13.097 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.098 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.099 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.100 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.101 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.102 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:13.103 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:13.104 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:13.106 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:13.107 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.108 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.109 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.111 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.112 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.112 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:13.113 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:13.114 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:13.115 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:13.116 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:13.117 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:13.119 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.120 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.121 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.122 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.124 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.124 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:13.125 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:13.127 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:13.128 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:13.129 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:13.130 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:13.132 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:13.133 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:13.134 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:13.136 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:13.137 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:13.138 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:13.139 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:13.140 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:13.142 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:13.143 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:13.144 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:13.144 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:13.146 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:13.147 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:13.148 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:13.150 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:13.151 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:13.152 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:13.153 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:13.154 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:13.155 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:13.155 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:13.156 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:13.157 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:13.157 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:13.158 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:13.159 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:13.159 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:13.160 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:13.161 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:13.162 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:13.163 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 12
10:58:13.163 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=1966)
10:58:13.163 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:13.163 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=1965)
10:58:13.163 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:13.164 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:13.164 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:13.164 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:13.164 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:13.164 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:13.164 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:13.165 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:13.165 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:13.165 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:13.169 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:13.170 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:13.172 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:13.173 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:13.174 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:13.174 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:13.176 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:13.177 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:13.179 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:13.180 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:13.181 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:13.183 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:13.183 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:13.184 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:13.185 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:13.187 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:13.187 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:13.188 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:13.189 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:13.189 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:13.190 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:13.191 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:13.191 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:13.192 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:13.193 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:13.194 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:13.194 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:13.195 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:13.195 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:13.195 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:13.195 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:13.196 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:13.200 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:13.201 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:13.202 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.204 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.205 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.206 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.207 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.208 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:13.209 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:13.210 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:13.212 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:13.213 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.214 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.215 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.216 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.218 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.218 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:13.219 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:13.220 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:13.220 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:13.222 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:13.223 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:13.224 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.225 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.227 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.228 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.229 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.230 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:13.230 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:13.232 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:13.233 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:13.234 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:13.236 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:13.237 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:13.238 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:13.239 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:13.241 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:13.242 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:13.243 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:13.245 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:13.246 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:13.247 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:13.248 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:13.249 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:13.250 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:13.251 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:13.253 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:13.254 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:13.255 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:13.256 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:13.257 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:13.259 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:13.259 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:13.260 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:13.260 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:13.261 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:13.262 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:13.262 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:13.263 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:13.264 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:13.264 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:13.265 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:13.266 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:13.267 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:13.268 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 13
10:58:13.268 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=2032)
10:58:13.268 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:13.268 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=2031)
10:58:13.268 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:13.269 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:13.269 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:13.269 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:13.269 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:13.269 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:13.269 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:13.269 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:13.269 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:13.269 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:13.273 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:13.275 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:13.276 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:13.277 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:13.278 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:13.279 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:13.280 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:13.281 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:13.283 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:13.284 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:13.286 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:13.287 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:13.288 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:13.288 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:13.290 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:13.291 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:13.292 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:13.293 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:13.293 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:13.294 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:13.295 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:13.296 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:13.296 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:13.297 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:13.298 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:13.311 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:13.312 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:13.313 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:13.313 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:13.313 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:13.313 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:13.313 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:13.318 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:13.319 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:13.320 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.322 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.323 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.324 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.325 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.326 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:13.327 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:13.328 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:13.329 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:13.331 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.332 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.333 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.334 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.336 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.336 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:13.337 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:13.338 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:13.338 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:13.340 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:13.341 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:13.342 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.344 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.345 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.346 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.347 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.348 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:13.349 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:13.350 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:13.351 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:13.353 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:13.354 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:13.355 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:13.356 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:13.357 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:13.359 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:13.360 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:13.361 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:13.363 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:13.364 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:13.365 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:13.366 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:13.367 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:13.368 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:13.369 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:13.370 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:13.372 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:13.373 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:13.374 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:13.375 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:13.376 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:13.377 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:13.378 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:13.378 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:13.379 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:13.380 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:13.380 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:13.381 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:13.382 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:13.382 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:13.383 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:13.384 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:13.385 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:13.386 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 14
10:58:13.386 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=2098)
10:58:13.386 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:13.386 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=2097)
10:58:13.386 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:13.387 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:13.387 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:13.387 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:13.387 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:13.387 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:13.387 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:13.387 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:13.387 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:13.387 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:13.392 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:13.393 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:13.394 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:13.396 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:13.396 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:13.397 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:13.399 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:13.400 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:13.401 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:13.403 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:13.404 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:13.405 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:13.406 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:13.407 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:13.408 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:13.410 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:13.410 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:13.411 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:13.411 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:13.412 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:13.413 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:13.414 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:13.414 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:13.415 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:13.416 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:13.416 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:13.417 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:13.418 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:13.418 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:13.418 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:13.418 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:13.418 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:13.422 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:13.423 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:13.425 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.426 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.427 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.428 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.430 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.430 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:13.431 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:13.433 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:13.434 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:13.435 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.436 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.438 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.439 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.440 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.441 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:13.442 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:13.442 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:13.443 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:13.445 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:13.446 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:13.447 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.448 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.450 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.451 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.452 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.453 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:13.453 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:13.455 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:13.456 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:13.458 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:13.459 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:13.460 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:13.461 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:13.463 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:13.464 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:13.465 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:13.467 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:13.468 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:13.469 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:13.471 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:13.472 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:13.473 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:13.473 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:13.475 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:13.476 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:13.477 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:13.479 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:13.480 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:13.481 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:13.482 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:13.483 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:13.484 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:13.484 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:13.485 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:13.486 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:13.486 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:13.487 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:13.488 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:13.488 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:13.489 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:13.490 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:13.491 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:13.492 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.analysis.solvers.LaguerreSolverTest#testQuinticFunction2 iteration 15
10:58:13.492 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=2164)
10:58:13.492 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:13.492 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=2163)
10:58:13.492 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:13.493 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:13.493 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:13.493 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:13.493 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:13.493 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:13.493 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:13.493 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:13.493 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:13.493 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:13.497 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:13.499 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:13.500 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:13.501 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:13.502 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:13.503 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:13.504 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:13.505 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:13.507 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:13.508 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:13.510 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:13.511 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:13.512 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:13.512 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:13.514 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:13.515 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:13.516 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:13.516 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:13.517 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:13.517 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:13.518 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:13.519 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:13.519 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:13.520 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:13.521 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:13.521 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:13.522 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:13.523 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:13.523 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:13.523 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:13.523 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:13.523 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:13.528 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:13.529 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:13.530 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.531 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.533 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.534 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.535 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.536 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:13.536 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:13.538 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:13.539 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:13.540 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.554 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.555 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.556 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.558 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.558 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:13.559 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:13.560 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:13.560 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:13.562 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:13.563 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:13.564 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.566 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.567 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.568 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.569 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.570 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:13.571 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:13.572 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:13.574 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:13.575 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:13.576 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:13.577 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:13.579 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:13.580 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:13.581 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:13.583 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:13.584 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:13.585 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:13.586 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:13.587 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:13.589 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:13.589 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:13.590 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:13.592 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:13.593 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:13.594 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:13.595 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:13.596 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:13.598 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:13.599 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:13.600 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:13.600 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:13.601 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:13.601 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:13.602 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:13.603 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:13.604 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:13.604 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:13.605 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:13.606 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:13.606 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:13.620 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:13.626 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testEqualsNull iteration 0
10:58:13.627 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=null
10:58:13.627 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:13.627 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=2230)
10:58:13.627 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:13.628 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:13.628 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:13.628 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:13.628 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:13.628 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:13.628 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:13.628 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:13.628 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:13.628 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:13.633 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:13.635 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:13.635 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:13.636 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:13.638 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:13.639 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:13.641 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:13.641 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:13.642 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:13.644 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:13.644 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:13.645 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:13.646 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:13.646 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:13.647 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:13.648 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:13.649 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:13.649 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:13.650 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:13.651 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:13.651 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:13.655 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
10:58:13.656 [pool-10247-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] org.apache.commons.math3.complex.ComplexTest#testReciprocalZero iteration 0
10:58:13.657 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] other=instance of org.apache.commons.math3.complex.Complex(id=365)
10:58:13.657 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
10:58:13.657 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of org.apache.commons.math3.complex.Complex(id=364)
10:58:13.661 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other
10:58:13.662 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.I
10:58:13.662 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NaN
10:58:13.662 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INF
10:58:13.662 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ONE
10:58:13.662 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ZERO
10:58:13.662 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.imaginary
10:58:13.662 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.real
10:58:13.663 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNaN
10:58:13.663 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite
10:58:13.667 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) this)
10:58:13.668 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((org.apache.commons.math3.complex.Complex) other)
10:58:13.670 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:13.671 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:13.671 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:13.672 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:13.674 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:13.675 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:13.676 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) this)
10:58:13.678 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.divide((java.lang.Object) other)
10:58:13.679 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) this)
10:58:13.680 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((java.lang.Object) other)
10:58:13.681 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 0)
10:58:13.682 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.multiply((int) 1)
10:58:13.683 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) this)
10:58:13.685 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.subtract((java.lang.Object) other)
10:58:13.685 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.abs()
10:58:13.686 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getImaginary()
10:58:13.687 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getReal()
10:58:13.687 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isInfinite()
10:58:13.688 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:13.689 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.exp()
10:58:13.689 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.log()
10:58:13.690 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt()
10:58:13.691 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sqrt1z()
10:58:13.691 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getArgument()
10:58:13.692 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.negate()
10:58:13.693 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.I
10:58:13.693 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.NaN
10:58:13.693 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.INF
10:58:13.693 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ONE
10:58:13.693 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.ZERO
10:58:13.698 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this)
10:58:13.699 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) other)
10:58:13.700 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.701 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.703 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.704 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.705 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.706 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.imaginary)
10:58:13.707 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((double) this.real)
10:58:13.708 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this)
10:58:13.709 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) other)
10:58:13.711 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.712 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.713 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.714 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.716 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.716 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:13.717 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:13.718 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.imaginary)
10:58:13.718 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((double) this.real)
10:58:13.720 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this)
10:58:13.721 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) other)
10:58:13.723 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.I)
10:58:13.724 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.NaN)
10:58:13.725 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.INF)
10:58:13.726 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ONE)
10:58:13.728 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((org.apache.commons.math3.complex.Complex) this.ZERO)
10:58:13.728 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.imaginary)
10:58:13.729 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((double) this.real)
10:58:13.731 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this)
10:58:13.732 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) other)
10:58:13.733 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.I)
10:58:13.734 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.NaN)
10:58:13.736 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.INF)
10:58:13.737 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ONE)
10:58:13.738 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.divide((java.lang.Object) this.ZERO)
10:58:13.741 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this)
10:58:13.742 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) other)
10:58:13.744 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.I)
10:58:13.745 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.NaN)
10:58:13.746 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.INF)
10:58:13.747 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ONE)
10:58:13.749 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((java.lang.Object) this.ZERO)
10:58:13.749 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 0)
10:58:13.750 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.multiply((int) 1)
10:58:13.752 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this)
10:58:13.753 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) other)
10:58:13.754 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.I)
10:58:13.755 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.NaN)
10:58:13.757 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.INF)
10:58:13.758 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ONE)
10:58:13.759 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.subtract((java.lang.Object) this.ZERO)
10:58:13.760 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.abs()
10:58:13.761 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getImaginary()
10:58:13.761 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getReal()
10:58:13.762 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.isInfinite()
10:58:13.763 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:13.764 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.exp()
10:58:13.764 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.log()
10:58:13.765 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt()
10:58:13.766 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.sqrt1z()
10:58:13.766 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.getArgument()
10:58:13.767 [pool-10247-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] other.negate()
10:58:13.774 [pool-10247-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - Exit


========= Info ==========
Nb constants             15
Nb method invocations    83
Nb field access          3
Nb variables             3
Total                    104
Nb evaluated expressions 2
Init Execution time      787 ms
Collect Execution time   3006 ms
Combine Execution time   45.0 ms
Nb Combination par sec   44 combinations/sec
Total Execution time     3838 ms
Nb line execution        27
Nb results               1

Results:
1. i > 1


========================
         Stat
========================
Operators: 
EQ 3
INSTANCEOF 1
AND 1
Methods: 
Variable: 
imaginary 4
real 4
isNaN 4
other 3
c 3

 & 15 & 83 & 3 & 3 & 104 & 2 & 3838 ms & 27 &
10:58:13.819 [pool-10247-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: org.apache.commons.math3.complex.Complex:340: CONDITIONAL i > 1
10:58:14.120 [pool-10247-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:138: error: cannot find symbol
        if (i > 1) {
            ^
  symbol:   variable i
  location: class org.apache.commons.math3.complex.Complex
10:58:14.120 [pool-10247-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Patch malformed i > 1
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99) ~[nopol.jar:na]
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140) ~[nopol.jar:na]
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135) ~[nopol.jar:na]
	at fr.inria.lille.repair.nopol.patch.TestPatch.passesAllTests(TestPatch.java:60) ~[nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.isOk(NoPol.java:317) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:302) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81) [nopol.jar:na]
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
10:58:14.122 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: invalid patch
10:58:14.122 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
10:58:14.122 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:217 which is executed by 111 tests
1648821820
10:58:14.324 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
10:58:14.324 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:216 which is executed by 111 tests
1648821820
10:58:14.525 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:58:24.157 [pool-12672-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9598 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:58:24.584 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
10:58:24.584 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:207 which is executed by 112 tests
1648821820
10:58:24.783 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
10:58:24.783 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:205 which is executed by 112 tests
1648821820
10:58:24.980 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:58:34.174 [pool-12676-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9188 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:58:34.606 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
10:58:34.606 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:203 which is executed by 112 tests
1648821820
10:58:34.805 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:58:43.915 [pool-12680-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9105 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:58:44.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
10:58:44.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:199 which is executed by 112 tests
1648821820
10:58:44.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:58:53.715 [pool-12684-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9181 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:58:54.169 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
10:58:54.169 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:198 which is executed by 112 tests
1648821820
10:58:54.368 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:59:03.549 [pool-12688-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9176 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:59:03.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
10:59:03.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:197 which is executed by 112 tests
1648821820
10:59:04.184 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:59:13.525 [pool-12692-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9336 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:59:13.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:59:23.095 [pool-12696-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9123 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:59:23.499 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
10:59:23.499 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:196 which is executed by 112 tests
1648821820
10:59:23.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:59:32.845 [pool-12700-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9142 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:59:33.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
10:59:33.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:195 which is executed by 112 tests
1648821820
10:59:33.466 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:59:42.646 [pool-12704-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9174 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:59:43.049 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
10:59:43.050 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:194 which is executed by 112 tests
1648821820
10:59:43.248 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
10:59:43.248 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:193 which is executed by 112 tests
1648821820
10:59:43.446 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
10:59:43.446 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:192 which is executed by 112 tests
1648821820
10:59:43.657 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
10:59:43.657 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:191 which is executed by 112 tests
1648821820
10:59:43.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:59:52.990 [pool-12708-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9128 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:59:53.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
10:59:53.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:187 which is executed by 112 tests
1648821820
10:59:53.606 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:00:02.729 [pool-12712-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9118 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:00:03.145 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
11:00:03.145 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:186 which is executed by 112 tests
1648821820
11:00:03.355 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:00:12.488 [pool-12716-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9128 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:00:12.897 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:00:22.178 [pool-12720-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9276 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:00:22.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
11:00:22.572 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:184 which is executed by 112 tests
1648821820
11:00:22.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:00:31.971 [pool-12724-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9196 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:00:32.409 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
11:00:32.409 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:183 which is executed by 112 tests
1648821820
11:00:32.608 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:00:41.764 [pool-12728-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9150 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:00:42.160 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
11:00:42.160 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:182 which is executed by 112 tests
1648821820
11:00:42.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:00:51.493 [pool-12732-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9130 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:00:51.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:01:01.189 [pool-12736-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9291 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:01:01.581 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
11:01:01.581 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:181 which is executed by 112 tests
1648821820
11:01:01.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:01:11.005 [pool-12740-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9221 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:01:11.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
11:01:11.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:180 which is executed by 112 tests
1648821820
11:01:11.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:01:20.748 [pool-12744-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9131 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:01:21.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
11:01:21.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:179 which is executed by 112 tests
1648821820
11:01:21.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
11:01:21.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:178 which is executed by 112 tests
1648821820
11:01:21.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
11:01:21.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:177 which is executed by 112 tests
1648821820
11:01:21.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
11:01:21.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:176 which is executed by 112 tests
1648821820
11:01:21.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:01:31.116 [pool-12748-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9164 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:01:31.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
11:01:31.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:174 which is executed by 112 tests
1648821820
11:01:31.704 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
11:01:31.704 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:173 which is executed by 112 tests
1648821820
11:01:31.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
11:01:31.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:172 which is executed by 112 tests
1648821820
11:01:32.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:01:41.261 [pool-12752-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9157 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:01:41.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
11:01:41.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:167 which is executed by 112 tests
1648821820
11:01:41.847 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:01:51.082 [pool-12756-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9230 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:01:51.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:02:00.649 [pool-12760-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9160 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:02:01.115 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
11:02:01.115 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1490 which is executed by 156 tests
68623
11:02:01.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
11:02:01.375 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1487 which is executed by 156 tests
68623
11:02:01.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:02:10.766 [pool-12764-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9132 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:02:11.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
11:02:11.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1486 which is executed by 156 tests
68623
11:02:11.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:02:20.904 [pool-12768-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9170 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:02:21.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
11:02:21.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1484 which is executed by 156 tests
68623
11:02:21.854 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:02:31.009 [pool-12772-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9149 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:02:31.724 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:02:40.887 [pool-12776-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9158 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:02:41.590 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
11:02:41.590 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1478 which is executed by 156 tests
68623
11:02:41.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:02:50.948 [pool-12780-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9098 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:02:51.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:03:00.801 [pool-12784-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9213 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:03:01.395 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
11:03:01.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1472 which is executed by 156 tests
68623
11:03:01.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:03:10.826 [pool-12788-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9174 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:03:11.408 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:03:20.630 [pool-12792-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9215 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:03:21.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
11:03:21.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1465 which is executed by 156 tests
68623
11:03:21.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:03:30.987 [pool-12796-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9493 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:03:31.625 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:03:40.860 [pool-12800-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9230 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:03:41.524 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
11:03:41.525 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1462 which is executed by 156 tests
68623
11:03:41.773 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:03:51.012 [pool-12804-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9234 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:03:51.662 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
11:03:51.662 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1461 which is executed by 156 tests
68623
11:03:51.910 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:04:01.142 [pool-12808-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9227 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

11:07:21.542 [pool-12807-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
11:07:21.543 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
11:07:21.543 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
11:07:21.543 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1460 which is executed by 156 tests
68623
11:07:21.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
11:07:21.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1459 which is executed by 156 tests
68623
11:07:22.056 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:07:31.276 [pool-12811-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9208 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:08:12.367 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
11:08:12.367 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1458 which is executed by 156 tests
68623
11:08:12.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
11:08:12.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1456 which is executed by 156 tests
68623
11:08:12.860 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:08:22.228 [pool-12815-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9363 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:08:22.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:08:32.047 [pool-12819-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9175 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:08:32.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
11:08:32.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1440 which is executed by 156 tests
68623
11:08:32.866 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:08:42.077 [pool-12823-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9206 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:08:42.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
11:08:42.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1439 which is executed by 156 tests
68623
11:08:42.903 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:08:52.160 [pool-12827-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9252 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:08:52.773 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
11:08:52.774 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1421 which is executed by 156 tests
68623
11:08:53.029 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:09:02.231 [pool-12831-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9197 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:09:02.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
11:09:02.841 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1420 which is executed by 156 tests
68623
11:09:03.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
11:09:03.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:644 which is executed by 156 tests
68623
11:09:03.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
11:09:03.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:601 which is executed by 156 tests
1857420685
11:09:03.531 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
11:09:03.531 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:578 which is executed by 156 tests
1857420685
11:09:03.759 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:09:13.073 [pool-12835-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9309 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:09:13.585 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:09:22.826 [pool-12839-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9230 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:09:23.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
11:09:23.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:570 which is executed by 156 tests
1857420685
11:09:23.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
11:09:23.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:568 which is executed by 156 tests
1857420685
11:09:23.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:09:32.940 [pool-12843-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9153 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:09:33.360 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
11:09:33.360 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:564 which is executed by 156 tests
1857420685
11:09:33.563 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:09:42.904 [pool-12847-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9336 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:09:43.347 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
11:09:43.347 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:563 which is executed by 156 tests
1857420685
11:09:43.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:09:52.745 [pool-12851-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9190 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:09:53.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:10:02.347 [pool-12855-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9156 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:10:02.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
11:10:02.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:562 which is executed by 156 tests
1857420685
11:10:02.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:10:12.184 [pool-12859-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9179 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:10:12.616 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
11:10:12.616 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:561 which is executed by 156 tests
1857420685
11:10:12.819 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:10:21.989 [pool-12863-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9147 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:10:22.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
11:10:22.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:559 which is executed by 156 tests
1857420685
11:10:22.631 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:10:31.805 [pool-12867-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9145 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:10:32.328 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
11:10:32.328 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:555 which is executed by 156 tests
1857420685
11:10:32.531 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:10:41.796 [pool-12871-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9261 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:10:42.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
11:10:42.253 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:554 which is executed by 156 tests
1857420685
11:10:42.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:10:51.686 [pool-12875-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9214 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:10:52.085 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:11:01.263 [pool-12879-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9152 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:11:01.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
11:11:01.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:551 which is executed by 156 tests
1857420685
11:11:01.868 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:11:11.041 [pool-12883-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9161 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:11:11.481 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
11:11:11.481 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:550 which is executed by 156 tests
1857420685
11:11:11.684 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:11:20.906 [pool-12887-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9217 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:11:21.311 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
11:11:21.311 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:549 which is executed by 156 tests
1857420685
11:11:21.514 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:11:30.657 [pool-12891-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9137 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:11:31.081 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:11:40.281 [pool-12895-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9193 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

11:11:40.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
11:11:40.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:546 which is executed by 156 tests
1857420685
11:11:40.893 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:11:50.094 [pool-12899-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9196 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:11:50.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
11:11:50.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:545 which is executed by 156 tests
1857420685
11:11:50.709 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:12:00.140 [pool-12903-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9408 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:12:00.553 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
11:12:00.553 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:544 which is executed by 156 tests
1857420685
11:12:00.755 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:12:09.893 [pool-12907-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9132 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:12:10.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:12:19.515 [pool-12911-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9219 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:12:19.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
11:12:19.920 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:541 which is executed by 156 tests
1857420685
11:12:20.122 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:12:29.307 [pool-12915-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9180 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:12:29.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
11:12:29.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:540 which is executed by 156 tests
1857420685
11:12:29.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:12:39.096 [pool-12919-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9169 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:12:39.535 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:12:48.760 [pool-12923-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9216 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:12:49.188 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
11:12:49.188 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:538 which is executed by 156 tests
1857420685
11:12:49.401 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:12:58.641 [pool-12927-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9235 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:12:59.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
11:12:59.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:537 which is executed by 156 tests
1857420685
11:12:59.256 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:13:08.448 [pool-12931-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9188 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:13:08.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
11:13:08.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:535 which is executed by 156 tests
1857420685
11:13:09.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
11:13:09.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:533 which is executed by 156 tests
1857420685
11:13:09.292 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
11:13:09.292 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:532 which is executed by 156 tests
1857420685
11:13:09.494 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
11:13:09.494 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:531 which is executed by 156 tests
1857420685
11:13:09.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
11:13:09.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:530 which is executed by 156 tests
1857420685
11:13:09.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
11:13:09.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:332 which is executed by 156 tests
1857420685
11:13:10.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
11:13:10.102 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:331 which is executed by 156 tests
1857420685
11:13:10.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:13:19.542 [pool-12935-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9228 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:13:19.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
11:13:19.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:269 which is executed by 156 tests
1857420685
11:13:20.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
11:13:20.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:251 which is executed by 156 tests
1857420685
11:13:20.364 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
11:13:20.365 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:155 which is executed by 160 tests
1648821820
11:13:20.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
11:13:20.579 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:154 which is executed by 160 tests
1648821820
11:13:20.777 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:13:29.934 [pool-12939-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9152 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:13:30.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
11:13:30.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:151 which is executed by 160 tests
1648821820
11:13:30.545 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:13:39.713 [pool-12943-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9163 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:13:40.107 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
11:13:40.107 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:150 which is executed by 160 tests
1648821820
11:13:40.317 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:13:49.476 [pool-12947-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9154 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:13:49.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
11:13:49.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:147 which is executed by 160 tests
1648821820
11:13:50.160 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:13:59.394 [pool-12951-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9229 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:13:59.846 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
11:13:59.846 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:146 which is executed by 160 tests
1648821820
11:14:00.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:14:09.260 [pool-12955-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9197 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:14:09.654 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
11:14:09.655 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:144 which is executed by 160 tests
1648821820
11:14:09.852 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
11:14:09.852 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3489 which is executed by 371 tests
1033054629
11:14:10.165 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
11:14:10.165 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:196 which is executed by 1235 tests
936233262
11:14:10.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
11:14:10.363 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:195 which is executed by 1235 tests
936233262
11:14:10.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
11:14:19.753 [pool-12959-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9188 ms)
<> Total tests run: 47
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
11:14:20.159 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
11:14:20.393 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 714
11:14:20.393 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 4789
11:14:20.393 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 85
11:14:20.393 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 2
11:14:20.393 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 1985976ms
11:14:20.394 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_ANGELIC_VALUE
Command exited with non-zero status 255
2898.44user 26.84system 33:08.42elapsed 147%CPU (0avgtext+0avgdata 3401864maxresident)k
54848inputs+15936outputs (7major+1276201minor)pagefaults 0swaps


Node: graphene-68.nancy.grid5000.fr



Date: Sat Dec  1 11:14:20 EST 2018

