cd /tmp/Nopol_Defects4J_Math_26;
export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 5 \
	--source src/main/java/ \
	--classpath "target/classes/:target/test-classes/:/tmp/Nopol_Defects4J_Math_26/target/classes/:/tmp/Nopol_Defects4J_Math_26/target/test-classes/:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
23:45:57.279 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
23:45:57.295 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/Nopol_Defects4J_Math_26/target/classes/, file:/tmp/Nopol_Defects4J_Math_26/target/test-classes/, file:/tmp/Nopol_Defects4J_Math_26/target/classes/, file:/tmp/Nopol_Defects4J_Math_26/target/test-classes/, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
23:45:57.295 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
23:45:57.295 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest]
23:45:57.299 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@66d33a', projectTests=[org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.RetryRunnerTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.FunctionUtilsTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.GaussianTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.HarmonicOscillatorTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogisticTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.LogitTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SigmoidTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SincTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.SqrtTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.function.StepFunctionTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.RombergIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.integration.gauss.LegendreTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BisectionSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.BrentSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.IllinoisSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.LaguerreSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolver2Test, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.MullerSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.NewtonSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.PegasusSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.RiddersSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.SecantSolverTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFieldTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexFormatTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.ComplexUtilsTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.FrenchComplexFormatTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.complex.RootsOfUnityTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpDecTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpMathTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.dfp.DfpTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractIntegerDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.AbstractRealDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BetaDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.BinomialDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.CauchyDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ChiSquaredDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.ExponentialDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.FDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.GammaDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.HypergeometricDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.LogNormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.NormalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PascalDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.PoissonDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.TriangularDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformIntegerDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.UniformRealDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.WeibullDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.distribution.ZipfDistributionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.DimensionMismatchExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.MaxCountExceededExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.OutOfRangeExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ArgUtilsTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.ExceptionContextTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.exception.util.LocalizedFormatsTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.filter.KalmanFilterTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFieldTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionFormatTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.BigFractionTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFieldTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionFormatTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.fraction.FractionTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryChromosomeTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.BinaryMutationTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ChromosomeTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.ElitisticListPopulationTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FitnessCachingTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedElapsedTimeTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.FixedGenerationCountTest, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.ListPopulationTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.NPointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.OnePointCrossoverTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyMutationTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.RandomKeyTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.TournamentSelectionTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.genetics.UniformCrossoverTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.LineTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PlaneTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.RotationTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.SubLineTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.LineTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.euclidean.twod.SubLineTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.Array2DRowRealMatrixTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayFieldVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.ArrayRealVectorTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BiDiagonalTransformerTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockFieldMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.BlockRealMatrixTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskyDecompositionTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.CholeskySolverTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.ConjugateGradientTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenDecompositionTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.EigenSolverTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUDecompositionTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldLUSolverTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FieldMatrixImplTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.FrenchRealVectorFormatTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.HessenbergTransformerTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUDecompositionTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.LUSolverTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.MatrixUtilsTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.OpenMapRealMatrixTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRDecompositionTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.QRSolverTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealMatrixFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorFormatTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.RealVectorTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SchurTransformerTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueDecompositionTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SingularValueSolverTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldMatrixTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseFieldVectorTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealMatrixTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SparseRealVectorTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.SymmLQTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.TriDiagonalTransformerTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.ContinuousOutputModelTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.FirstOrderConverterTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.JacobianMatricesTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.EventStateTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.OverlappingEventsTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.events.ReappearingEventTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillIntegratorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.ode.sampling.StepNormalizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.PointVectorValuePairTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.CMAESOptimizerTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.PowellOptimizerTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.CurveFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.GaussianFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.HarmonicFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.fitting.PolynomialFitterTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.MinpackTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexSolverTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.linear.SimplexTableauTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BracketFinderTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.BrentOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.AbstractRandomGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.BitsStreamGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.EmpiricalDistributionTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.GaussianRandomGeneratorTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.ISAACTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.MersenneTwisterTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomAdaptorTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomDataTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.RandomGeneratorAbstractTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.StableRandomGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.UniformRandomGeneratorTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.ValueServerTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well1024aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937aTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well19937cTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497aTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well44497bTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.random.Well512aTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.BetaTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.ErfTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.special.GammaTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.CertifiedDataTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.FrequencyTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.StatUtilsTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.CovarianceTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.correlation.StorelessCovarianceTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LewTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.data.LotteryTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.InteractionTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.KurtosisTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.MeanTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.SkewnessTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MaxTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MedianTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.MinTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.rank.PercentileTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.ProductTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumLogTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumSqTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.descriptive.summary.SumTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.ChiSquareTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.MannWhitneyUTestTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.OneWayAnovaTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TTestTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.TestUtilsTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.ranking.NaturalRankingTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.stat.regression.SimpleRegressionTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastCosineTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastFourierTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastHadamardTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.transform.FastSineTransformerTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.ArithmeticUtilsTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealFieldTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.BigRealTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.ContinuedFractionTest, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.Decimal64Test, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.DefaultTransformerTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathStrictComparisonTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTest, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.FastMathTestPerformance, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.IncrementorTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathArraysTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MathUtilsTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.MultidimensionalCounterTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToDoubleHashMapTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.OpenIntToFieldTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PairTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.PrecisionTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.ResizableDoubleArrayTest, org.apache.commons.math3.util.TransformerMapTest, org.apache.commons.math3.util.TransformerMapTest], complianceLevel=5, outputFolder=., json=true}
23:45:57.300 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 8
23:45:57.313 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 226 MB
23:45:57.313 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
23:45:57.313 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 241 MB
23:45:57.313 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
23:45:57.315 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
23:45:57.315 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
23:57:15.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
23:57:15.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.MathIllegalStateException:74 which is executed by 47 tests
-614386291
23:57:15.878 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
23:57:15.878 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:601 which is executed by 78 tests
1857420685
23:57:16.183 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
23:57:16.183 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:578 which is executed by 78 tests
1857420685
23:57:16.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:57:32.632 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16124 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.NullPointerException
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:349)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
23:57:34.100 [pool-5-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:349)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:57:34.333 [pool-6-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (229 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

23:57:34.335 [pool-3-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): null]
23:57:34.335 [pool-3-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:57:34.335 [pool-3-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:578.
23:57:34.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:57:49.810 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15464 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.NullPointerException
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:349)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
23:57:50.278 [pool-9-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:349)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:96)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:57:50.540 [pool-10-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (260 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

23:57:50.541 [pool-7-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): null]
23:57:50.541 [pool-7-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:57:50.541 [pool-7-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:578.
23:57:50.542 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
23:57:50.542 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:570 which is executed by 78 tests
1857420685
23:57:50.809 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
23:57:50.809 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:568 which is executed by 78 tests
1857420685
23:57:51.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:58:06.277 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15199 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:58:07.070 [pool-13-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (249 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:58:07.079 [pool-14-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

23:58:07.088 [pool-11-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:58:07.089 [pool-11-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:58:07.089 [pool-11-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:568.
23:58:07.089 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
23:58:07.089 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:564 which is executed by 78 tests
1857420685
23:58:07.354 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:58:22.465 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15103 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:58:23.232 [pool-17-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (295 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:58:23.244 [pool-18-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

23:58:23.245 [pool-15-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:58:23.246 [pool-15-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:58:23.246 [pool-15-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:564.
23:58:23.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
23:58:23.247 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:563 which is executed by 78 tests
1857420685
23:58:23.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:58:38.728 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15206 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:58:39.508 [pool-21-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (306 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:58:39.567 [pool-22-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (57 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

23:58:39.568 [pool-19-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:58:39.568 [pool-19-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:58:39.568 [pool-19-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:563.
23:58:39.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:58:54.756 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15178 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:58:55.477 [pool-25-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (284 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:58:55.536 [pool-26-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (55 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

23:58:55.537 [pool-23-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:58:55.538 [pool-23-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:58:55.538 [pool-23-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:563.
23:58:55.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
23:58:55.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:562 which is executed by 78 tests
1857420685
23:58:55.799 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:59:11.299 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15492 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:59:11.994 [pool-29-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (279 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:59:12.044 [pool-30-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (48 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

23:59:12.045 [pool-27-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:59:12.046 [pool-27-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:59:12.046 [pool-27-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:562.
23:59:12.047 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
23:59:12.047 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:561 which is executed by 78 tests
1857420685
23:59:12.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:59:27.596 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15280 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:59:28.268 [pool-33-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (269 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:59:28.272 [pool-34-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

23:59:28.273 [pool-31-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:59:28.273 [pool-31-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:59:28.273 [pool-31-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:561.
23:59:28.274 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
23:59:28.274 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:559 which is executed by 78 tests
1857420685
23:59:28.531 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:59:43.748 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15208 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:59:44.370 [pool-37-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (234 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
23:59:44.379 [pool-38-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

23:59:44.380 [pool-35-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:59:44.380 [pool-35-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
23:59:44.380 [pool-35-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:559.
23:59:44.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
23:59:44.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:555 which is executed by 78 tests
1857420685
23:59:44.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:00:00.807 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (16158 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:00:01.446 [pool-41-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (238 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:00:01.468 [pool-42-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:00:01.469 [pool-39-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:00:01.469 [pool-39-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:00:01.469 [pool-39-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:555.
00:00:01.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
00:00:01.470 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:554 which is executed by 78 tests
1857420685
00:00:01.728 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:00:16.954 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15217 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:00:17.591 [pool-45-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (248 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:00:17.605 [pool-46-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:00:17.606 [pool-43-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:00:17.606 [pool-43-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:00:17.607 [pool-43-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:554.
00:00:17.607 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:00:32.737 [pool-48-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15119 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:00:33.341 [pool-49-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (234 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:343)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:00:33.356 [pool-50-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:00:33.357 [pool-47-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:00:33.357 [pool-47-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:00:33.357 [pool-47-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:554.
00:00:33.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
00:00:33.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:551 which is executed by 78 tests
1857420685
00:00:33.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:00:48.752 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15132 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:00:49.370 [pool-53-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (252 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:00:49.383 [pool-54-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:00:49.384 [pool-51-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:00:49.384 [pool-51-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:00:49.385 [pool-51-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:551.
00:00:49.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
00:00:49.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:550 which is executed by 78 tests
1857420685
00:00:49.643 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:01:04.900 [pool-56-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15249 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:01:05.518 [pool-57-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (231 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:01:05.528 [pool-58-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:01:05.529 [pool-55-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:01:05.529 [pool-55-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:01:05.529 [pool-55-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:550.
00:01:05.530 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
00:01:05.530 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:549 which is executed by 78 tests
1857420685
00:01:05.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:01:21.001 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15199 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:01:21.740 [pool-61-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (355 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:01:21.755 [pool-62-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:01:21.756 [pool-59-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:01:21.756 [pool-59-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:01:21.756 [pool-59-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:549.
00:01:21.756 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:01:36.861 [pool-64-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15098 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:01:37.483 [pool-65-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (247 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:01:37.492 [pool-66-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:340)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

00:01:37.493 [pool-63-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:01:37.493 [pool-63-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:01:37.493 [pool-63-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:549.
00:01:37.493 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
00:01:37.494 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:546 which is executed by 78 tests
1857420685
00:01:37.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:01:52.959 [pool-68-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15199 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:01:53.602 [pool-69-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (284 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:01:53.606 [pool-70-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:01:53.607 [pool-67-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:01:53.607 [pool-67-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:01:53.607 [pool-67-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:546.
00:01:53.608 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
00:01:53.608 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:545 which is executed by 78 tests
1857420685
00:01:53.865 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:02:09.047 [pool-72-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15172 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:02:09.643 [pool-73-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (238 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:02:09.647 [pool-74-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:02:09.648 [pool-71-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:02:09.648 [pool-71-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:02:09.648 [pool-71-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:545.
00:02:09.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
00:02:09.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:544 which is executed by 78 tests
1857420685
00:02:09.902 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:02:25.085 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15159 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:02:25.694 [pool-77-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (240 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:02:25.702 [pool-78-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:02:25.703 [pool-75-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:02:25.703 [pool-75-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:02:25.703 [pool-75-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:544.
00:02:25.704 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:02:40.853 [pool-80-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15140 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:02:41.608 [pool-81-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (399 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:02:41.613 [pool-82-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:02:41.614 [pool-79-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:02:41.614 [pool-79-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:02:41.615 [pool-79-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:544.
00:02:41.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
00:02:41.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:541 which is executed by 78 tests
1857420685
00:02:41.879 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:02:57.107 [pool-84-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15220 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:02:57.696 [pool-85-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (236 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:02:57.705 [pool-86-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:02:57.706 [pool-83-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:02:57.706 [pool-83-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:02:57.706 [pool-83-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:541.
00:02:57.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
00:02:57.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:540 which is executed by 78 tests
1857420685
00:02:57.960 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:03:13.241 [pool-88-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15271 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:03:13.866 [pool-89-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (243 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:03:13.875 [pool-90-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:03:13.877 [pool-87-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:03:13.877 [pool-87-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:03:13.877 [pool-87-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:540.
00:03:13.877 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:03:28.982 [pool-92-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15097 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:03:29.599 [pool-93-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (264 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:03:29.608 [pool-94-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:03:29.609 [pool-91-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:03:29.609 [pool-91-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:03:29.609 [pool-91-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:540.
00:03:29.609 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
00:03:29.609 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:538 which is executed by 78 tests
1857420685
00:03:29.871 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:03:45.103 [pool-96-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15224 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:03:45.680 [pool-97-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (232 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:03:45.694 [pool-98-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:03:45.695 [pool-95-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:03:45.695 [pool-95-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:03:45.695 [pool-95-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:538.
00:03:45.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
00:03:45.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:537 which is executed by 78 tests
1857420685
00:03:45.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:04:01.147 [pool-100-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15190 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:04:01.749 [pool-101-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (254 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:412)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:337)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:97)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:83)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:04:01.759 [pool-102-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:04:01.760 [pool-99-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:04:01.760 [pool-99-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:04:01.760 [pool-99-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:537.
00:04:01.760 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
00:04:01.760 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:535 which is executed by 78 tests
1857420685
00:04:02.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
00:04:02.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:533 which is executed by 78 tests
1857420685
00:04:02.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
00:04:02.265 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:532 which is executed by 78 tests
1857420685
00:04:02.515 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
00:04:02.516 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:531 which is executed by 78 tests
1857420685
00:04:02.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
00:04:02.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:530 which is executed by 78 tests
1857420685
00:04:03.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
00:04:03.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:332 which is executed by 78 tests
1857420685
00:04:03.272 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
00:04:03.273 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:331 which is executed by 78 tests
1857420685
00:04:03.525 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:04:18.744 [pool-104-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15211 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:04:19.665 [pool-105-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (591 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:04:19.671 [pool-106-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:04:19.672 [pool-103-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:04:19.672 [pool-103-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:04:19.672 [pool-103-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.DfpField:331.
00:04:19.673 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
00:04:19.673 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:269 which is executed by 78 tests
1857420685
00:04:19.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
00:04:19.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.DfpField:251 which is executed by 78 tests
1857420685
00:04:20.189 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
00:04:20.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1488 which is executed by 78 tests
68623
00:04:20.510 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
00:04:20.510 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1485 which is executed by 78 tests
68623
00:04:20.820 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:04:36.053 [pool-108-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15225 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:04:37.202 [pool-109-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (570 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:04:37.208 [pool-110-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:04:37.209 [pool-107-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:04:37.209 [pool-107-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:04:37.209 [pool-107-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1485.
00:04:37.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
00:04:37.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1484 which is executed by 78 tests
68623
00:04:37.528 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:04:52.913 [pool-112-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15377 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:04:54.010 [pool-113-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (563 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:04:54.016 [pool-114-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:04:54.017 [pool-111-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:04:54.017 [pool-111-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:04:54.017 [pool-111-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1484.
00:04:54.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
00:04:54.018 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1482 which is executed by 78 tests
68623
00:04:54.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:05:09.435 [pool-116-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15098 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:05:10.536 [pool-117-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (588 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:05:10.543 [pool-118-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:05:10.544 [pool-115-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:05:10.544 [pool-115-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:05:10.544 [pool-115-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1482.
00:05:10.544 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:05:25.775 [pool-120-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15223 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:05:27.059 [pool-121-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (782 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:05:27.067 [pool-122-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:05:27.070 [pool-119-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:05:27.070 [pool-119-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:05:27.070 [pool-119-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1482.
00:05:27.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
00:05:27.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1476 which is executed by 78 tests
68623
00:05:27.378 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:05:42.615 [pool-124-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15228 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:05:43.721 [pool-125-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (614 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:05:43.731 [pool-126-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:05:43.732 [pool-123-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:05:43.732 [pool-123-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:05:43.732 [pool-123-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1476.
00:05:43.732 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:05:58.942 [pool-128-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15201 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:06:00.026 [pool-129-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (591 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:06:00.032 [pool-130-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:06:00.033 [pool-127-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:06:00.033 [pool-127-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:06:00.033 [pool-127-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1476.
00:06:00.033 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
00:06:00.033 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1470 which is executed by 78 tests
68623
00:06:00.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:06:15.572 [pool-132-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15233 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:06:16.639 [pool-133-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (580 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:06:16.644 [pool-134-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:06:16.645 [pool-131-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:06:16.645 [pool-131-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:06:16.645 [pool-131-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1470.
00:06:16.645 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:06:31.821 [pool-136-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15168 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:06:32.878 [pool-137-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (576 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:06:32.887 [pool-138-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:06:32.888 [pool-135-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:06:32.888 [pool-135-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:06:32.888 [pool-135-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1470.
00:06:32.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
00:06:32.888 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1463 which is executed by 78 tests
68623
00:06:33.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:06:48.456 [pool-140-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15262 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:06:49.340 [pool-141-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (404 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:06:49.344 [pool-142-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:06:49.344 [pool-139-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:06:49.344 [pool-139-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:06:49.344 [pool-139-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1463.
00:06:49.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:07:04.428 [pool-144-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15075 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:07:05.331 [pool-145-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (426 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:07:05.335 [pool-146-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:07:05.342 [pool-143-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:07:05.342 [pool-143-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:07:05.342 [pool-143-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1463.
00:07:05.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
00:07:05.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1460 which is executed by 78 tests
68623
00:07:05.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:07:20.843 [pool-148-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15194 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:07:33.607 [pool-149-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12286 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:07:33.642 [pool-150-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:07:33.643 [pool-147-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:07:33.643 [pool-147-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:07:33.643 [pool-147-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1460.
00:07:33.643 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
00:07:33.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1459 which is executed by 78 tests
68623
00:07:33.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:07:49.411 [pool-152-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15438 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:11:09.906 [pool-151-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
00:11:09.907 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
00:11:09.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
00:11:09.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1458 which is executed by 78 tests
68623
00:11:10.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
00:11:10.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1457 which is executed by 78 tests
68623
00:11:10.505 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:11:25.715 [pool-155-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15202 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StringIndexOutOfBoundsException: String index out of range: 0
    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:212)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)
00:12:57.155 [pool-156-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (90978 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[String index out of range: 0]
java.lang.StringIndexOutOfBoundsException: String index out of range: 0    at java.lang.String.charAt(String.java:658)
    at org.apache.commons.math3.dfp.Dfp.<init>(Dfp.java:217)
    at org.apache.commons.math3.dfp.DfpField.split(DfpField.java:559)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:212)
    at org.apache.commons.math3.dfp.DfpField.<init>(DfpField.java:177)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:45)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:12:57.539 [pool-157-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (380 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:12:57.540 [pool-154-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): String index out of range: 0]
00:12:57.540 [pool-154-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:12:57.540 [pool-154-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1457.
00:12:57.541 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
00:12:57.541 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1456 which is executed by 78 tests
68623
00:12:57.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
00:12:57.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1454 which is executed by 78 tests
68623
00:12:58.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:13:13.764 [pool-159-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15552 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:13:14.892 [pool-160-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (651 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:13:14.897 [pool-161-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:13:14.897 [pool-158-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:13:14.898 [pool-158-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:13:14.898 [pool-158-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1454.
00:13:14.898 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:13:30.142 [pool-163-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15237 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:13:31.191 [pool-164-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (587 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:13:31.197 [pool-165-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:13:31.197 [pool-162-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:13:31.198 [pool-162-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:13:31.198 [pool-162-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1454.
00:13:31.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
00:13:31.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1438 which is executed by 78 tests
68623
00:13:31.494 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:13:46.860 [pool-167-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15359 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:13:47.975 [pool-168-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (591 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:13:47.981 [pool-169-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:13:47.982 [pool-166-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:13:47.983 [pool-166-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:13:47.983 [pool-166-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1438.
00:13:47.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
00:13:47.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1437 which is executed by 78 tests
68623
00:13:48.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:14:03.635 [pool-171-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15346 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:14:04.690 [pool-172-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (596 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:14:04.695 [pool-173-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:14:04.696 [pool-170-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:14:04.696 [pool-170-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:14:04.696 [pool-170-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1437.
00:14:04.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
00:14:04.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1419 which is executed by 78 tests
68623
00:14:04.992 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:14:20.395 [pool-175-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15396 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:14:21.422 [pool-176-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (568 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:14:21.429 [pool-177-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:14:21.430 [pool-174-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:14:21.430 [pool-174-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:14:21.430 [pool-174-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.dfp.Dfp:1419.
00:14:21.430 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
00:14:21.430 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:1418 which is executed by 78 tests
68623
00:14:21.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
00:14:21.726 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.dfp.Dfp:642 which is executed by 78 tests
68623
00:14:22.015 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
00:14:22.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:217 which is executed by 82 tests
1648821820
00:14:22.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
00:14:22.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:216 which is executed by 82 tests
1648821820
00:14:22.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:14:37.700 [pool-179-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15186 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:14:38.258 [pool-180-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (250 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:14:38.262 [pool-181-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:14:38.262 [pool-178-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:14:38.263 [pool-178-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:14:38.263 [pool-178-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:216.
00:14:38.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
00:14:38.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:207 which is executed by 83 tests
1648821820
00:14:38.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
00:14:38.510 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:205 which is executed by 83 tests
1648821820
00:14:38.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:14:53.989 [pool-183-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15229 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:14:54.541 [pool-184-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (260 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:14:54.544 [pool-185-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:14:54.545 [pool-182-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:14:54.545 [pool-182-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:14:54.545 [pool-182-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:205.
00:14:54.545 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
00:14:54.546 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:203 which is executed by 83 tests
1648821820
00:14:54.789 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:10.145 [pool-187-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15348 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:10.680 [pool-188-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (244 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:10.702 [pool-189-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:15:10.703 [pool-186-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:10.703 [pool-186-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:10.703 [pool-186-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:203.
00:15:10.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
00:15:10.704 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:199 which is executed by 83 tests
1648821820
00:15:10.951 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:26.164 [pool-191-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15201 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 624
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:71)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:111)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:26.683 [pool-192-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (230 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[624]
java.lang.ArrayIndexOutOfBoundsException: 624    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:71)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:111)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:26.686 [pool-193-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:15:26.687 [pool-190-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 624]
00:15:26.687 [pool-190-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:26.687 [pool-190-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:199.
00:15:26.687 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
00:15:26.687 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:198 which is executed by 83 tests
1648821820
00:15:26.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:42.192 [pool-195-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15254 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:42.739 [pool-196-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (253 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:42.743 [pool-197-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:15:42.746 [pool-194-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:42.746 [pool-194-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:42.746 [pool-194-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:198.
00:15:42.746 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
00:15:42.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:197 which is executed by 83 tests
1648821820
00:15:42.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:58.249 [pool-199-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15251 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 624
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:71)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:15:58.780 [pool-200-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (241 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[624]
java.lang.ArrayIndexOutOfBoundsException: 624    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:71)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:15:58.791 [pool-201-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:15:58.791 [pool-198-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 624]
00:15:58.792 [pool-198-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:15:58.792 [pool-198-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:197.
00:15:58.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:14.146 [pool-203-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15347 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 624
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:71)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:16:14.672 [pool-204-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (234 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[624]
java.lang.ArrayIndexOutOfBoundsException: 624    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:71)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:14.683 [pool-205-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:16:14.683 [pool-202-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 624]
00:16:14.684 [pool-202-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:16:14.684 [pool-202-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:197.
00:16:14.684 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
00:16:14.684 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:196 which is executed by 83 tests
1648821820
00:16:14.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:30.180 [pool-207-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15245 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:30.708 [pool-208-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (238 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:30.717 [pool-209-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:16:30.718 [pool-206-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:16:30.718 [pool-206-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:16:30.719 [pool-206-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:196.
00:16:30.719 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
00:16:30.719 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:195 which is executed by 83 tests
1648821820
00:16:30.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:46.142 [pool-211-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15172 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:46.684 [pool-212-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (251 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:16:46.693 [pool-213-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:16:46.695 [pool-210-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:16:46.695 [pool-210-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:16:46.696 [pool-210-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:195.
00:16:46.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
00:16:46.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:194 which is executed by 83 tests
1648821820
00:16:46.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
00:16:46.939 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:193 which is executed by 83 tests
1648821820
00:16:47.183 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
00:16:47.183 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:192 which is executed by 83 tests
1648821820
00:16:47.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
00:16:47.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:191 which is executed by 83 tests
1648821820
00:16:47.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:03.009 [pool-215-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15331 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:03.540 [pool-216-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (229 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:03.543 [pool-217-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:17:03.544 [pool-214-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:17:03.544 [pool-214-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:17:03.544 [pool-214-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:191.
00:17:03.544 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
00:17:03.544 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:187 which is executed by 83 tests
1648821820
00:17:03.788 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:18.953 [pool-219-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15158 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 2
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:58)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:111)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:19.488 [pool-220-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (244 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[2]
java.lang.ArrayIndexOutOfBoundsException: 2    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:58)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:111)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:19.495 [pool-221-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:17:19.496 [pool-218-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 2]
00:17:19.496 [pool-218-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:17:19.496 [pool-218-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:187.
00:17:19.496 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
00:17:19.496 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:186 which is executed by 83 tests
1648821820
00:17:19.738 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:34.962 [pool-223-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15217 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 2
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:58)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:35.515 [pool-224-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (247 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[2]
java.lang.ArrayIndexOutOfBoundsException: 2    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:58)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:35.526 [pool-225-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:17:35.526 [pool-222-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 2]
00:17:35.527 [pool-222-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:17:35.527 [pool-222-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:186.
00:17:35.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:50.819 [pool-227-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15285 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 2
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:58)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:17:51.367 [pool-228-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (255 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[2]
java.lang.ArrayIndexOutOfBoundsException: 2    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:58)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:17:51.378 [pool-229-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:17:51.386 [pool-226-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 2]
00:17:51.386 [pool-226-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:17:51.386 [pool-226-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:186.
00:17:51.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
00:17:51.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:184 which is executed by 83 tests
1648821820
00:17:51.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:06.940 [pool-231-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15303 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 624
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:111)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:07.475 [pool-232-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (243 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[624]
java.lang.ArrayIndexOutOfBoundsException: 624    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:111)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:07.478 [pool-233-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:18:07.479 [pool-230-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 624]
00:18:07.479 [pool-230-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:07.479 [pool-230-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:184.
00:18:07.479 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
00:18:07.479 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:183 which is executed by 83 tests
1648821820
00:18:07.722 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:22.869 [pool-235-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15140 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:23.409 [pool-236-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (248 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:23.412 [pool-237-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:18:23.413 [pool-234-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:23.413 [pool-234-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:23.413 [pool-234-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:183.
00:18:23.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
00:18:23.414 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:182 which is executed by 83 tests
1648821820
00:18:23.659 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:38.891 [pool-239-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15225 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 624
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:39.423 [pool-240-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (241 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[624]
java.lang.ArrayIndexOutOfBoundsException: 624    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:39.434 [pool-241-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:18:39.435 [pool-238-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 624]
00:18:39.435 [pool-238-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:39.435 [pool-238-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:182.
00:18:39.435 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:54.657 [pool-243-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15216 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ArrayIndexOutOfBoundsException: 624
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:18:55.206 [pool-244-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (257 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[624]
java.lang.ArrayIndexOutOfBoundsException: 624    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:110)
    at org.apache.commons.math3.random.MersenneTwister.<init>(MersenneTwister.java:32)
    at org.apache.commons.math3.util.FastMathTest.setUp(FastMathTest.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:18:55.217 [pool-245-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:18:55.218 [pool-242-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): 624]
00:18:55.218 [pool-242-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:18:55.218 [pool-242-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:182.
00:18:55.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
00:18:55.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:181 which is executed by 83 tests
1648821820
00:18:55.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:10.577 [pool-247-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15108 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:11.140 [pool-248-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (275 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:11.149 [pool-249-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:19:11.150 [pool-246-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:11.150 [pool-246-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:11.150 [pool-246-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:181.
00:19:11.150 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
00:19:11.150 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:180 which is executed by 83 tests
1648821820
00:19:11.393 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:26.651 [pool-251-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15247 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:27.198 [pool-252-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (256 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:27.207 [pool-253-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:19:27.208 [pool-250-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:27.208 [pool-250-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:27.208 [pool-250-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:180.
00:19:27.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
00:19:27.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:179 which is executed by 83 tests
1648821820
00:19:27.451 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
00:19:27.451 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:178 which is executed by 83 tests
1648821820
00:19:27.694 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
00:19:27.694 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:177 which is executed by 83 tests
1648821820
00:19:27.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
00:19:27.937 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:176 which is executed by 83 tests
1648821820
00:19:28.180 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:43.251 [pool-255-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15062 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:43.800 [pool-256-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (258 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:43.804 [pool-257-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:19:43.807 [pool-254-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:43.807 [pool-254-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:19:43.807 [pool-254-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:176.
00:19:43.807 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
00:19:43.807 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:174 which is executed by 83 tests
1648821820
00:19:44.050 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
00:19:44.050 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:173 which is executed by 83 tests
1648821820
00:19:44.292 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
00:19:44.292 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:172 which is executed by 83 tests
1648821820
00:19:44.561 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:19:59.763 [pool-259-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15195 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:00.291 [pool-260-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (240 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:00.294 [pool-261-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:20:00.294 [pool-258-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:00.294 [pool-258-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:00.294 [pool-258-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:172.
00:20:00.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
00:20:00.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:167 which is executed by 83 tests
1648821820
00:20:00.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:15.761 [pool-263-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15216 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:16.296 [pool-264-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (247 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:16.301 [pool-265-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:20:16.302 [pool-262-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:16.302 [pool-262-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:16.302 [pool-262-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:167.
00:20:16.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:31.500 [pool-267-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15191 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:32.026 [pool-268-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (239 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.StackOverflowError
    at fr.inria.lille.commons.trace.collector.ValueCollector.collectWith(ValueCollector.java:28)
    at fr.inria.lille.commons.trace.collector.ValueCollector.collectFrom(ValueCollector.java:17)
    at fr.inria.lille.commons.trace.RuntimeValues.collectInput(RuntimeValues.java:89)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:106)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:68)
00:20:32.056 [pool-269-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[null]
java.lang.StackOverflowError    at fr.inria.lille.commons.trace.collector.ValueCollector.collectWith(ValueCollector.java:28)
    at fr.inria.lille.commons.trace.collector.ValueCollector.collectFrom(ValueCollector.java:17)
    at fr.inria.lille.commons.trace.RuntimeValues.collectInput(RuntimeValues.java:89)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:56)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:106)
    at org.apache.commons.math3.random.MersenneTwister.setSeed(MersenneTwister.java:68)

00:20:32.057 [pool-266-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:32.057 [pool-266-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): null]
00:20:32.057 [pool-266-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:167.
00:20:32.057 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
00:20:32.057 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:155 which is executed by 128 tests
1648821820
00:20:32.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
00:20:32.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:154 which is executed by 128 tests
1648821820
00:20:32.544 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:47.744 [pool-271-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15193 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:48.259 [pool-272-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (227 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:20:48.263 [pool-273-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:20:48.263 [pool-270-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:48.264 [pool-270-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:20:48.264 [pool-270-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:154.
00:20:48.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
00:20:48.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:151 which is executed by 128 tests
1648821820
00:20:48.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:03.801 [pool-275-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15289 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:04.327 [pool-276-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (237 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:04.336 [pool-277-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:21:04.336 [pool-274-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:21:04.336 [pool-274-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:21:04.336 [pool-274-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:151.
00:21:04.337 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
00:21:04.337 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:150 which is executed by 128 tests
1648821820
00:21:04.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:19.812 [pool-279-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15223 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:20.361 [pool-280-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (263 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:20.373 [pool-281-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:21:20.374 [pool-278-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:21:20.374 [pool-278-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:21:20.374 [pool-278-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:150.
00:21:20.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
00:21:20.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:147 which is executed by 128 tests
1648821820
00:21:20.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:36.014 [pool-283-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15364 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:36.534 [pool-284-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (233 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:36.537 [pool-285-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:21:36.537 [pool-282-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:21:36.537 [pool-282-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:21:36.537 [pool-282-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:147.
00:21:36.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
00:21:36.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:146 which is executed by 128 tests
1648821820
00:21:36.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:51.988 [pool-287-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15202 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:52.505 [pool-288-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (230 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:52.513 [pool-289-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:21:52.516 [pool-286-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:21:52.517 [pool-286-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:21:52.517 [pool-286-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.MersenneTwister:146.
00:21:52.517 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
00:21:52.517 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.MersenneTwister:144 which is executed by 128 tests
1648821820
00:21:52.759 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
00:21:52.759 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3255 which is executed by 235 tests
1033054629
00:21:53.095 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:53.128 [pool-291-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (27 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:54.511 [pool-292-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:54.513 [pool-293-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:21:54.514 [pool-290-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:21:54.514 [pool-290-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:21:54.514 [pool-290-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.util.FastMath:3255.
00:21:54.514 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
00:21:54.514 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3399 which is executed by 282 tests
1033054629
00:21:54.838 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
00:21:54.838 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3258 which is executed by 558 tests
1033054629
00:21:55.151 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
00:21:55.151 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3254 which is executed by 605 tests
1033054629
00:21:55.463 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:55.495 [pool-295-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:56.802 [pool-296-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:56.804 [pool-297-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:21:56.805 [pool-294-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:21:56.805 [pool-294-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:21:56.805 [pool-294-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.util.FastMath:3254.
00:21:56.807 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:56.839 [pool-299-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:21:58.179 [pool-300-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:21:58.185 [pool-301-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.220 [pool-302-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (30 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.312 [pool-303-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (88 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.358 [pool-304-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (43 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.507 [pool-305-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (145 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.563 [pool-306-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (53 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.572 [pool-307-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.574 [pool-308-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.575 [pool-309-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.578 [pool-310-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.579 [pool-311-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.585 [pool-312-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.586 [pool-313-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.587 [pool-314-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.612 [pool-315-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.634 [pool-316-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.649 [pool-317-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:21:58.652 [pool-318-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.729 [pool-319-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2076 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.778 [pool-320-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (47 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.785 [pool-321-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.788 [pool-322-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.796 [pool-323-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.799 [pool-324-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.806 [pool-325-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.812 [pool-326-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.833 [pool-327-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.836 [pool-328-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.842 [pool-329-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.851 [pool-330-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.859 [pool-331-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.861 [pool-332-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:00.932 [pool-333-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (71 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:02.982 [pool-334-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2048 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.024 [pool-335-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.043 [pool-336-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.059 [pool-337-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.065 [pool-338-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.086 [pool-339-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.105 [pool-340-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.107 [pool-341-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.117 [pool-342-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.120 [pool-343-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.144 [pool-344-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (22 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.149 [pool-345-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.154 [pool-346-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.163 [pool-347-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.165 [pool-348-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.166 [pool-349-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.168 [pool-350-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.169 [pool-351-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.170 [pool-352-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.171 [pool-353-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.173 [pool-354-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.174 [pool-355-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.175 [pool-356-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.176 [pool-357-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.177 [pool-358-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.178 [pool-359-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.179 [pool-360-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.181 [pool-361-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.182 [pool-362-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.185 [pool-363-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.187 [pool-364-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.269 [pool-365-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (81 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.352 [pool-366-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.377 [pool-367-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.379 [pool-368-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.380 [pool-369-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.381 [pool-370-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.397 [pool-371-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.414 [pool-372-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.415 [pool-373-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.416 [pool-374-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.417 [pool-375-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.419 [pool-376-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.431 [pool-377-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.432 [pool-378-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.433 [pool-379-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.435 [pool-380-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.436 [pool-381-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.438 [pool-382-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.439 [pool-383-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.444 [pool-384-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.445 [pool-385-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.446 [pool-386-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.447 [pool-387-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.471 [pool-388-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (23 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.482 [pool-389-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.495 [pool-390-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.503 [pool-391-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:03.504 [pool-392-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.612 [pool-393-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2107 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.646 [pool-394-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.650 [pool-395-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.652 [pool-396-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.662 [pool-397-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.664 [pool-398-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.668 [pool-399-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.671 [pool-400-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.673 [pool-401-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.679 [pool-402-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.685 [pool-403-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.686 [pool-404-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.690 [pool-405-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.691 [pool-406-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.692 [pool-407-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.693 [pool-408-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.693 [pool-409-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.695 [pool-410-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.696 [pool-411-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.697 [pool-412-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.697 [pool-413-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.698 [pool-414-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.698 [pool-415-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.699 [pool-416-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.702 [pool-417-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:05.703 [pool-418-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:05.704 [pool-419-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:22:05.705 [pool-420-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:06.199 [pool-421-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (490 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:06.210 [pool-422-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:06.233 [pool-423-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:06.245 [pool-424-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:06.247 [pool-425-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:06.248 [pool-426-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:06.254 [pool-427-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:06.255 [pool-428-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:06.256 [pool-429-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:06.338 [pool-430-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (81 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:06.345 [pool-431-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:06.353 [pool-432-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:06.360 [pool-433-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:06.361 [pool-434-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:08.636 [pool-435-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2274 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:08.670 [pool-436-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:08.674 [pool-437-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:08.676 [pool-438-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:08.681 [pool-439-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:08.683 [pool-440-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:08.686 [pool-441-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:08.690 [pool-442-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:08.692 [pool-443-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:08.704 [pool-444-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:08.712 [pool-445-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:08.716 [pool-446-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:08.717 [pool-447-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.607 [pool-448-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1889 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.641 [pool-449-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.646 [pool-450-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.647 [pool-451-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.652 [pool-452-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.654 [pool-453-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.657 [pool-454-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.661 [pool-455-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.663 [pool-456-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.664 [pool-457-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.670 [pool-458-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.672 [pool-459-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.673 [pool-460-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.678 [pool-461-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.679 [pool-462-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.680 [pool-463-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.683 [pool-464-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.687 [pool-465-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.688 [pool-466-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.694 [pool-467-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.695 [pool-468-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.696 [pool-469-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.706 [pool-470-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.709 [pool-471-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.712 [pool-472-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.717 [pool-473-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.727 [pool-474-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.783 [pool-475-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (55 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.827 [pool-476-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (43 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.828 [pool-477-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.829 [pool-478-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.832 [pool-479-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.833 [pool-480-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.987 [pool-481-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (154 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.988 [pool-482-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:10.989 [pool-483-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.441 [pool-484-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (451 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.443 [pool-485-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.444 [pool-486-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.469 [pool-487-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (25 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.473 [pool-488-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.474 [pool-489-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.480 [pool-490-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.484 [pool-491-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.485 [pool-492-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.487 [pool-493-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.488 [pool-494-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.489 [pool-495-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.490 [pool-496-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.492 [pool-497-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.536 [pool-498-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.538 [pool-499-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.541 [pool-500-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.542 [pool-501-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.543 [pool-502-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.543 [pool-503-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.544 [pool-504-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.545 [pool-505-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.546 [pool-506-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.548 [pool-507-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.549 [pool-508-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.556 [pool-509-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.557 [pool-510-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.558 [pool-511-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.559 [pool-512-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.559 [pool-513-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.561 [pool-514-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.562 [pool-515-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.562 [pool-516-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.563 [pool-517-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.563 [pool-518-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.564 [pool-519-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.564 [pool-520-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.565 [pool-521-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.566 [pool-522-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.579 [pool-523-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.581 [pool-524-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.583 [pool-525-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.587 [pool-526-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.596 [pool-527-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.602 [pool-528-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.607 [pool-529-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.613 [pool-530-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.617 [pool-531-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.622 [pool-532-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.624 [pool-533-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.629 [pool-534-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.635 [pool-535-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.642 [pool-536-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.647 [pool-537-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.649 [pool-538-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.677 [pool-539-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.680 [pool-540-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.682 [pool-541-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.688 [pool-542-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.693 [pool-543-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.694 [pool-544-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.698 [pool-545-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.702 [pool-546-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.705 [pool-547-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.707 [pool-548-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.708 [pool-549-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.711 [pool-550-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.714 [pool-551-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.717 [pool-552-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.718 [pool-553-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.720 [pool-554-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.723 [pool-555-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.724 [pool-556-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.725 [pool-557-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.728 [pool-558-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.731 [pool-559-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: double ceil(-0.0) expected -0.0 actual 0.0 entries [1]
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:22:11.745 [pool-560-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ test1[36](org.apache.commons.math3.util.FastMathStrictComparisonTest)
[double ceil(-0.0) expected -0.0 actual 0.0 entries [1]]
java.lang.AssertionError: double ceil(-0.0) expected -0.0 actual 0.0 entries [1]    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: double floor(-0.0) expected -0.0 actual 0.0 entries [1]
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:22:11.751 [pool-561-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ test1[37](org.apache.commons.math3.util.FastMathStrictComparisonTest)
[double floor(-0.0) expected -0.0 actual 0.0 entries [1]]
java.lang.AssertionError: double floor(-0.0) expected -0.0 actual 0.0 entries [1]    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: double rint(-0.0) expected -0.0 actual 0.0 entries [1]
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:22:11.758 [pool-562-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ test1[38](org.apache.commons.math3.util.FastMathStrictComparisonTest)
[double rint(-0.0) expected -0.0 actual 0.0 entries [1]]
java.lang.AssertionError: double rint(-0.0) expected -0.0 actual 0.0 entries [1]    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
00:22:11.763 [pool-563-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
00:22:11.768 [pool-564-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.772 [pool-565-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.876 [pool-566-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (103 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.878 [pool-567-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.879 [pool-568-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.880 [pool-569-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.881 [pool-570-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.882 [pool-571-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.883 [pool-572-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.884 [pool-573-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.885 [pool-574-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.886 [pool-575-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.887 [pool-576-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.887 [pool-577-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.888 [pool-578-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.889 [pool-579-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.890 [pool-580-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.891 [pool-581-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.892 [pool-582-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.893 [pool-583-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.896 [pool-584-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:11.900 [pool-585-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.059 [pool-586-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (159 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.061 [pool-587-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.062 [pool-588-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.065 [pool-589-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.066 [pool-590-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.081 [pool-591-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.083 [pool-592-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.084 [pool-593-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.088 [pool-594-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.092 [pool-595-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.093 [pool-596-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.094 [pool-597-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.095 [pool-598-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.099 [pool-599-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.100 [pool-600-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.104 [pool-601-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.108 [pool-602-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.112 [pool-603-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:12.113 [pool-604-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:14.239 [pool-605-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2125 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:14.272 [pool-606-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (31 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:14.276 [pool-607-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:14.278 [pool-608-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:14.282 [pool-609-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:14.283 [pool-610-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:14.286 [pool-611-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:14.289 [pool-612-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:14.300 [pool-613-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:14.306 [pool-614-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:14.310 [pool-615-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:14.314 [pool-616-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:14.315 [pool-617-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.284 [pool-618-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1969 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.328 [pool-619-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (43 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.332 [pool-620-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.333 [pool-621-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.338 [pool-622-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.340 [pool-623-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.343 [pool-624-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.347 [pool-625-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.348 [pool-626-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.366 [pool-627-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.367 [pool-628-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.368 [pool-629-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.368 [pool-630-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.369 [pool-631-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.372 [pool-632-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.376 [pool-633-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.380 [pool-634-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.383 [pool-635-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:16.384 [pool-636-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.363 [pool-637-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1978 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.395 [pool-638-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (31 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.399 [pool-639-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.401 [pool-640-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.405 [pool-641-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.407 [pool-642-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.411 [pool-643-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.485 [pool-644-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.488 [pool-645-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.490 [pool-646-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.493 [pool-647-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.501 [pool-648-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.510 [pool-649-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.515 [pool-650-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.519 [pool-651-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:18.520 [pool-652-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.736 [pool-653-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2216 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.769 [pool-654-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.772 [pool-655-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.774 [pool-656-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.778 [pool-657-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.780 [pool-658-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.787 [pool-659-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.790 [pool-660-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.809 [pool-661-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.837 [pool-662-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.845 [pool-663-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.846 [pool-664-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.847 [pool-665-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.965 [pool-666-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (118 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.967 [pool-667-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.968 [pool-668-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.971 [pool-669-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.973 [pool-670-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:20.987 [pool-671-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.009 [pool-672-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.013 [pool-673-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.015 [pool-674-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.020 [pool-675-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.029 [pool-676-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.041 [pool-677-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.042 [pool-678-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.648 [pool-679-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (605 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.651 [pool-680-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.661 [pool-681-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.662 [pool-682-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.681 [pool-683-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.692 [pool-684-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.694 [pool-685-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.700 [pool-686-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.715 [pool-687-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.720 [pool-688-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.721 [pool-689-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.728 [pool-690-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.732 [pool-691-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.740 [pool-692-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:21.741 [pool-693-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.000 [pool-694-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2259 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.033 [pool-695-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (31 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.037 [pool-696-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.038 [pool-697-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.043 [pool-698-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.045 [pool-699-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.048 [pool-700-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.052 [pool-701-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.056 [pool-702-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.058 [pool-703-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.060 [pool-704-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.062 [pool-705-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.065 [pool-706-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.066 [pool-707-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.066 [pool-708-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.073 [pool-709-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.074 [pool-710-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.077 [pool-711-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.082 [pool-712-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.083 [pool-713-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.113 [pool-714-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.114 [pool-715-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.166 [pool-716-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (52 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.169 [pool-717-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.172 [pool-718-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.173 [pool-719-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.174 [pool-720-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.346 [pool-721-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (171 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.348 [pool-722-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.348 [pool-723-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.349 [pool-724-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.354 [pool-725-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.376 [pool-726-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.430 [pool-727-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (53 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.432 [pool-728-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.438 [pool-729-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.441 [pool-730-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.443 [pool-731-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.448 [pool-732-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.454 [pool-733-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.463 [pool-734-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.476 [pool-735-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.573 [pool-736-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.584 [pool-737-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.587 [pool-738-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.588 [pool-739-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.590 [pool-740-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.592 [pool-741-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.593 [pool-742-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.595 [pool-743-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.596 [pool-744-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.597 [pool-745-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.599 [pool-746-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.600 [pool-747-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.629 [pool-748-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.630 [pool-749-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.632 [pool-750-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.633 [pool-751-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.634 [pool-752-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.636 [pool-753-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.637 [pool-754-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.638 [pool-755-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.639 [pool-756-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.640 [pool-757-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.641 [pool-758-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.642 [pool-759-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.643 [pool-760-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.644 [pool-761-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.645 [pool-762-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.647 [pool-763-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.648 [pool-764-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.650 [pool-765-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.651 [pool-766-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.652 [pool-767-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.653 [pool-768-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.654 [pool-769-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.656 [pool-770-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.657 [pool-771-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.658 [pool-772-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.659 [pool-773-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.660 [pool-774-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.662 [pool-775-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.663 [pool-776-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.664 [pool-777-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.665 [pool-778-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.666 [pool-779-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.667 [pool-780-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.668 [pool-781-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.669 [pool-782-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.670 [pool-783-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.671 [pool-784-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.672 [pool-785-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.694 [pool-786-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (22 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.695 [pool-787-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.696 [pool-788-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.697 [pool-789-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.699 [pool-790-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.700 [pool-791-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.718 [pool-792-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.720 [pool-793-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.721 [pool-794-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.722 [pool-795-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.744 [pool-796-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.746 [pool-797-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.747 [pool-798-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.748 [pool-799-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.749 [pool-800-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.750 [pool-801-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.751 [pool-802-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.753 [pool-803-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.755 [pool-804-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.756 [pool-805-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.757 [pool-806-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.758 [pool-807-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.759 [pool-808-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.760 [pool-809-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.761 [pool-810-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.762 [pool-811-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.763 [pool-812-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.764 [pool-813-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.765 [pool-814-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.766 [pool-815-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.767 [pool-816-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.769 [pool-817-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.770 [pool-818-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.771 [pool-819-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.773 [pool-820-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.774 [pool-821-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.775 [pool-822-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.776 [pool-823-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.777 [pool-824-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.778 [pool-825-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.780 [pool-826-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.780 [pool-827-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.784 [pool-828-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.786 [pool-829-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.787 [pool-830-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.788 [pool-831-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.789 [pool-832-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.790 [pool-833-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.791 [pool-834-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.793 [pool-835-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.838 [pool-836-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (44 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.838 [pool-837-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.845 [pool-838-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.846 [pool-839-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.849 [pool-840-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.851 [pool-841-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.855 [pool-842-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.856 [pool-843-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.857 [pool-844-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.857 [pool-845-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.858 [pool-846-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.859 [pool-847-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.860 [pool-848-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.860 [pool-849-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.864 [pool-850-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.865 [pool-851-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.866 [pool-852-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.866 [pool-853-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.868 [pool-854-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.868 [pool-855-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.869 [pool-856-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.870 [pool-857-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.871 [pool-858-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.872 [pool-859-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.872 [pool-860-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.873 [pool-861-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.874 [pool-862-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.876 [pool-863-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.878 [pool-864-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.879 [pool-865-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.879 [pool-866-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.880 [pool-867-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.881 [pool-868-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.892 [pool-869-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.895 [pool-870-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.898 [pool-871-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.900 [pool-872-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.903 [pool-873-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.904 [pool-874-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.905 [pool-875-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.907 [pool-876-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.907 [pool-877-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.954 [pool-878-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.959 [pool-879-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.961 [pool-880-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.975 [pool-881-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.976 [pool-882-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.978 [pool-883-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:24.983 [pool-884-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:25.011 [pool-885-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:25.016 [pool-886-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:25.025 [pool-887-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:25.028 [pool-888-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:25.035 [pool-889-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:25.038 [pool-890-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:25.046 [pool-891-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:25.049 [pool-892-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:25.054 [pool-893-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:25.062 [pool-894-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:25.067 [pool-895-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:25.071 [pool-896-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:25.075 [pool-897-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:25.076 [pool-898-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.262 [pool-899-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2186 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.294 [pool-900-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (31 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.298 [pool-901-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.299 [pool-902-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.304 [pool-903-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.306 [pool-904-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.309 [pool-905-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.312 [pool-906-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.313 [pool-907-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.328 [pool-908-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.344 [pool-909-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.373 [pool-910-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.390 [pool-911-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException: 3
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.select(Percentile.java:348)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:293)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:223)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(DescriptiveStatistics.java:465)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(DescriptiveStatistics.java:432)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.testPercentileSetter(DescriptiveStatisticsTest.java:172)
00:22:27.392 [pool-912-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPercentileSetter(org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest)
[3]
java.lang.ArrayIndexOutOfBoundsException: 3    at org.apache.commons.math3.stat.descriptive.rank.Percentile.select(Percentile.java:348)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:293)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:223)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(DescriptiveStatistics.java:465)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(DescriptiveStatistics.java:432)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.testPercentileSetter(DescriptiveStatisticsTest.java:172)

00:22:27.401 [pool-913-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException: 3
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.select(Percentile.java:348)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:293)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:223)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(DescriptiveStatistics.java:465)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(DescriptiveStatistics.java:432)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString(DescriptiveStatistics.java:453)
00:22:27.402 [pool-914-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testToString(org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest)
[3]
java.lang.ArrayIndexOutOfBoundsException: 3    at org.apache.commons.math3.stat.descriptive.rank.Percentile.select(Percentile.java:348)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:293)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:223)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(DescriptiveStatistics.java:465)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(DescriptiveStatistics.java:432)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString(DescriptiveStatistics.java:453)

00:22:27.409 [pool-915-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.410 [pool-916-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.412 [pool-917-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.415 [pool-918-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.419 [pool-919-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException: 10
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataImpl.nextSample(RandomDataImpl.java:979)
    at org.apache.commons.math3.random.RandomDataTest.testNextSample(RandomDataTest.java:868)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:27.421 [pool-920-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSample(org.apache.commons.math3.random.Well19937cTest)
[10]
java.lang.ArrayIndexOutOfBoundsException: 10    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataImpl.nextSample(RandomDataImpl.java:979)
    at org.apache.commons.math3.random.RandomDataTest.testNextSample(RandomDataTest.java:868)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:27.423 [pool-921-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeRange(org.apache.commons.math3.random.Well19937cTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:27.424 [pool-922-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.Well19937cTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertFalse(Assert.java:64)
    at org.junit.Assert.assertFalse(Assert.java:74)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntExtremeValues(RandomDataTest.java:79)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:22:27.425 [pool-923-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntExtremeValues(org.apache.commons.math3.random.Well19937cTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertFalse(Assert.java:64)
    at org.junit.Assert.assertFalse(Assert.java:74)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntExtremeValues(RandomDataTest.java:79)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 0.0 chisquare statistic = 102318.5584852064. 
bin		expected	observed
[1,26)		7.57		0
[26,28)		11.77		0
[28,30)		23.89		0
[30,32)		42.29		0
[32,34)		65.88		0
[34,36)		91.01		0
[36,38)		112.24		0
[38,40)		124.32		0
[40,42)		124.36		0
[42,44)		112.89		0
[44,46)		93.43		0
[46,48)		70.77		0
[48,50)		49.25		0
[50,52)		31.59		0
[52,56)		29.06		0
[56,inf)		9.68		1000
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:27.907 [pool-924-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (481 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.Well19937cTest)
[Chisquare test failed for mean = 40.0 p-value = 0.0 chisquare statistic = 102318.5584852064. 
bin		expected	observed
[1,26)		7.57		0
[26,28)		11.77		0
[28,30)		23.89		0
[30,32)		42.29		0
[32,34)		65.88		0
[34,36)		91.01		0
[36,38)		112.24		0
[38,40)		124.32		0
[40,42)		124.36		0
[42,44)		112.89		0
[44,46)		93.43		0
[46,48)		70.77		0
[48,50)		49.25		0
[50,52)		31.59		0
[52,56)		29.06		0
[56,inf)		9.68		1000
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 0.0 chisquare statistic = 102318.5584852064. 
bin		expected	observed
[1,26)		7.57		0
[26,28)		11.77		0
[28,30)		23.89		0
[30,32)		42.29		0
[32,34)		65.88		0
[34,36)		91.01		0
[36,38)		112.24		0
[38,40)		124.32		0
[40,42)		124.36		0
[42,44)		112.89		0
[44,46)		93.43		0
[46,48)		70.77		0
[48,50)		49.25		0
[50,52)		31.59		0
[52,56)		29.06		0
[56,inf)		9.68		1000
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:22:27.963 [pool-925-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (54 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:27.965 [pool-926-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.Well19937cTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.ArrayIndexOutOfBoundsException: 4
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:27.966 [pool-927-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPermutation(org.apache.commons.math3.random.Well19937cTest)
[4]
java.lang.ArrayIndexOutOfBoundsException: 4    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:27.968 [pool-928-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntPositiveRange(org.apache.commons.math3.random.Well19937cTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:22:27.969 [pool-929-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:27.970 [pool-930-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeRange(org.apache.commons.math3.random.Well19937cTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:27.971 [pool-931-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongPositiveRange(org.apache.commons.math3.random.Well19937cTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:22:27.974 [pool-932-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:27.977 [pool-933-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException: 5
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataImpl.nextSample(RandomDataImpl.java:979)
    at org.apache.commons.math3.random.RandomDataTest.testNextSample(RandomDataTest.java:868)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:27.979 [pool-934-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSample(org.apache.commons.math3.random.RandomDataTest)
[5]
java.lang.ArrayIndexOutOfBoundsException: 5    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataImpl.nextSample(RandomDataImpl.java:979)
    at org.apache.commons.math3.random.RandomDataTest.testNextSample(RandomDataTest.java:868)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:27.980 [pool-935-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeRange(org.apache.commons.math3.random.RandomDataTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:27.981 [pool-936-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertFalse(Assert.java:64)
    at org.junit.Assert.assertFalse(Assert.java:74)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntExtremeValues(RandomDataTest.java:79)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:22:27.982 [pool-937-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntExtremeValues(org.apache.commons.math3.random.RandomDataTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertFalse(Assert.java:64)
    at org.junit.Assert.assertFalse(Assert.java:74)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntExtremeValues(RandomDataTest.java:79)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureIntUniform(RandomDataTest.java:308)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureIntNegativeToPositiveRange(RandomDataTest.java:281)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:27.983 [pool-938-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSecureIntNegativeToPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureIntUniform(RandomDataTest.java:308)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureIntNegativeToPositiveRange(RandomDataTest.java:281)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 0.0 chisquare statistic = 102318.5584852064. 
bin		expected	observed
[1,26)		7.57		0
[26,28)		11.77		0
[28,30)		23.89		0
[30,32)		42.29		0
[32,34)		65.88		0
[34,36)		91.01		0
[36,38)		112.24		0
[38,40)		124.32		0
[40,42)		124.36		0
[42,44)		112.89		0
[44,46)		93.43		0
[46,48)		70.77		0
[48,50)		49.25		0
[50,52)		31.59		0
[52,56)		29.06		0
[56,inf)		9.68		1000
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.446 [pool-939-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (462 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.RandomDataTest)
[Chisquare test failed for mean = 40.0 p-value = 0.0 chisquare statistic = 102318.5584852064. 
bin		expected	observed
[1,26)		7.57		0
[26,28)		11.77		0
[28,30)		23.89		0
[30,32)		42.29		0
[32,34)		65.88		0
[34,36)		91.01		0
[36,38)		112.24		0
[38,40)		124.32		0
[40,42)		124.36		0
[42,44)		112.89		0
[44,46)		93.43		0
[46,48)		70.77		0
[48,50)		49.25		0
[50,52)		31.59		0
[52,56)		29.06		0
[56,inf)		9.68		1000
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 0.0 chisquare statistic = 102318.5584852064. 
bin		expected	observed
[1,26)		7.57		0
[26,28)		11.77		0
[28,30)		23.89		0
[30,32)		42.29		0
[32,34)		65.88		0
[34,36)		91.01		0
[36,38)		112.24		0
[38,40)		124.32		0
[40,42)		124.36		0
[42,44)		112.89		0
[44,46)		93.43		0
[46,48)		70.77		0
[48,50)		49.25		0
[50,52)		31.59		0
[52,56)		29.06		0
[56,inf)		9.68		1000
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:22:28.488 [pool-940-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (41 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureLongUniform(RandomDataTest.java:251)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureLongPositiveRange(RandomDataTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:28.490 [pool-941-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSecureLongPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureLongUniform(RandomDataTest.java:251)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureLongPositiveRange(RandomDataTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureIntUniform(RandomDataTest.java:308)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureIntPositiveRange(RandomDataTest.java:299)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:28.492 [pool-942-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSecureIntPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureIntUniform(RandomDataTest.java:308)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureIntPositiveRange(RandomDataTest.java:299)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:28.493 [pool-943-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureLongUniform(RandomDataTest.java:251)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureLongNegativeRange(RandomDataTest.java:233)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:28.494 [pool-944-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSecureLongNegativeRange(org.apache.commons.math3.random.RandomDataTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureLongUniform(RandomDataTest.java:251)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureLongNegativeRange(RandomDataTest.java:233)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureIntUniform(RandomDataTest.java:308)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureIntNegativeRange(RandomDataTest.java:290)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:28.495 [pool-945-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSecureIntNegativeRange(org.apache.commons.math3.random.RandomDataTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureIntUniform(RandomDataTest.java:308)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureIntNegativeRange(RandomDataTest.java:290)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.ArrayIndexOutOfBoundsException: 5
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.496 [pool-946-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPermutation(org.apache.commons.math3.random.RandomDataTest)
[5]
java.lang.ArrayIndexOutOfBoundsException: 5    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:28.497 [pool-947-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:22:28.498 [pool-948-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureLongUniform(RandomDataTest.java:251)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureLongNegativeToPositiveRange(RandomDataTest.java:224)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:28.499 [pool-949-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSecureLongNegativeToPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureLongUniform(RandomDataTest.java:251)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureLongNegativeToPositiveRange(RandomDataTest.java:224)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:28.500 [pool-950-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeRange(org.apache.commons.math3.random.RandomDataTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:28.501 [pool-951-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: array lengths differed, expected.length=20 actual.length=0
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:22:28.502 [pool-952-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulNeitherRev(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=20 actual.length=0]
java.lang.AssertionError: array lengths differed, expected.length=20 actual.length=0    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

00:22:28.503 [pool-953-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:22:28.504 [pool-954-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulLastRev(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=21 actual.length=1]
java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

java.lang.AssertionError: array lengths differed, expected.length=22 actual.length=2
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:22:28.505 [pool-955-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulBothRev(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=22 actual.length=2]
java.lang.AssertionError: array lengths differed, expected.length=22 actual.length=2    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

00:22:28.505 [pool-956-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:28.506 [pool-957-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: array lengths differed, expected.length=22 actual.length=7
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:22:28.507 [pool-958-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulBoth(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=22 actual.length=7]
java.lang.AssertionError: array lengths differed, expected.length=22 actual.length=7    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=6
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:22:28.508 [pool-959-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulLast(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=21 actual.length=6]
java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=6    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

java.lang.AssertionError: array lengths differed, expected.length=20 actual.length=5
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:22:28.509 [pool-960-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulNeither(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=20 actual.length=5]
java.lang.AssertionError: array lengths differed, expected.length=20 actual.length=5    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

00:22:28.509 [pool-961-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=6
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:22:28.510 [pool-962-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulFirst(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=21 actual.length=6]
java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=6    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

00:22:28.511 [pool-963-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=1
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:22:28.511 [pool-964-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulFirstRev(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=21 actual.length=1]
java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=1    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

00:22:28.512 [pool-965-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:28.513 [pool-966-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:28.513 [pool-967-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:28.514 [pool-968-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:28.514 [pool-969-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:28.554 [pool-970-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:28.575 [pool-971-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.588 [pool-972-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPutAbsentOnExisting(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.590 [pool-973-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPutKeysWithCollision2(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.592 [pool-974-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPutKeysWithCollisions(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.594 [pool-975-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCopy(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.595 [pool-976-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testContainsKey(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.597 [pool-977-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testRemoveAbsent(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.598 [pool-978-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPutAndGet(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.600 [pool-979-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPutAndGetWith0ExpectedSize(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.602 [pool-980-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testRemove2(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.603 [pool-981-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testConcurrentModification(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.605 [pool-982-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testGetAbsent(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.606 [pool-983-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testGetFromEmpty(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.608 [pool-984-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPutOnExisting(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.609 [pool-985-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testRemove(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.611 [pool-986-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIterator(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.612 [pool-987-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPutAndGetWithExpectedSize(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.614 [pool-988-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testRemoveFromEmpty(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 100 to fraction (9,607,900,894,030,000/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:22:28.614 [pool-989-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:28.616 [pool-990-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:28.616 [pool-991-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.exception.NumberIsTooLargeException: subarray ends after array end
    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(AbstractUnivariateStatistic.java:176)
    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(AbstractUnivariateStatistic.java:137)
    at org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(AbstractStorelessUnivariateStatistic.java:146)
    at org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testCopyConsistency(StorelessUnivariateStatisticAbstractTest.java:198)
    at sun.reflect.GeneratedMethodAccessor78.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:28.617 [pool-992-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCopyConsistency(org.apache.commons.math3.stat.descriptive.summary.SumSqTest)
[subarray ends after array end]
org.apache.commons.math3.exception.NumberIsTooLargeException: subarray ends after array end    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(AbstractUnivariateStatistic.java:176)
    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(AbstractUnivariateStatistic.java:137)
    at org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(AbstractStorelessUnivariateStatistic.java:146)
    at org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testCopyConsistency(StorelessUnivariateStatisticAbstractTest.java:198)
    at sun.reflect.GeneratedMethodAccessor78.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:22:28.626 [pool-993-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException: 19
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataImpl.nextSample(RandomDataImpl.java:979)
    at org.apache.commons.math3.random.RandomDataTest.testNextSample(RandomDataTest.java:868)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:28.627 [pool-994-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSample(org.apache.commons.math3.random.Well1024aTest)
[19]
java.lang.ArrayIndexOutOfBoundsException: 19    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataImpl.nextSample(RandomDataImpl.java:979)
    at org.apache.commons.math3.random.RandomDataTest.testNextSample(RandomDataTest.java:868)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:28.628 [pool-995-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeRange(org.apache.commons.math3.random.Well1024aTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:28.629 [pool-996-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.Well1024aTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertFalse(Assert.java:64)
    at org.junit.Assert.assertFalse(Assert.java:74)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntExtremeValues(RandomDataTest.java:79)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:22:28.631 [pool-997-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntExtremeValues(org.apache.commons.math3.random.Well1024aTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertFalse(Assert.java:64)
    at org.junit.Assert.assertFalse(Assert.java:74)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntExtremeValues(RandomDataTest.java:79)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 0.0 chisquare statistic = 102318.5584852064. 
bin		expected	observed
[1,26)		7.57		0
[26,28)		11.77		0
[28,30)		23.89		0
[30,32)		42.29		0
[32,34)		65.88		0
[34,36)		91.01		0
[36,38)		112.24		0
[38,40)		124.32		0
[40,42)		124.36		0
[42,44)		112.89		0
[44,46)		93.43		0
[46,48)		70.77		0
[48,50)		49.25		0
[50,52)		31.59		0
[52,56)		29.06		0
[56,inf)		9.68		1000
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:29.132 [pool-998-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (501 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.Well1024aTest)
[Chisquare test failed for mean = 40.0 p-value = 0.0 chisquare statistic = 102318.5584852064. 
bin		expected	observed
[1,26)		7.57		0
[26,28)		11.77		0
[28,30)		23.89		0
[30,32)		42.29		0
[32,34)		65.88		0
[34,36)		91.01		0
[36,38)		112.24		0
[38,40)		124.32		0
[40,42)		124.36		0
[42,44)		112.89		0
[44,46)		93.43		0
[46,48)		70.77		0
[48,50)		49.25		0
[50,52)		31.59		0
[52,56)		29.06		0
[56,inf)		9.68		1000
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 0.0 chisquare statistic = 102318.5584852064. 
bin		expected	observed
[1,26)		7.57		0
[26,28)		11.77		0
[28,30)		23.89		0
[30,32)		42.29		0
[32,34)		65.88		0
[34,36)		91.01		0
[36,38)		112.24		0
[38,40)		124.32		0
[40,42)		124.36		0
[42,44)		112.89		0
[44,46)		93.43		0
[46,48)		70.77		0
[48,50)		49.25		0
[50,52)		31.59		0
[52,56)		29.06		0
[56,inf)		9.68		1000
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:22:29.175 [pool-999-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (42 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:29.177 [pool-1000-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.Well1024aTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.ArrayIndexOutOfBoundsException: 5
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:29.179 [pool-1001-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPermutation(org.apache.commons.math3.random.Well1024aTest)
[5]
java.lang.ArrayIndexOutOfBoundsException: 5    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:29.181 [pool-1002-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntPositiveRange(org.apache.commons.math3.random.Well1024aTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:22:29.182 [pool-1003-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:29.183 [pool-1004-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeRange(org.apache.commons.math3.random.Well1024aTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:29.184 [pool-1005-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongPositiveRange(org.apache.commons.math3.random.Well1024aTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:22:29.185 [pool-1006-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:29.214 [pool-1007-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (28 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:29.216 [pool-1008-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:29.217 [pool-1009-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException: 3
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.select(Percentile.java:348)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:293)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:223)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(DescriptiveStatistics.java:465)
    at org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.apply(SynchronizedDescriptiveStatistics.java:77)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(DescriptiveStatistics.java:432)
00:22:29.218 [pool-1010-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPercentileSetter(org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
[3]
java.lang.ArrayIndexOutOfBoundsException: 3    at org.apache.commons.math3.stat.descriptive.rank.Percentile.select(Percentile.java:348)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:293)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:223)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(DescriptiveStatistics.java:465)
    at org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.apply(SynchronizedDescriptiveStatistics.java:77)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(DescriptiveStatistics.java:432)

00:22:29.229 [pool-1011-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException: 3
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.select(Percentile.java:348)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:293)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:223)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(DescriptiveStatistics.java:465)
    at org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.apply(SynchronizedDescriptiveStatistics.java:77)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(DescriptiveStatistics.java:432)
00:22:29.230 [pool-1012-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testToString(org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
[3]
java.lang.ArrayIndexOutOfBoundsException: 3    at org.apache.commons.math3.stat.descriptive.rank.Percentile.select(Percentile.java:348)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:293)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:223)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(DescriptiveStatistics.java:465)
    at org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.apply(SynchronizedDescriptiveStatistics.java:77)
    at org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(DescriptiveStatistics.java:432)

00:22:29.237 [pool-1013-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:29.238 [pool-1014-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:29.243 [pool-1015-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:29.286 [pool-1016-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (43 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:29.290 [pool-1017-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.4 to fraction (1/15,056,631,693,040,827)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.FractionTest.testEpsilonLimitConstructor(FractionTest.java:153)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:29.292 [pool-1018-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testEpsilonLimitConstructor(org.apache.commons.math3.fraction.FractionTest)
[illegal state: Overflow trying to convert 0.4 to fraction (1/15,056,631,693,040,827)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.4 to fraction (1/15,056,631,693,040,827)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.FractionTest.testEpsilonLimitConstructor(FractionTest.java:153)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.5 to fraction (1/10,650,060,214,250)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(FractionTest.java:222)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:29.294 [pool-1019-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)
[illegal state: Overflow trying to convert 0.5 to fraction (1/10,650,060,214,250)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.5 to fraction (1/10,650,060,214,250)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(FractionTest.java:222)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.5 to fraction (1/10,650,060,214,250)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(FractionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:29.296 [pool-1020-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)
[illegal state: Overflow trying to convert 0.5 to fraction (1/10,650,060,214,250)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.5 to fraction (1/10,650,060,214,250)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(FractionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<2> but was:<0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math3.fraction.FractionTest.assertFraction(FractionTest.java:34)
00:22:29.297 [pool-1021-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDigitLimitConstructor(org.apache.commons.math3.fraction.FractionTest)
[expected:<2> but was:<0>]
java.lang.AssertionError: expected:<2> but was:<0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math3.fraction.FractionTest.assertFraction(FractionTest.java:34)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 3.142 to fraction (8,679,678,613,622/1)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:141)
    at org.apache.commons.math3.fraction.FractionTest.testSerial(FractionTest.java:604)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:22:29.298 [pool-1022-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSerial(org.apache.commons.math3.fraction.FractionTest)
[illegal state: Overflow trying to convert 3.142 to fraction (8,679,678,613,622/1)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 3.142 to fraction (8,679,678,613,622/1)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:141)
    at org.apache.commons.math3.fraction.FractionTest.testSerial(FractionTest.java:604)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:22:29.299 [pool-1023-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:22:29.300 [pool-1024-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.4 to fraction (1/303,529,649,694)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionTest.testConstructor(FractionTest.java:65)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:22:29.301 [pool-1025-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testConstructor(org.apache.commons.math3.fraction.FractionTest)
[illegal state: Overflow trying to convert 0.4 to fraction (1/303,529,649,694)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.4 to fraction (1/303,529,649,694)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionTest.testConstructor(FractionTest.java:65)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:49.302 [pool-298-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
00:25:49.303 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
00:25:49.303 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
00:25:49.303 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3250 which is executed by 605 tests
1033054629
00:25:49.653 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:49.785 [pool-1028-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:51.630 [pool-1029-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:51.632 [pool-1030-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:51.633 [pool-1027-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:25:51.633 [pool-1027-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:25:51.633 [pool-1027-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.util.FastMath:3250.
00:25:51.633 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:51.665 [pool-1032-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:51.811 [pool-1026-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (202509 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:52.873 [pool-1033-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:53.052 [pool-1034-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (167 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.085 [pool-1035-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (29 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.152 [pool-1036-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (64 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.181 [pool-1037-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (26 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.275 [pool-1038-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (92 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.311 [pool-1039-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (33 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.318 [pool-1040-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.320 [pool-1041-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.321 [pool-1042-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.323 [pool-1043-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.325 [pool-1044-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.330 [pool-1045-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.331 [pool-1046-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.331 [pool-1047-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.354 [pool-1048-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:53.357 [pool-1049-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeRange(org.apache.commons.math3.random.Well19937cTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 278.9000000000001. 
value	expected	observed
1	0.11		0
2	0.11		118
3	0.11		91
4	0.11		244
5	0.11		127
6	0.11		101
7	0.11		109
8	0.11		112
9	0.11		98
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:53.366 [pool-1050-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.Well19937cTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 278.9000000000001. 
value	expected	observed
1	0.11		0
2	0.11		118
3	0.11		91
4	0.11		244
5	0.11		127
6	0.11		101
7	0.11		109
8	0.11		112
9	0.11		98
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 278.9000000000001. 
value	expected	observed
1	0.11		0
2	0.11		118
3	0.11		91
4	0.11		244
5	0.11		127
6	0.11		101
7	0.11		109
8	0.11		112
9	0.11		98
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:53.368 [pool-1051-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 41.0 p-value = 4.9589813137185246E-5 chisquare statistic = 47.88088033460464. 
bin		expected	observed
[1,27)		8.32		9
[27,29)		12.41		20
[29,31)		24.67		21
[31,33)		42.99		34
[33,35)		66.17		61
[35,37)		90.64		67
[37,39)		111.18		134
[39,41)		122.84		119
[41,43)		122.88		173
[43,45)		111.8		95
[45,47)		92.93		75
[47,49)		70.84		78
[49,51)		49.69		42
[51,53)		32.19		31
[53,55)		19.31		22
[55,58)		14.04		14
[58,inf)		7.09		5
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:53.495 [pool-1052-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (125 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.Well19937cTest)
[Chisquare test failed for mean = 41.0 p-value = 4.9589813137185246E-5 chisquare statistic = 47.88088033460464. 
bin		expected	observed
[1,27)		8.32		9
[27,29)		12.41		20
[29,31)		24.67		21
[31,33)		42.99		34
[33,35)		66.17		61
[35,37)		90.64		67
[37,39)		111.18		134
[39,41)		122.84		119
[41,43)		122.88		173
[43,45)		111.8		95
[45,47)		92.93		75
[47,49)		70.84		78
[49,51)		49.69		42
[51,53)		32.19		31
[53,55)		19.31		22
[55,58)		14.04		14
[58,inf)		7.09		5
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 41.0 p-value = 4.9589813137185246E-5 chisquare statistic = 47.88088033460464. 
bin		expected	observed
[1,27)		8.32		9
[27,29)		12.41		20
[29,31)		24.67		21
[31,33)		42.99		34
[33,35)		66.17		61
[35,37)		90.64		67
[37,39)		111.18		134
[39,41)		122.84		119
[41,43)		122.88		173
[43,45)		111.8		95
[45,47)		92.93		75
[47,49)		70.84		78
[49,51)		49.69		42
[51,53)		32.19		31
[53,55)		19.31		22
[55,58)		14.04		14
[58,inf)		7.09		5
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:53.546 [pool-1053-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (50 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 278.9000000000001. 
value	expected	observed
1	0.11		0
2	0.11		118
3	0.11		91
4	0.11		244
5	0.11		127
6	0.11		101
7	0.11		109
8	0.11		112
9	0.11		98
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:53.550 [pool-1054-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.Well19937cTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 278.9000000000001. 
value	expected	observed
1	0.11		0
2	0.11		118
3	0.11		91
4	0.11		244
5	0.11		127
6	0.11		101
7	0.11		109
8	0.11		112
9	0.11		98
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 278.9000000000001. 
value	expected	observed
1	0.11		0
2	0.11		118
3	0.11		91
4	0.11		244
5	0.11		127
6	0.11		101
7	0.11		109
8	0.11		112
9	0.11		98
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:53.552 [pool-1055-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.561 [pool-1056-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.563 [pool-1057-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:53.564 [pool-1058-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeRange(org.apache.commons.math3.random.Well19937cTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:53.571 [pool-1059-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.591 [pool-1060-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.593 [pool-1061-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.598 [pool-1062-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:53.599 [pool-1063-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeRange(org.apache.commons.math3.random.RandomDataTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
1	0.11		0
2	0.11		101
3	0.11		107
4	0.11		240
5	0.11		104
6	0.11		118
7	0.11		120
8	0.11		109
9	0.11		101
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:53.601 [pool-1064-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
1	0.11		0
2	0.11		101
3	0.11		107
4	0.11		240
5	0.11		104
6	0.11		118
7	0.11		120
8	0.11		109
9	0.11		101
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
1	0.11		0
2	0.11		101
3	0.11		107
4	0.11		240
5	0.11		104
6	0.11		118
7	0.11		120
8	0.11		109
9	0.11		101
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:53.603 [pool-1065-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 231.07400000000007. 
value	expected	observed
1	0.11		0
2	0.11		98
3	0.11		115
4	0.11		223
5	0.11		113
6	0.11		92
7	0.11		121
8	0.11		115
9	0.11		123
This test can fail randomly due to sampling error with probability 1.0E-4.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureIntUniform(RandomDataTest.java:321)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureIntNegativeToPositiveRange(RandomDataTest.java:281)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:53.610 [pool-1066-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSecureIntNegativeToPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 231.07400000000007. 
value	expected	observed
1	0.11		0
2	0.11		98
3	0.11		115
4	0.11		223
5	0.11		113
6	0.11		92
7	0.11		121
8	0.11		115
9	0.11		123
This test can fail randomly due to sampling error with probability 1.0E-4.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 231.07400000000007. 
value	expected	observed
1	0.11		0
2	0.11		98
3	0.11		115
4	0.11		223
5	0.11		113
6	0.11		92
7	0.11		121
8	0.11		115
9	0.11		123
This test can fail randomly due to sampling error with probability 1.0E-4.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureIntUniform(RandomDataTest.java:321)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureIntNegativeToPositiveRange(RandomDataTest.java:281)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 1.3935711357992986E-5 chisquare statistic = 49.611113821160984. 
bin		expected	observed
[1,26)		7.57		6
[26,28)		11.77		17
[28,30)		23.89		20
[30,32)		42.29		37
[32,34)		65.88		66
[34,36)		91.01		86
[36,38)		112.24		96
[38,40)		124.32		121
[40,42)		124.36		186
[42,44)		112.89		104
[44,46)		93.43		77
[46,48)		70.77		82
[48,50)		49.25		47
[50,52)		31.59		21
[52,56)		29.06		21
[56,inf)		9.68		13
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:53.710 [pool-1067-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (99 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.RandomDataTest)
[Chisquare test failed for mean = 40.0 p-value = 1.3935711357992986E-5 chisquare statistic = 49.611113821160984. 
bin		expected	observed
[1,26)		7.57		6
[26,28)		11.77		17
[28,30)		23.89		20
[30,32)		42.29		37
[32,34)		65.88		66
[34,36)		91.01		86
[36,38)		112.24		96
[38,40)		124.32		121
[40,42)		124.36		186
[42,44)		112.89		104
[44,46)		93.43		77
[46,48)		70.77		82
[48,50)		49.25		47
[50,52)		31.59		21
[52,56)		29.06		21
[56,inf)		9.68		13
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 1.3935711357992986E-5 chisquare statistic = 49.611113821160984. 
bin		expected	observed
[1,26)		7.57		6
[26,28)		11.77		17
[28,30)		23.89		20
[30,32)		42.29		37
[32,34)		65.88		66
[34,36)		91.01		86
[36,38)		112.24		96
[38,40)		124.32		121
[40,42)		124.36		186
[42,44)		112.89		104
[44,46)		93.43		77
[46,48)		70.77		82
[48,50)		49.25		47
[50,52)		31.59		21
[52,56)		29.06		21
[56,inf)		9.68		13
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:53.748 [pool-1068-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (36 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.764 [pool-1069-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.782 [pool-1070-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
1	0.11		0
2	0.11		101
3	0.11		107
4	0.11		240
5	0.11		104
6	0.11		118
7	0.11		120
8	0.11		109
9	0.11		101
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:53.784 [pool-1071-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
1	0.11		0
2	0.11		101
3	0.11		107
4	0.11		240
5	0.11		104
6	0.11		118
7	0.11		120
8	0.11		109
9	0.11		101
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
1	0.11		0
2	0.11		101
3	0.11		107
4	0.11		240
5	0.11		104
6	0.11		118
7	0.11		120
8	0.11		109
9	0.11		101
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureLongUniform(RandomDataTest.java:251)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureLongNegativeRange(RandomDataTest.java:233)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:53.787 [pool-1072-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSecureLongNegativeRange(org.apache.commons.math3.random.RandomDataTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureLongUniform(RandomDataTest.java:251)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureLongNegativeRange(RandomDataTest.java:233)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureIntUniform(RandomDataTest.java:308)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureIntNegativeRange(RandomDataTest.java:290)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:53.788 [pool-1073-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSecureIntNegativeRange(org.apache.commons.math3.random.RandomDataTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureIntUniform(RandomDataTest.java:308)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureIntNegativeRange(RandomDataTest.java:290)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:53.790 [pool-1074-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.796 [pool-1075-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.798 [pool-1076-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 197.07200000000006. 
value	expected	observed
1	0.11		0
2	0.11		125
3	0.11		127
4	0.11		206
5	0.11		109
6	0.11		110
7	0.11		108
8	0.11		102
9	0.11		113
This test can fail randomly due to sampling error with probability 1.0E-4.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureLongUniform(RandomDataTest.java:264)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureLongNegativeToPositiveRange(RandomDataTest.java:224)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:53.807 [pool-1077-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSecureLongNegativeToPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 197.07200000000006. 
value	expected	observed
1	0.11		0
2	0.11		125
3	0.11		127
4	0.11		206
5	0.11		109
6	0.11		110
7	0.11		108
8	0.11		102
9	0.11		113
This test can fail randomly due to sampling error with probability 1.0E-4.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 197.07200000000006. 
value	expected	observed
1	0.11		0
2	0.11		125
3	0.11		127
4	0.11		206
5	0.11		109
6	0.11		110
7	0.11		108
8	0.11		102
9	0.11		113
This test can fail randomly due to sampling error with probability 1.0E-4.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureLongUniform(RandomDataTest.java:264)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureLongNegativeToPositiveRange(RandomDataTest.java:224)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:53.808 [pool-1078-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeRange(org.apache.commons.math3.random.RandomDataTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:53.813 [pool-1079-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: array lengths differed, expected.length=20 actual.length=19
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:25:53.822 [pool-1080-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulNeitherRev(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=20 actual.length=19]
java.lang.AssertionError: array lengths differed, expected.length=20 actual.length=19    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

00:25:53.824 [pool-1081-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=20
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:25:53.826 [pool-1082-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulLastRev(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=21 actual.length=20]
java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=20    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

java.lang.AssertionError: array lengths differed, expected.length=22 actual.length=21
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:25:53.828 [pool-1083-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulBothRev(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=22 actual.length=21]
java.lang.AssertionError: array lengths differed, expected.length=22 actual.length=21    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

00:25:53.830 [pool-1084-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.831 [pool-1085-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.833 [pool-1086-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.835 [pool-1087-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.837 [pool-1088-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.838 [pool-1089-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.840 [pool-1090-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.841 [pool-1091-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=20
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:25:53.843 [pool-1092-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulFirstRev(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=21 actual.length=20]
java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=20    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

00:25:53.845 [pool-1093-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.846 [pool-1094-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.848 [pool-1095-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.851 [pool-1096-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.852 [pool-1097-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.958 [pool-1098-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (105 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:53.995 [pool-1099-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (35 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.019 [pool-1100-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.021 [pool-1101-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.022 [pool-1102-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.023 [pool-1103-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.040 [pool-1104-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.057 [pool-1105-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.059 [pool-1106-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.059 [pool-1107-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.060 [pool-1108-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.062 [pool-1109-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.074 [pool-1110-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.075 [pool-1111-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.076 [pool-1112-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.077 [pool-1113-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.078 [pool-1114-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.080 [pool-1115-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.081 [pool-1116-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.083 [pool-1117-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.084 [pool-1118-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.084 [pool-1119-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.085 [pool-1120-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.140 [pool-1121-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (23 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.151 [pool-1122-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:54.153 [pool-1123-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeRange(org.apache.commons.math3.random.Well1024aTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 252.56600000000006. 
value	expected	observed
1	0.11		0
2	0.11		103
3	0.11		101
4	0.11		235
5	0.11		108
6	0.11		116
7	0.11		103
8	0.11		121
9	0.11		113
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:54.156 [pool-1124-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.Well1024aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 252.56600000000006. 
value	expected	observed
1	0.11		0
2	0.11		103
3	0.11		101
4	0.11		235
5	0.11		108
6	0.11		116
7	0.11		103
8	0.11		121
9	0.11		113
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 252.56600000000006. 
value	expected	observed
1	0.11		0
2	0.11		103
3	0.11		101
4	0.11		235
5	0.11		108
6	0.11		116
7	0.11		103
8	0.11		121
9	0.11		113
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:54.158 [pool-1125-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 1.1477437707574367E-5 chisquare statistic = 50.12741170943592. 
bin		expected	observed
[1,26)		7.57		11
[26,28)		11.77		8
[28,30)		23.89		29
[30,32)		42.29		28
[32,34)		65.88		69
[34,36)		91.01		92
[36,38)		112.24		103
[38,40)		124.32		99
[40,42)		124.36		182
[42,44)		112.89		117
[44,46)		93.43		100
[46,48)		70.77		71
[48,50)		49.25		32
[50,52)		31.59		25
[52,56)		29.06		25
[56,inf)		9.68		9
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:54.268 [pool-1126-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (110 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.Well1024aTest)
[Chisquare test failed for mean = 40.0 p-value = 1.1477437707574367E-5 chisquare statistic = 50.12741170943592. 
bin		expected	observed
[1,26)		7.57		11
[26,28)		11.77		8
[28,30)		23.89		29
[30,32)		42.29		28
[32,34)		65.88		69
[34,36)		91.01		92
[36,38)		112.24		103
[38,40)		124.32		99
[40,42)		124.36		182
[42,44)		112.89		117
[44,46)		93.43		100
[46,48)		70.77		71
[48,50)		49.25		32
[50,52)		31.59		25
[52,56)		29.06		25
[56,inf)		9.68		9
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 1.1477437707574367E-5 chisquare statistic = 50.12741170943592. 
bin		expected	observed
[1,26)		7.57		11
[26,28)		11.77		8
[28,30)		23.89		29
[30,32)		42.29		28
[32,34)		65.88		69
[34,36)		91.01		92
[36,38)		112.24		103
[38,40)		124.32		99
[40,42)		124.36		182
[42,44)		112.89		117
[44,46)		93.43		100
[46,48)		70.77		71
[48,50)		49.25		32
[50,52)		31.59		25
[52,56)		29.06		25
[56,inf)		9.68		9
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:54.306 [pool-1127-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (37 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 252.56600000000006. 
value	expected	observed
1	0.11		0
2	0.11		103
3	0.11		101
4	0.11		235
5	0.11		108
6	0.11		116
7	0.11		103
8	0.11		121
9	0.11		113
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:54.309 [pool-1128-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.Well1024aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 252.56600000000006. 
value	expected	observed
1	0.11		0
2	0.11		103
3	0.11		101
4	0.11		235
5	0.11		108
6	0.11		116
7	0.11		103
8	0.11		121
9	0.11		113
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 252.56600000000006. 
value	expected	observed
1	0.11		0
2	0.11		103
3	0.11		101
4	0.11		235
5	0.11		108
6	0.11		116
7	0.11		103
8	0.11		121
9	0.11		113
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:54.311 [pool-1129-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.319 [pool-1130-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.320 [pool-1131-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:54.321 [pool-1132-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeRange(org.apache.commons.math3.random.Well1024aTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:54.327 [pool-1133-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.328 [pool-1134-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.331 [pool-1135-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.338 [pool-1136-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.339 [pool-1137-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.349 [pool-1138-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.349 [pool-1139-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.350 [pool-1140-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.351 [pool-1141-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.351 [pool-1142-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.353 [pool-1143-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.354 [pool-1144-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.355 [pool-1145-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.355 [pool-1146-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<-1> but was:<1>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math3.fraction.FractionTest.assertFraction(FractionTest.java:34)
00:25:54.356 [pool-1147-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)
[expected:<-1> but was:<1>]
java.lang.AssertionError: expected:<-1> but was:<1>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math3.fraction.FractionTest.assertFraction(FractionTest.java:34)

00:25:54.356 [pool-1148-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.357 [pool-1149-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.359 [pool-1150-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.360 [pool-1151-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:54.361 [pool-1152-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:54.362 [pool-1153-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.884 [pool-1154-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (519 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.896 [pool-1155-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.907 [pool-1156-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.923 [pool-1157-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.925 [pool-1158-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.927 [pool-1159-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.930 [pool-1160-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.931 [pool-1161-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.932 [pool-1162-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.976 [pool-1163-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (43 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:54.983 [pool-1164-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:54.984 [pool-1165-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeRange(org.apache.commons.math3.random.Well512aTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 258.03800000000007. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		114
4	0.11		237
5	0.11		121
6	0.11		107
7	0.11		93
8	0.11		111
9	0.11		111
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:54.987 [pool-1166-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.Well512aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 258.03800000000007. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		114
4	0.11		237
5	0.11		121
6	0.11		107
7	0.11		93
8	0.11		111
9	0.11		111
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 258.03800000000007. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		114
4	0.11		237
5	0.11		121
6	0.11		107
7	0.11		93
8	0.11		111
9	0.11		111
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:54.988 [pool-1167-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 1.1220227212582756E-4 chisquare statistic = 43.944087396039386. 
bin		expected	observed
[1,26)		7.57		10
[26,28)		11.77		14
[28,30)		23.89		25
[30,32)		42.29		41
[32,34)		65.88		66
[34,36)		91.01		81
[36,38)		112.24		104
[38,40)		124.32		109
[40,42)		124.36		179
[42,44)		112.89		128
[44,46)		93.43		77
[46,48)		70.77		71
[48,50)		49.25		51
[50,52)		31.59		18
[52,56)		29.06		19
[56,inf)		9.68		7
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:55.163 [pool-1168-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (175 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.Well512aTest)
[Chisquare test failed for mean = 40.0 p-value = 1.1220227212582756E-4 chisquare statistic = 43.944087396039386. 
bin		expected	observed
[1,26)		7.57		10
[26,28)		11.77		14
[28,30)		23.89		25
[30,32)		42.29		41
[32,34)		65.88		66
[34,36)		91.01		81
[36,38)		112.24		104
[38,40)		124.32		109
[40,42)		124.36		179
[42,44)		112.89		128
[44,46)		93.43		77
[46,48)		70.77		71
[48,50)		49.25		51
[50,52)		31.59		18
[52,56)		29.06		19
[56,inf)		9.68		7
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 1.1220227212582756E-4 chisquare statistic = 43.944087396039386. 
bin		expected	observed
[1,26)		7.57		10
[26,28)		11.77		14
[28,30)		23.89		25
[30,32)		42.29		41
[32,34)		65.88		66
[34,36)		91.01		81
[36,38)		112.24		104
[38,40)		124.32		109
[40,42)		124.36		179
[42,44)		112.89		128
[44,46)		93.43		77
[46,48)		70.77		71
[48,50)		49.25		51
[50,52)		31.59		18
[52,56)		29.06		19
[56,inf)		9.68		7
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:55.198 [pool-1169-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (34 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 258.03800000000007. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		114
4	0.11		237
5	0.11		121
6	0.11		107
7	0.11		93
8	0.11		111
9	0.11		111
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:55.200 [pool-1170-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.Well512aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 258.03800000000007. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		114
4	0.11		237
5	0.11		121
6	0.11		107
7	0.11		93
8	0.11		111
9	0.11		111
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 258.03800000000007. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		114
4	0.11		237
5	0.11		121
6	0.11		107
7	0.11		93
8	0.11		111
9	0.11		111
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:55.202 [pool-1171-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.208 [pool-1172-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.210 [pool-1173-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:55.211 [pool-1174-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeRange(org.apache.commons.math3.random.Well512aTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:55.216 [pool-1175-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.218 [pool-1176-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.224 [pool-1177-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:55.226 [pool-1178-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeRange(org.apache.commons.math3.random.MersenneTwisterTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 213.39800000000005. 
value	expected	observed
1	0.11		0
2	0.11		113
3	0.11		110
4	0.11		216
5	0.11		126
6	0.11		112
7	0.11		109
8	0.11		100
9	0.11		114
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:55.228 [pool-1179-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.MersenneTwisterTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 213.39800000000005. 
value	expected	observed
1	0.11		0
2	0.11		113
3	0.11		110
4	0.11		216
5	0.11		126
6	0.11		112
7	0.11		109
8	0.11		100
9	0.11		114
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 213.39800000000005. 
value	expected	observed
1	0.11		0
2	0.11		113
3	0.11		110
4	0.11		216
5	0.11		126
6	0.11		112
7	0.11		109
8	0.11		100
9	0.11		114
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:55.230 [pool-1180-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 44.0 p-value = 8.466795916947101E-4 chisquare statistic = 39.75025533577216. 
bin		expected	observed
[1,30)		10.74		10
[30,32)		14.28		8
[32,34)		26.87		30
[34,36)		44.86		46
[36,38)		66.85		69
[38,40)		89.48		74
[40,42)		108.18		122
[42,44)		118.69		113
[44,46)		118.72		172
[46,48)		108.7		94
[48,50)		91.44		88
[50,52)		70.92		55
[52,54)		50.87		42
[54,56)		33.84		30
[56,58)		20.94		21
[58,61)		15.87		16
[61,inf)		8.75		10
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:55.390 [pool-1181-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (159 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.MersenneTwisterTest)
[Chisquare test failed for mean = 44.0 p-value = 8.466795916947101E-4 chisquare statistic = 39.75025533577216. 
bin		expected	observed
[1,30)		10.74		10
[30,32)		14.28		8
[32,34)		26.87		30
[34,36)		44.86		46
[36,38)		66.85		69
[38,40)		89.48		74
[40,42)		108.18		122
[42,44)		118.69		113
[44,46)		118.72		172
[46,48)		108.7		94
[48,50)		91.44		88
[50,52)		70.92		55
[52,54)		50.87		42
[54,56)		33.84		30
[56,58)		20.94		21
[58,61)		15.87		16
[61,inf)		8.75		10
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 44.0 p-value = 8.466795916947101E-4 chisquare statistic = 39.75025533577216. 
bin		expected	observed
[1,30)		10.74		10
[30,32)		14.28		8
[32,34)		26.87		30
[34,36)		44.86		46
[36,38)		66.85		69
[38,40)		89.48		74
[40,42)		108.18		122
[42,44)		118.69		113
[44,46)		118.72		172
[46,48)		108.7		94
[48,50)		91.44		88
[50,52)		70.92		55
[52,54)		50.87		42
[54,56)		33.84		30
[56,58)		20.94		21
[58,61)		15.87		16
[61,inf)		8.75		10
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:55.424 [pool-1182-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (33 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 213.39800000000005. 
value	expected	observed
1	0.11		0
2	0.11		113
3	0.11		110
4	0.11		216
5	0.11		126
6	0.11		112
7	0.11		109
8	0.11		100
9	0.11		114
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:55.426 [pool-1183-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.MersenneTwisterTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 213.39800000000005. 
value	expected	observed
1	0.11		0
2	0.11		113
3	0.11		110
4	0.11		216
5	0.11		126
6	0.11		112
7	0.11		109
8	0.11		100
9	0.11		114
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 213.39800000000005. 
value	expected	observed
1	0.11		0
2	0.11		113
3	0.11		110
4	0.11		216
5	0.11		126
6	0.11		112
7	0.11		109
8	0.11		100
9	0.11		114
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:55.428 [pool-1184-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.433 [pool-1185-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.435 [pool-1186-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:55.436 [pool-1187-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeRange(org.apache.commons.math3.random.MersenneTwisterTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:55.441 [pool-1188-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.442 [pool-1189-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.443 [pool-1190-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.450 [pool-1191-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.451 [pool-1192-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<-0.6760391625125302> but was:<0.60590896882996>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest.testMoreThanOnePeriodCoverage(UnivariatePeriodicInterpolatorTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:55.452 [pool-1193-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMoreThanOnePeriodCoverage(org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest)
[expected:<-0.6760391625125302> but was:<0.60590896882996>]
java.lang.AssertionError: expected:<-0.6760391625125302> but was:<0.60590896882996>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest.testMoreThanOnePeriodCoverage(UnivariatePeriodicInterpolatorTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:55.457 [pool-1194-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.458 [pool-1195-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.458 [pool-1196-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.461 [pool-1197-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.461 [pool-1198-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.462 [pool-1199-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.467 [pool-1200-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.468 [pool-1201-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.468 [pool-1202-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.475 [pool-1203-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.478 [pool-1204-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.480 [pool-1205-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.483 [pool-1206-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.489 [pool-1207-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.537 [pool-1208-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (47 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.574 [pool-1209-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (37 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.575 [pool-1210-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.575 [pool-1211-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.577 [pool-1212-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.578 [pool-1213-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.752 [pool-1214-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (150 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.753 [pool-1215-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:55.754 [pool-1216-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.199 [pool-1217-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (444 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.200 [pool-1218-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.201 [pool-1219-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.227 [pool-1220-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (26 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.230 [pool-1221-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.230 [pool-1222-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.236 [pool-1223-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.241 [pool-1224-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.242 [pool-1225-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.243 [pool-1226-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.244 [pool-1227-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.245 [pool-1228-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.246 [pool-1229-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.247 [pool-1230-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.247 [pool-1231-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.248 [pool-1232-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.250 [pool-1233-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.251 [pool-1234-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.251 [pool-1235-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.252 [pool-1236-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.252 [pool-1237-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.253 [pool-1238-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.254 [pool-1239-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.255 [pool-1240-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.256 [pool-1241-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.257 [pool-1242-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.258 [pool-1243-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.259 [pool-1244-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.260 [pool-1245-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.260 [pool-1246-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.262 [pool-1247-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.262 [pool-1248-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.263 [pool-1249-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.263 [pool-1250-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.263 [pool-1251-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.264 [pool-1252-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.264 [pool-1253-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.265 [pool-1254-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.265 [pool-1255-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.276 [pool-1256-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.278 [pool-1257-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.279 [pool-1258-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.283 [pool-1259-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.291 [pool-1260-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.297 [pool-1261-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.301 [pool-1262-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.307 [pool-1263-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.310 [pool-1264-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.315 [pool-1265-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.317 [pool-1266-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.322 [pool-1267-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.328 [pool-1268-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.334 [pool-1269-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.338 [pool-1270-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.340 [pool-1271-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.365 [pool-1272-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.368 [pool-1273-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.370 [pool-1274-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.375 [pool-1275-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.380 [pool-1276-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.381 [pool-1277-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.383 [pool-1278-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.386 [pool-1279-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.388 [pool-1280-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.390 [pool-1281-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.391 [pool-1282-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.393 [pool-1283-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.395 [pool-1284-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.397 [pool-1285-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.398 [pool-1286-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.400 [pool-1287-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.403 [pool-1288-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.404 [pool-1289-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.405 [pool-1290-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.408 [pool-1291-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.411 [pool-1292-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: double ceil(-1.1102230246251565E-16) expected -0.0 actual 1.0 entries [8]
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:56.417 [pool-1293-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ test1[36](org.apache.commons.math3.util.FastMathStrictComparisonTest)
[double ceil(-1.1102230246251565E-16) expected -0.0 actual 1.0 entries [8]]
java.lang.AssertionError: double ceil(-1.1102230246251565E-16) expected -0.0 actual 1.0 entries [8]    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: double floor(-1.1102230246251565E-16) expected bff0000000000000 actual 8000000000000000 entries [8]
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:56.421 [pool-1294-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ test1[37](org.apache.commons.math3.util.FastMathStrictComparisonTest)
[double floor(-1.1102230246251565E-16) expected bff0000000000000 actual 8000000000000000 entries [8]]
java.lang.AssertionError: double floor(-1.1102230246251565E-16) expected bff0000000000000 actual 8000000000000000 entries [8]    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
00:25:56.425 [pool-1295-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
00:25:56.429 [pool-1296-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
00:25:56.433 [pool-1297-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.437 [pool-1298-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.543 [pool-1299-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (106 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.546 [pool-1300-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.562 [pool-1301-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.564 [pool-1302-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.565 [pool-1303-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.566 [pool-1304-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.567 [pool-1305-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.569 [pool-1306-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.570 [pool-1307-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.571 [pool-1308-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.572 [pool-1309-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.573 [pool-1310-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.574 [pool-1311-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.575 [pool-1312-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.576 [pool-1313-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.577 [pool-1314-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.579 [pool-1315-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.580 [pool-1316-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.587 [pool-1317-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.591 [pool-1318-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.736 [pool-1319-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (144 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.737 [pool-1320-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.739 [pool-1321-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.741 [pool-1322-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.742 [pool-1323-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.759 [pool-1324-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.761 [pool-1325-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.762 [pool-1326-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.766 [pool-1327-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.769 [pool-1328-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.770 [pool-1329-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.771 [pool-1330-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.772 [pool-1331-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.775 [pool-1332-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.776 [pool-1333-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.780 [pool-1334-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:56.784 [pool-1335-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeRange(org.apache.commons.math3.random.BitsStreamGeneratorTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 190.59200000000007. 
value	expected	observed
1	0.11		0
2	0.11		115
3	0.11		109
4	0.11		204
5	0.11		110
6	0.11		121
7	0.11		109
8	0.11		112
9	0.11		120
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:56.786 [pool-1336-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.BitsStreamGeneratorTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 190.59200000000007. 
value	expected	observed
1	0.11		0
2	0.11		115
3	0.11		109
4	0.11		204
5	0.11		110
6	0.11		121
7	0.11		109
8	0.11		112
9	0.11		120
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 190.59200000000007. 
value	expected	observed
1	0.11		0
2	0.11		115
3	0.11		109
4	0.11		204
5	0.11		110
6	0.11		121
7	0.11		109
8	0.11		112
9	0.11		120
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:56.788 [pool-1337-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 3.542275846800669E-4 chisquare statistic = 40.708251988279194. 
bin		expected	observed
[1,26)		7.57		7
[26,28)		11.77		4
[28,30)		23.89		20
[30,32)		42.29		54
[32,34)		65.88		71
[34,36)		91.01		91
[36,38)		112.24		117
[38,40)		124.32		100
[40,42)		124.36		171
[42,44)		112.89		102
[44,46)		93.43		78
[46,48)		70.77		65
[48,50)		49.25		52
[50,52)		31.59		22
[52,56)		29.06		33
[56,inf)		9.68		13
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:56.883 [pool-1338-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (94 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.BitsStreamGeneratorTest)
[Chisquare test failed for mean = 40.0 p-value = 3.542275846800669E-4 chisquare statistic = 40.708251988279194. 
bin		expected	observed
[1,26)		7.57		7
[26,28)		11.77		4
[28,30)		23.89		20
[30,32)		42.29		54
[32,34)		65.88		71
[34,36)		91.01		91
[36,38)		112.24		117
[38,40)		124.32		100
[40,42)		124.36		171
[42,44)		112.89		102
[44,46)		93.43		78
[46,48)		70.77		65
[48,50)		49.25		52
[50,52)		31.59		22
[52,56)		29.06		33
[56,inf)		9.68		13
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 3.542275846800669E-4 chisquare statistic = 40.708251988279194. 
bin		expected	observed
[1,26)		7.57		7
[26,28)		11.77		4
[28,30)		23.89		20
[30,32)		42.29		54
[32,34)		65.88		71
[34,36)		91.01		91
[36,38)		112.24		117
[38,40)		124.32		100
[40,42)		124.36		171
[42,44)		112.89		102
[44,46)		93.43		78
[46,48)		70.77		65
[48,50)		49.25		52
[50,52)		31.59		22
[52,56)		29.06		33
[56,inf)		9.68		13
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:56.916 [pool-1339-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 190.59200000000007. 
value	expected	observed
1	0.11		0
2	0.11		115
3	0.11		109
4	0.11		204
5	0.11		110
6	0.11		121
7	0.11		109
8	0.11		112
9	0.11		120
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:56.919 [pool-1340-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.BitsStreamGeneratorTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 190.59200000000007. 
value	expected	observed
1	0.11		0
2	0.11		115
3	0.11		109
4	0.11		204
5	0.11		110
6	0.11		121
7	0.11		109
8	0.11		112
9	0.11		120
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 190.59200000000007. 
value	expected	observed
1	0.11		0
2	0.11		115
3	0.11		109
4	0.11		204
5	0.11		110
6	0.11		121
7	0.11		109
8	0.11		112
9	0.11		120
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:56.920 [pool-1341-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.925 [pool-1342-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.927 [pool-1343-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:56.929 [pool-1344-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeRange(org.apache.commons.math3.random.BitsStreamGeneratorTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:56.934 [pool-1345-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.943 [pool-1346-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:56.949 [pool-1347-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:56.950 [pool-1348-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeRange(org.apache.commons.math3.random.Well44497aTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 271.07. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		116
4	0.11		243
5	0.11		102
6	0.11		107
7	0.11		106
8	0.11		100
9	0.11		120
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:56.952 [pool-1349-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.Well44497aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 271.07. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		116
4	0.11		243
5	0.11		102
6	0.11		107
7	0.11		106
8	0.11		100
9	0.11		120
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 271.07. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		116
4	0.11		243
5	0.11		102
6	0.11		107
7	0.11		106
8	0.11		100
9	0.11		120
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:56.953 [pool-1350-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 7.32589267249395E-7 chisquare statistic = 57.29042271803001. 
bin		expected	observed
[1,26)		7.57		6
[26,28)		11.77		10
[28,30)		23.89		18
[30,32)		42.29		49
[32,34)		65.88		64
[34,36)		91.01		77
[36,38)		112.24		86
[38,40)		124.32		120
[40,42)		124.36		193
[42,44)		112.89		109
[44,46)		93.43		97
[46,48)		70.77		64
[48,50)		49.25		46
[50,52)		31.59		37
[52,56)		29.06		19
[56,inf)		9.68		5
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:57.022 [pool-1351-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (68 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.Well44497aTest)
[Chisquare test failed for mean = 40.0 p-value = 7.32589267249395E-7 chisquare statistic = 57.29042271803001. 
bin		expected	observed
[1,26)		7.57		6
[26,28)		11.77		10
[28,30)		23.89		18
[30,32)		42.29		49
[32,34)		65.88		64
[34,36)		91.01		77
[36,38)		112.24		86
[38,40)		124.32		120
[40,42)		124.36		193
[42,44)		112.89		109
[44,46)		93.43		97
[46,48)		70.77		64
[48,50)		49.25		46
[50,52)		31.59		37
[52,56)		29.06		19
[56,inf)		9.68		5
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 7.32589267249395E-7 chisquare statistic = 57.29042271803001. 
bin		expected	observed
[1,26)		7.57		6
[26,28)		11.77		10
[28,30)		23.89		18
[30,32)		42.29		49
[32,34)		65.88		64
[34,36)		91.01		77
[36,38)		112.24		86
[38,40)		124.32		120
[40,42)		124.36		193
[42,44)		112.89		109
[44,46)		93.43		97
[46,48)		70.77		64
[48,50)		49.25		46
[50,52)		31.59		37
[52,56)		29.06		19
[56,inf)		9.68		5
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:57.055 [pool-1352-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 271.07. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		116
4	0.11		243
5	0.11		102
6	0.11		107
7	0.11		106
8	0.11		100
9	0.11		120
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:57.058 [pool-1353-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.Well44497aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 271.07. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		116
4	0.11		243
5	0.11		102
6	0.11		107
7	0.11		106
8	0.11		100
9	0.11		120
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 271.07. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		116
4	0.11		243
5	0.11		102
6	0.11		107
7	0.11		106
8	0.11		100
9	0.11		120
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:57.059 [pool-1354-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.065 [pool-1355-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.067 [pool-1356-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:57.068 [pool-1357-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeRange(org.apache.commons.math3.random.Well44497aTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:57.072 [pool-1358-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.114 [pool-1359-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.util.MathUtilsTest.testNormalizeAngle(MathUtilsTest.java:135)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:57.117 [pool-1360-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNormalizeAngle(org.apache.commons.math3.util.MathUtilsTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.util.MathUtilsTest.testNormalizeAngle(MathUtilsTest.java:135)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:57.119 [pool-1361-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.120 [pool-1362-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<1.5> but was:<-10.722000122070312>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.util.MathUtilsTest.testReduce(MathUtilsTest.java:152)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:57.120 [pool-1363-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReduce(org.apache.commons.math3.util.MathUtilsTest)
[expected:<1.5> but was:<-10.722000122070312>]
java.lang.AssertionError: expected:<1.5> but was:<-10.722000122070312>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.util.MathUtilsTest.testReduce(MathUtilsTest.java:152)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:57.122 [pool-1364-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.126 [pool-1365-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.131 [pool-1366-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:57.132 [pool-1367-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeRange(org.apache.commons.math3.random.AbstractRandomGeneratorTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 220.34600000000006. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		116
4	0.11		220
5	0.11		125
6	0.11		107
7	0.11		108
8	0.11		110
9	0.11		108
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:57.134 [pool-1368-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.AbstractRandomGeneratorTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 220.34600000000006. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		116
4	0.11		220
5	0.11		125
6	0.11		107
7	0.11		108
8	0.11		110
9	0.11		108
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 220.34600000000006. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		116
4	0.11		220
5	0.11		125
6	0.11		107
7	0.11		108
8	0.11		110
9	0.11		108
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:57.135 [pool-1369-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 41.0 p-value = 1.830089467935725E-5 chisquare statistic = 50.61284512660313. 
bin		expected	observed
[1,27)		8.32		7
[27,29)		12.41		12
[29,31)		24.67		19
[31,33)		42.99		31
[33,35)		66.17		69
[35,37)		90.64		92
[37,39)		111.18		104
[39,41)		122.84		112
[41,43)		122.88		187
[43,45)		111.8		107
[45,47)		92.93		96
[47,49)		70.84		52
[49,51)		49.69		44
[51,53)		32.19		25
[53,55)		19.31		26
[55,58)		14.04		11
[58,inf)		7.09		6
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:57.207 [pool-1370-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (71 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.AbstractRandomGeneratorTest)
[Chisquare test failed for mean = 41.0 p-value = 1.830089467935725E-5 chisquare statistic = 50.61284512660313. 
bin		expected	observed
[1,27)		8.32		7
[27,29)		12.41		12
[29,31)		24.67		19
[31,33)		42.99		31
[33,35)		66.17		69
[35,37)		90.64		92
[37,39)		111.18		104
[39,41)		122.84		112
[41,43)		122.88		187
[43,45)		111.8		107
[45,47)		92.93		96
[47,49)		70.84		52
[49,51)		49.69		44
[51,53)		32.19		25
[53,55)		19.31		26
[55,58)		14.04		11
[58,inf)		7.09		6
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 41.0 p-value = 1.830089467935725E-5 chisquare statistic = 50.61284512660313. 
bin		expected	observed
[1,27)		8.32		7
[27,29)		12.41		12
[29,31)		24.67		19
[31,33)		42.99		31
[33,35)		66.17		69
[35,37)		90.64		92
[37,39)		111.18		104
[39,41)		122.84		112
[41,43)		122.88		187
[43,45)		111.8		107
[45,47)		92.93		96
[47,49)		70.84		52
[49,51)		49.69		44
[51,53)		32.19		25
[53,55)		19.31		26
[55,58)		14.04		11
[58,inf)		7.09		6
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:57.240 [pool-1371-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 220.34600000000006. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		116
4	0.11		220
5	0.11		125
6	0.11		107
7	0.11		108
8	0.11		110
9	0.11		108
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:57.243 [pool-1372-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.AbstractRandomGeneratorTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 220.34600000000006. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		116
4	0.11		220
5	0.11		125
6	0.11		107
7	0.11		108
8	0.11		110
9	0.11		108
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 220.34600000000006. 
value	expected	observed
1	0.11		0
2	0.11		106
3	0.11		116
4	0.11		220
5	0.11		125
6	0.11		107
7	0.11		108
8	0.11		110
9	0.11		108
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:57.244 [pool-1373-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.249 [pool-1374-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.251 [pool-1375-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:57.253 [pool-1376-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeRange(org.apache.commons.math3.random.AbstractRandomGeneratorTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:57.260 [pool-1377-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.267 [pool-1378-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.268 [pool-1379-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.271 [pool-1380-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.290 [pool-1381-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.298 [pool-1382-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:57.300 [pool-1383-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeRange(org.apache.commons.math3.random.ISAACTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.37600000000003. 
value	expected	observed
1	0.11		0
2	0.11		123
3	0.11		113
4	0.11		213
5	0.11		106
6	0.11		116
7	0.11		100
8	0.11		108
9	0.11		121
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:57.302 [pool-1384-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.ISAACTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 208.37600000000003. 
value	expected	observed
1	0.11		0
2	0.11		123
3	0.11		113
4	0.11		213
5	0.11		106
6	0.11		116
7	0.11		100
8	0.11		108
9	0.11		121
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.37600000000003. 
value	expected	observed
1	0.11		0
2	0.11		123
3	0.11		113
4	0.11		213
5	0.11		106
6	0.11		116
7	0.11		100
8	0.11		108
9	0.11		121
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:57.303 [pool-1385-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 42.0 p-value = 2.5046719884347368E-5 chisquare statistic = 49.758473188397005. 
bin		expected	observed
[1,28)		9.1		4
[28,30)		13.04		16
[30,32)		25.43		21
[32,34)		43.65		42
[34,36)		66.43		53
[36,38)		90.26		78
[38,40)		110.16		122
[40,42)		121.41		101
[42,44)		121.44		179
[44,46)		110.74		98
[46,48)		92.43		93
[48,50)		70.88		58
[50,52)		50.11		52
[52,54)		32.76		39
[54,56)		19.87		15
[56,59)		14.65		21
[59,inf)		7.63		8
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:57.392 [pool-1386-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (88 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.ISAACTest)
[Chisquare test failed for mean = 42.0 p-value = 2.5046719884347368E-5 chisquare statistic = 49.758473188397005. 
bin		expected	observed
[1,28)		9.1		4
[28,30)		13.04		16
[30,32)		25.43		21
[32,34)		43.65		42
[34,36)		66.43		53
[36,38)		90.26		78
[38,40)		110.16		122
[40,42)		121.41		101
[42,44)		121.44		179
[44,46)		110.74		98
[46,48)		92.43		93
[48,50)		70.88		58
[50,52)		50.11		52
[52,54)		32.76		39
[54,56)		19.87		15
[56,59)		14.65		21
[59,inf)		7.63		8
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 42.0 p-value = 2.5046719884347368E-5 chisquare statistic = 49.758473188397005. 
bin		expected	observed
[1,28)		9.1		4
[28,30)		13.04		16
[30,32)		25.43		21
[32,34)		43.65		42
[34,36)		66.43		53
[36,38)		90.26		78
[38,40)		110.16		122
[40,42)		121.41		101
[42,44)		121.44		179
[44,46)		110.74		98
[46,48)		92.43		93
[48,50)		70.88		58
[50,52)		50.11		52
[52,54)		32.76		39
[54,56)		19.87		15
[56,59)		14.65		21
[59,inf)		7.63		8
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:57.426 [pool-1387-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (33 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.37600000000003. 
value	expected	observed
1	0.11		0
2	0.11		123
3	0.11		113
4	0.11		213
5	0.11		106
6	0.11		116
7	0.11		100
8	0.11		108
9	0.11		121
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:57.429 [pool-1388-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.ISAACTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 208.37600000000003. 
value	expected	observed
1	0.11		0
2	0.11		123
3	0.11		113
4	0.11		213
5	0.11		106
6	0.11		116
7	0.11		100
8	0.11		108
9	0.11		121
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.37600000000003. 
value	expected	observed
1	0.11		0
2	0.11		123
3	0.11		113
4	0.11		213
5	0.11		106
6	0.11		116
7	0.11		100
8	0.11		108
9	0.11		121
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:57.430 [pool-1389-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.434 [pool-1390-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.436 [pool-1391-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:57.438 [pool-1392-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeRange(org.apache.commons.math3.random.ISAACTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:57.441 [pool-1393-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.458 [pool-1394-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.476 [pool-1395-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.484 [pool-1396-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.485 [pool-1397-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.486 [pool-1398-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.624 [pool-1399-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (138 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.625 [pool-1400-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.627 [pool-1401-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.629 [pool-1402-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.631 [pool-1403-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.645 [pool-1404-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.662 [pool-1405-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.665 [pool-1406-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.668 [pool-1407-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.673 [pool-1408-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.680 [pool-1409-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.690 [pool-1410-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:57.692 [pool-1411-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.276 [pool-1412-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (584 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.279 [pool-1413-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.282 [pool-1414-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.282 [pool-1415-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.304 [pool-1416-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.309 [pool-1417-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.311 [pool-1418-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.313 [pool-1419-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.323 [pool-1420-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.339 [pool-1421-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.340 [pool-1422-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.351 [pool-1423-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:58.353 [pool-1424-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeRange(org.apache.commons.math3.random.Well44497bTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.75400000000005. 
value	expected	observed
1	0.11		0
2	0.11		110
3	0.11		105
4	0.11		212
5	0.11		131
6	0.11		116
7	0.11		104
8	0.11		102
9	0.11		120
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:58.355 [pool-1425-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.Well44497bTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 208.75400000000005. 
value	expected	observed
1	0.11		0
2	0.11		110
3	0.11		105
4	0.11		212
5	0.11		131
6	0.11		116
7	0.11		104
8	0.11		102
9	0.11		120
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.75400000000005. 
value	expected	observed
1	0.11		0
2	0.11		110
3	0.11		105
4	0.11		212
5	0.11		131
6	0.11		116
7	0.11		104
8	0.11		102
9	0.11		120
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:58.355 [pool-1426-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 45.0 p-value = 2.0726566892836917E-4 chisquare statistic = 43.85840436308132. 
bin		expected	observed
[1,30)		7.34		9
[30,32)		10.45		10
[32,34)		20.56		22
[34,36)		35.88		25
[36,38)		55.91		69
[38,40)		78.26		62
[40,42)		98.93		107
[42,44)		113.5		96
[44,46)		118.72		172
[46,48)		113.67		112
[48,50)		99.99		105
[50,52)		81.1		70
[52,54)		60.83		52
[54,56)		42.32		37
[56,58)		27.38		20
[58,62)		25.84		22
[62,inf)		9.33		10
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:58.472 [pool-1427-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (115 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.Well44497bTest)
[Chisquare test failed for mean = 45.0 p-value = 2.0726566892836917E-4 chisquare statistic = 43.85840436308132. 
bin		expected	observed
[1,30)		7.34		9
[30,32)		10.45		10
[32,34)		20.56		22
[34,36)		35.88		25
[36,38)		55.91		69
[38,40)		78.26		62
[40,42)		98.93		107
[42,44)		113.5		96
[44,46)		118.72		172
[46,48)		113.67		112
[48,50)		99.99		105
[50,52)		81.1		70
[52,54)		60.83		52
[54,56)		42.32		37
[56,58)		27.38		20
[58,62)		25.84		22
[62,inf)		9.33		10
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 45.0 p-value = 2.0726566892836917E-4 chisquare statistic = 43.85840436308132. 
bin		expected	observed
[1,30)		7.34		9
[30,32)		10.45		10
[32,34)		20.56		22
[34,36)		35.88		25
[36,38)		55.91		69
[38,40)		78.26		62
[40,42)		98.93		107
[42,44)		113.5		96
[44,46)		118.72		172
[46,48)		113.67		112
[48,50)		99.99		105
[50,52)		81.1		70
[52,54)		60.83		52
[54,56)		42.32		37
[56,58)		27.38		20
[58,62)		25.84		22
[62,inf)		9.33		10
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:58.504 [pool-1428-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (31 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.75400000000005. 
value	expected	observed
1	0.11		0
2	0.11		110
3	0.11		105
4	0.11		212
5	0.11		131
6	0.11		116
7	0.11		104
8	0.11		102
9	0.11		120
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:58.506 [pool-1429-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.Well44497bTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 208.75400000000005. 
value	expected	observed
1	0.11		0
2	0.11		110
3	0.11		105
4	0.11		212
5	0.11		131
6	0.11		116
7	0.11		104
8	0.11		102
9	0.11		120
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.75400000000005. 
value	expected	observed
1	0.11		0
2	0.11		110
3	0.11		105
4	0.11		212
5	0.11		131
6	0.11		116
7	0.11		104
8	0.11		102
9	0.11		120
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:58.508 [pool-1430-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.512 [pool-1431-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.513 [pool-1432-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:58.515 [pool-1433-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeRange(org.apache.commons.math3.random.Well44497bTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:58.518 [pool-1434-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.522 [pool-1435-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.524 [pool-1436-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.525 [pool-1437-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.527 [pool-1438-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.529 [pool-1439-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.530 [pool-1440-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.530 [pool-1441-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.535 [pool-1442-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.535 [pool-1443-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.537 [pool-1444-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.541 [pool-1445-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.542 [pool-1446-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.578 [pool-1447-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (35 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.579 [pool-1448-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.682 [pool-1449-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (103 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.685 [pool-1450-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.687 [pool-1451-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.687 [pool-1452-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.688 [pool-1453-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.838 [pool-1454-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (149 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.839 [pool-1455-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.840 [pool-1456-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.840 [pool-1457-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest.testSinMin(UnivariateMultiStartOptimizerTest.java:44)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:58.847 [pool-1458-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSinMin(org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest.testSinMin(UnivariateMultiStartOptimizerTest.java:44)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:58.868 [pool-1459-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.919 [pool-1460-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (49 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.920 [pool-1461-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.926 [pool-1462-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.928 [pool-1463-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 264.2480000000001. 
value	expected	observed
-3	111.11		0
-2	111.11		101
-1	111.11		107
0	111.11		240
1	111.11		104
2	111.11		118
3	111.11		120
4	111.11		109
5	111.11		101
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:447)
    at org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.testSampling(IntegerDistributionAbstractTest.java:263)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:58.931 [pool-1464-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampling(org.apache.commons.math3.distribution.UniformIntegerDistributionTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 264.2480000000001. 
value	expected	observed
-3	111.11		0
-2	111.11		101
-1	111.11		107
0	111.11		240
1	111.11		104
2	111.11		118
3	111.11		120
4	111.11		109
5	111.11		101
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 264.2480000000001. 
value	expected	observed
-3	111.11		0
-2	111.11		101
-1	111.11		107
0	111.11		240
1	111.11		104
2	111.11		118
3	111.11		120
4	111.11		109
5	111.11		101
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:447)
    at org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.testSampling(IntegerDistributionAbstractTest.java:263)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:58.936 [pool-1465-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.938 [pool-1466-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.944 [pool-1467-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.959 [pool-1468-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.973 [pool-1469-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.984 [pool-1470-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.986 [pool-1471-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.987 [pool-1472-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.989 [pool-1473-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.990 [pool-1474-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.992 [pool-1475-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.993 [pool-1476-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.994 [pool-1477-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.995 [pool-1478-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.996 [pool-1479-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:58.997 [pool-1480-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.025 [pool-1481-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.026 [pool-1482-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.028 [pool-1483-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.029 [pool-1484-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.030 [pool-1485-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.031 [pool-1486-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.032 [pool-1487-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.033 [pool-1488-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.034 [pool-1489-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.035 [pool-1490-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.036 [pool-1491-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.037 [pool-1492-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.038 [pool-1493-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.039 [pool-1494-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.040 [pool-1495-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.041 [pool-1496-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.082 [pool-1497-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.085 [pool-1498-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.087 [pool-1499-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.088 [pool-1500-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.090 [pool-1501-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.091 [pool-1502-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.093 [pool-1503-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.094 [pool-1504-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.095 [pool-1505-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.096 [pool-1506-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.097 [pool-1507-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.099 [pool-1508-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.101 [pool-1509-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.102 [pool-1510-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.103 [pool-1511-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.104 [pool-1512-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.105 [pool-1513-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.106 [pool-1514-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.106 [pool-1515-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.108 [pool-1516-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.109 [pool-1517-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.109 [pool-1518-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.132 [pool-1519-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (22 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.134 [pool-1520-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.136 [pool-1521-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.137 [pool-1522-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.138 [pool-1523-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.139 [pool-1524-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.158 [pool-1525-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.160 [pool-1526-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.161 [pool-1527-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.162 [pool-1528-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.183 [pool-1529-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.185 [pool-1530-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.186 [pool-1531-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.187 [pool-1532-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.188 [pool-1533-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.189 [pool-1534-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.190 [pool-1535-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.191 [pool-1536-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.192 [pool-1537-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.194 [pool-1538-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.195 [pool-1539-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.195 [pool-1540-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.196 [pool-1541-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.197 [pool-1542-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.198 [pool-1543-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.199 [pool-1544-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.200 [pool-1545-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.201 [pool-1546-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.201 [pool-1547-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.202 [pool-1548-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.203 [pool-1549-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.204 [pool-1550-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.205 [pool-1551-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.206 [pool-1552-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.207 [pool-1553-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.209 [pool-1554-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.209 [pool-1555-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.210 [pool-1556-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.212 [pool-1557-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.213 [pool-1558-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.214 [pool-1559-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.215 [pool-1560-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.218 [pool-1561-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.219 [pool-1562-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.220 [pool-1563-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.221 [pool-1564-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.222 [pool-1565-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.223 [pool-1566-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.224 [pool-1567-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.225 [pool-1568-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.271 [pool-1569-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (45 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.271 [pool-1570-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.276 [pool-1571-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.277 [pool-1572-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.278 [pool-1573-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.280 [pool-1574-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.284 [pool-1575-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.285 [pool-1576-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.285 [pool-1577-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.286 [pool-1578-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.287 [pool-1579-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.291 [pool-1580-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.291 [pool-1581-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.292 [pool-1582-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.293 [pool-1583-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.293 [pool-1584-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.294 [pool-1585-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.295 [pool-1586-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.296 [pool-1587-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.297 [pool-1588-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.298 [pool-1589-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.299 [pool-1590-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.299 [pool-1591-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.300 [pool-1592-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.300 [pool-1593-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.301 [pool-1594-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.302 [pool-1595-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.304 [pool-1596-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.305 [pool-1597-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.305 [pool-1598-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.306 [pool-1599-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.307 [pool-1600-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.307 [pool-1601-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.317 [pool-1602-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.320 [pool-1603-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.323 [pool-1604-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<4.1> but was:<-2.183185307179587>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testNoError(HarmonicFitterTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:59.325 [pool-1605-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNoError(org.apache.commons.math3.optimization.fitting.HarmonicFitterTest)
[expected:<4.1> but was:<-2.183185307179587>]
java.lang.AssertionError: expected:<4.1> but was:<-2.183185307179587>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testNoError(HarmonicFitterTest.java:71)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:59.328 [pool-1606-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.328 [pool-1607-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.330 [pool-1608-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.331 [pool-1609-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.332 [pool-1610-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.332 [pool-1611-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.333 [pool-1612-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.333 [pool-1613-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.334 [pool-1614-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.334 [pool-1615-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.335 [pool-1616-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.339 [pool-1617-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.355 [pool-1618-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.359 [pool-1619-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.367 [pool-1620-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.370 [pool-1621-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.376 [pool-1622-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.378 [pool-1623-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.386 [pool-1624-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.388 [pool-1625-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.392 [pool-1626-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.400 [pool-1627-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.405 [pool-1628-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:59.406 [pool-1629-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeRange(org.apache.commons.math3.random.Well19937aTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeRange(RandomDataTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 266.6240000000001. 
value	expected	observed
1	0.11		0
2	0.11		116
3	0.11		107
4	0.11		240
5	0.11		109
6	0.11		93
7	0.11		121
8	0.11		98
9	0.11		116
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:59.408 [pool-1630-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.Well19937aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 266.6240000000001. 
value	expected	observed
1	0.11		0
2	0.11		116
3	0.11		107
4	0.11		240
5	0.11		109
6	0.11		93
7	0.11		121
8	0.11		98
9	0.11		116
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 266.6240000000001. 
value	expected	observed
1	0.11		0
2	0.11		116
3	0.11		107
4	0.11		240
5	0.11		109
6	0.11		93
7	0.11		121
8	0.11		98
9	0.11		116
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:59.409 [pool-1631-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 41.0 p-value = 9.151162873033414E-7 chisquare statistic = 58.55474628050202. 
bin		expected	observed
[1,27)		8.32		3
[27,29)		12.41		14
[29,31)		24.67		24
[31,33)		42.99		59
[33,35)		66.17		59
[35,37)		90.64		73
[37,39)		111.18		89
[39,41)		122.84		116
[41,43)		122.88		185
[43,45)		111.8		98
[45,47)		92.93		102
[47,49)		70.84		69
[49,51)		49.69		52
[51,53)		32.19		27
[53,55)		19.31		19
[55,58)		14.04		8
[58,inf)		7.09		3
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:59.479 [pool-1632-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (70 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.Well19937aTest)
[Chisquare test failed for mean = 41.0 p-value = 9.151162873033414E-7 chisquare statistic = 58.55474628050202. 
bin		expected	observed
[1,27)		8.32		3
[27,29)		12.41		14
[29,31)		24.67		24
[31,33)		42.99		59
[33,35)		66.17		59
[35,37)		90.64		73
[37,39)		111.18		89
[39,41)		122.84		116
[41,43)		122.88		185
[43,45)		111.8		98
[45,47)		92.93		102
[47,49)		70.84		69
[49,51)		49.69		52
[51,53)		32.19		27
[53,55)		19.31		19
[55,58)		14.04		8
[58,inf)		7.09		3
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 41.0 p-value = 9.151162873033414E-7 chisquare statistic = 58.55474628050202. 
bin		expected	observed
[1,27)		8.32		3
[27,29)		12.41		14
[29,31)		24.67		24
[31,33)		42.99		59
[33,35)		66.17		59
[35,37)		90.64		73
[37,39)		111.18		89
[39,41)		122.84		116
[41,43)		122.88		185
[43,45)		111.8		98
[45,47)		92.93		102
[47,49)		70.84		69
[49,51)		49.69		52
[51,53)		32.19		27
[53,55)		19.31		19
[55,58)		14.04		8
[58,inf)		7.09		3
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:59.512 [pool-1633-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (32 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 266.6240000000001. 
value	expected	observed
1	0.11		0
2	0.11		116
3	0.11		107
4	0.11		240
5	0.11		109
6	0.11		93
7	0.11		121
8	0.11		98
9	0.11		116
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:59.514 [pool-1634-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.Well19937aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 266.6240000000001. 
value	expected	observed
1	0.11		0
2	0.11		116
3	0.11		107
4	0.11		240
5	0.11		109
6	0.11		93
7	0.11		121
8	0.11		98
9	0.11		116
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 266.6240000000001. 
value	expected	observed
1	0.11		0
2	0.11		116
3	0.11		107
4	0.11		240
5	0.11		109
6	0.11		93
7	0.11		121
8	0.11		98
9	0.11		116
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:59.515 [pool-1635-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.519 [pool-1636-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.521 [pool-1637-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:59.522 [pool-1638-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeRange(org.apache.commons.math3.random.Well19937aTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeRange(RandomDataTest.java:121)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:59.525 [pool-1639-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.526 [pool-1640-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.536 [pool-1641-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.538 [pool-1642-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.582 [pool-1643-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (43 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.598 [pool-1644-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.599 [pool-1645-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.600 [pool-1646-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.601 [pool-1647-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.602 [pool-1648-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.603 [pool-1649-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.604 [pool-1650-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.605 [pool-1651-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.607 [pool-1652-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataImpl.nextSample(RandomDataImpl.java:979)
    at org.apache.commons.math3.random.RandomDataTest.testNextSample(RandomDataTest.java:868)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:59.608 [pool-1653-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSample(org.apache.commons.math3.random.Well19937cTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataImpl.nextSample(RandomDataImpl.java:979)
    at org.apache.commons.math3.random.RandomDataTest.testNextSample(RandomDataTest.java:868)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:59.612 [pool-1654-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 278.90000000000003. 
value	expected	observed
1	0.11		118
2	0.11		91
3	0.11		244
4	0.11		127
5	0.11		101
6	0.11		109
7	0.11		112
8	0.11		98
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:59.614 [pool-1655-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.Well19937cTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 278.90000000000003. 
value	expected	observed
1	0.11		118
2	0.11		91
3	0.11		244
4	0.11		127
5	0.11		101
6	0.11		109
7	0.11		112
8	0.11		98
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 278.90000000000003. 
value	expected	observed
1	0.11		118
2	0.11		91
3	0.11		244
4	0.11		127
5	0.11		101
6	0.11		109
7	0.11		112
8	0.11		98
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:59.616 [pool-1656-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 51.0 p-value = 5.962786823094923E-4 chisquare statistic = 42.3530232589932. 
bin		expected	observed
[1,35)		7.53		8
[35,37)		9.66		8
[37,39)		18.28		17
[39,41)		31.16		42
[41,43)		48.1		38
[43,45)		67.55		62
[45,47)		86.66		91
[47,49)		101.98		91
[49,51)		110.45		143
[51,53)		110.47		148
[53,55)		102.35		86
[55,57)		88.08		67
[57,59)		70.59		72
[59,61)		52.82		42
[61,63)		36.98		33
[63,65)		24.28		19
[65,69)		23.67		22
[69,inf)		9.4		11
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:59.740 [pool-1657-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (124 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.Well19937cTest)
[Chisquare test failed for mean = 51.0 p-value = 5.962786823094923E-4 chisquare statistic = 42.3530232589932. 
bin		expected	observed
[1,35)		7.53		8
[35,37)		9.66		8
[37,39)		18.28		17
[39,41)		31.16		42
[41,43)		48.1		38
[43,45)		67.55		62
[45,47)		86.66		91
[47,49)		101.98		91
[49,51)		110.45		143
[51,53)		110.47		148
[53,55)		102.35		86
[55,57)		88.08		67
[57,59)		70.59		72
[59,61)		52.82		42
[61,63)		36.98		33
[63,65)		24.28		19
[65,69)		23.67		22
[69,inf)		9.4		11
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 51.0 p-value = 5.962786823094923E-4 chisquare statistic = 42.3530232589932. 
bin		expected	observed
[1,35)		7.53		8
[35,37)		9.66		8
[37,39)		18.28		17
[39,41)		31.16		42
[41,43)		48.1		38
[43,45)		67.55		62
[45,47)		86.66		91
[47,49)		101.98		91
[49,51)		110.45		143
[51,53)		110.47		148
[53,55)		102.35		86
[55,57)		88.08		67
[57,59)		70.59		72
[59,61)		52.82		42
[61,63)		36.98		33
[63,65)		24.28		19
[65,69)		23.67		22
[69,inf)		9.4		11
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:59.784 [pool-1658-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (43 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 278.90000000000003. 
value	expected	observed
1	0.11		118
2	0.11		91
3	0.11		244
4	0.11		127
5	0.11		101
6	0.11		109
7	0.11		112
8	0.11		98
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:59.786 [pool-1659-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.Well19937cTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 278.90000000000003. 
value	expected	observed
1	0.11		118
2	0.11		91
3	0.11		244
4	0.11		127
5	0.11		101
6	0.11		109
7	0.11		112
8	0.11		98
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 278.90000000000003. 
value	expected	observed
1	0.11		118
2	0.11		91
3	0.11		244
4	0.11		127
5	0.11		101
6	0.11		109
7	0.11		112
8	0.11		98
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:59.788 [pool-1660-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPermutation(org.apache.commons.math3.random.Well19937cTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:59.789 [pool-1661-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntPositiveRange(org.apache.commons.math3.random.Well19937cTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:59.790 [pool-1662-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.794 [pool-1663-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:59.795 [pool-1664-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongPositiveRange(org.apache.commons.math3.random.Well19937cTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:59.798 [pool-1665-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.799 [pool-1666-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataImpl.nextSample(RandomDataImpl.java:979)
    at org.apache.commons.math3.random.RandomDataTest.testNextSample(RandomDataTest.java:868)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:59.800 [pool-1667-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSample(org.apache.commons.math3.random.RandomDataTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataImpl.nextSample(RandomDataImpl.java:979)
    at org.apache.commons.math3.random.RandomDataTest.testNextSample(RandomDataTest.java:868)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:59.804 [pool-1668-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
1	0.11		101
2	0.11		107
3	0.11		240
4	0.11		104
5	0.11		118
6	0.11		120
7	0.11		109
8	0.11		101
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:59.806 [pool-1669-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
1	0.11		101
2	0.11		107
3	0.11		240
4	0.11		104
5	0.11		118
6	0.11		120
7	0.11		109
8	0.11		101
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
1	0.11		101
2	0.11		107
3	0.11		240
4	0.11		104
5	0.11		118
6	0.11		120
7	0.11		109
8	0.11		101
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:59.806 [pool-1670-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 210.35600000000005. 
value	expected	observed
1	0.11		128
2	0.11		110
3	0.11		213
4	0.11		107
5	0.11		103
6	0.11		126
7	0.11		109
8	0.11		104
9	0.11		0
This test can fail randomly due to sampling error with probability 1.0E-4.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureIntUniform(RandomDataTest.java:321)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureIntNegativeToPositiveRange(RandomDataTest.java:281)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:59.812 [pool-1671-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSecureIntNegativeToPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 210.35600000000005. 
value	expected	observed
1	0.11		128
2	0.11		110
3	0.11		213
4	0.11		107
5	0.11		103
6	0.11		126
7	0.11		109
8	0.11		104
9	0.11		0
This test can fail randomly due to sampling error with probability 1.0E-4.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 210.35600000000005. 
value	expected	observed
1	0.11		128
2	0.11		110
3	0.11		213
4	0.11		107
5	0.11		103
6	0.11		126
7	0.11		109
8	0.11		104
9	0.11		0
This test can fail randomly due to sampling error with probability 1.0E-4.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureIntUniform(RandomDataTest.java:321)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureIntNegativeToPositiveRange(RandomDataTest.java:281)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: Chisquare test failed for mean = 43.0 p-value = 2.567724326932863E-4 chisquare statistic = 43.24381813902328. 
bin		expected	observed
[1,29)		9.91		6
[29,31)		13.66		15
[31,33)		26.17		35
[33,35)		44.27		36
[35,37)		66.65		55
[37,39)		89.87		86
[39,41)		109.15		116
[41,43)		120.03		163
[43,45)		120.06		140
[45,47)		109.71		97
[47,49)		91.94		66
[49,51)		70.91		60
[51,53)		50.5		41
[53,55)		33.31		36
[55,57)		20.41		19
[57,60)		15.26		22
[60,inf)		8.18		7
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:59.891 [pool-1672-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (79 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.RandomDataTest)
[Chisquare test failed for mean = 43.0 p-value = 2.567724326932863E-4 chisquare statistic = 43.24381813902328. 
bin		expected	observed
[1,29)		9.91		6
[29,31)		13.66		15
[31,33)		26.17		35
[33,35)		44.27		36
[35,37)		66.65		55
[37,39)		89.87		86
[39,41)		109.15		116
[41,43)		120.03		163
[43,45)		120.06		140
[45,47)		109.71		97
[47,49)		91.94		66
[49,51)		70.91		60
[51,53)		50.5		41
[53,55)		33.31		36
[55,57)		20.41		19
[57,60)		15.26		22
[60,inf)		8.18		7
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 43.0 p-value = 2.567724326932863E-4 chisquare statistic = 43.24381813902328. 
bin		expected	observed
[1,29)		9.91		6
[29,31)		13.66		15
[31,33)		26.17		35
[33,35)		44.27		36
[35,37)		66.65		55
[37,39)		89.87		86
[39,41)		109.15		116
[41,43)		120.03		163
[43,45)		120.06		140
[45,47)		109.71		97
[47,49)		91.94		66
[49,51)		70.91		60
[51,53)		50.5		41
[53,55)		33.31		36
[55,57)		20.41		19
[57,60)		15.26		22
[60,inf)		8.18		7
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:25:59.932 [pool-1673-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (41 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureLongUniform(RandomDataTest.java:251)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureLongPositiveRange(RandomDataTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:59.934 [pool-1674-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSecureLongPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureLongUniform(RandomDataTest.java:251)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureLongPositiveRange(RandomDataTest.java:242)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureIntUniform(RandomDataTest.java:308)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureIntPositiveRange(RandomDataTest.java:299)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:59.935 [pool-1675-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSecureIntPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureIntUniform(RandomDataTest.java:308)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureIntPositiveRange(RandomDataTest.java:299)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
1	0.11		101
2	0.11		107
3	0.11		240
4	0.11		104
5	0.11		118
6	0.11		120
7	0.11		109
8	0.11		101
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:59.937 [pool-1676-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
1	0.11		101
2	0.11		107
3	0.11		240
4	0.11		104
5	0.11		118
6	0.11		120
7	0.11		109
8	0.11		101
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
1	0.11		101
2	0.11		107
3	0.11		240
4	0.11		104
5	0.11		118
6	0.11		120
7	0.11		109
8	0.11		101
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:59.950 [pool-1677-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.962 [pool-1678-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:25:59.964 [pool-1679-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPermutation(org.apache.commons.math3.random.RandomDataTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:59.965 [pool-1680-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:59.966 [pool-1681-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 232.78400000000005. 
value	expected	observed
1	0.11		116
2	0.11		102
3	0.11		225
4	0.11		96
5	0.11		108
6	0.11		111
7	0.11		123
8	0.11		119
9	0.11		0
This test can fail randomly due to sampling error with probability 1.0E-4.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureLongUniform(RandomDataTest.java:264)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureLongNegativeToPositiveRange(RandomDataTest.java:224)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:25:59.971 [pool-1682-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSecureLongNegativeToPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 232.78400000000005. 
value	expected	observed
1	0.11		116
2	0.11		102
3	0.11		225
4	0.11		96
5	0.11		108
6	0.11		111
7	0.11		123
8	0.11		119
9	0.11		0
This test can fail randomly due to sampling error with probability 1.0E-4.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 232.78400000000005. 
value	expected	observed
1	0.11		116
2	0.11		102
3	0.11		225
4	0.11		96
5	0.11		108
6	0.11		111
7	0.11		123
8	0.11		119
9	0.11		0
This test can fail randomly due to sampling error with probability 1.0E-4.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextSecureLongUniform(RandomDataTest.java:264)
    at org.apache.commons.math3.random.RandomDataTest.testNextSecureLongNegativeToPositiveRange(RandomDataTest.java:224)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:25:59.974 [pool-1683-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:25:59.975 [pool-1684-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongPositiveRange(org.apache.commons.math3.random.RandomDataTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:25:59.976 [pool-1685-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.977 [pool-1686-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.978 [pool-1687-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.978 [pool-1688-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.979 [pool-1689-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.979 [pool-1690-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: array lengths differed, expected.length=22 actual.length=23
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:25:59.980 [pool-1691-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulBoth(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=22 actual.length=23]
java.lang.AssertionError: array lengths differed, expected.length=22 actual.length=23    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=22
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:25:59.981 [pool-1692-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulLast(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=21 actual.length=22]
java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=22    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

java.lang.AssertionError: array lengths differed, expected.length=20 actual.length=21
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:25:59.982 [pool-1693-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulNeither(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=20 actual.length=21]
java.lang.AssertionError: array lengths differed, expected.length=20 actual.length=21    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

00:25:59.982 [pool-1694-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=22
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)
00:25:59.983 [pool-1695-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMulFirst(org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest)
[array lengths differed, expected.length=21 actual.length=22]
java.lang.AssertionError: array lengths differed, expected.length=21 actual.length=22    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)
    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)
    at org.junit.Assert.assertArrayEquals(Assert.java:419)
    at org.junit.Assert.assertArrayEquals(Assert.java:430)
    at org.apache.commons.math3.ode.sampling.StepNormalizerOutputTestBase.doTest(StepNormalizerOutputTestBase.java:218)

00:25:59.984 [pool-1696-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.984 [pool-1697-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.985 [pool-1698-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.985 [pool-1699-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.986 [pool-1700-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.986 [pool-1701-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:25:59.987 [pool-1702-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.026 [pool-1703-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (39 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.045 [pool-1704-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.048 [pool-1705-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPutAbsentOnExisting(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.050 [pool-1706-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPutKeysWithCollision2(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.052 [pool-1707-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPutKeysWithCollisions(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.053 [pool-1708-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCopy(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.054 [pool-1709-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testContainsKey(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.055 [pool-1710-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testRemoveAbsent(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.057 [pool-1711-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPutAndGet(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.058 [pool-1712-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPutAndGetWith0ExpectedSize(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.059 [pool-1713-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testRemove2(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.060 [pool-1714-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testConcurrentModification(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.061 [pool-1715-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testGetAbsent(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.063 [pool-1716-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testGetFromEmpty(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.064 [pool-1717-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPutOnExisting(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.065 [pool-1718-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testRemove(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.066 [pool-1719-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIterator(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.074 [pool-1720-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPutAndGetWithExpectedSize(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.075 [pool-1721-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testRemoveFromEmpty(org.apache.commons.math3.util.OpenIntToFieldTest)
[illegal state: Unable to convert 100 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 100 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.util.OpenIntToFieldTest.setUp(OpenIntToFieldTest.java:44)
    at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:00.076 [pool-1722-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.078 [pool-1723-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.078 [pool-1724-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.079 [pool-1725-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.085 [pool-1726-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataImpl.nextSample(RandomDataImpl.java:979)
    at org.apache.commons.math3.random.RandomDataTest.testNextSample(RandomDataTest.java:868)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:00.096 [pool-1727-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextSample(org.apache.commons.math3.random.Well1024aTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataImpl.nextSample(RandomDataImpl.java:979)
    at org.apache.commons.math3.random.RandomDataTest.testNextSample(RandomDataTest.java:868)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:00.099 [pool-1728-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 252.56600000000006. 
value	expected	observed
1	0.11		103
2	0.11		101
3	0.11		235
4	0.11		108
5	0.11		116
6	0.11		103
7	0.11		121
8	0.11		113
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:00.101 [pool-1729-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.Well1024aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 252.56600000000006. 
value	expected	observed
1	0.11		103
2	0.11		101
3	0.11		235
4	0.11		108
5	0.11		116
6	0.11		103
7	0.11		121
8	0.11		113
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 252.56600000000006. 
value	expected	observed
1	0.11		103
2	0.11		101
3	0.11		235
4	0.11		108
5	0.11		116
6	0.11		103
7	0.11		121
8	0.11		113
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:26:00.102 [pool-1730-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 49.0 p-value = 5.100849906869431E-4 chisquare statistic = 42.819692148254305. 
bin		expected	observed
[1,34)		10.05		7
[34,36)		12.48		10
[36,38)		23.04		22
[38,40)		38.19		38
[40,42)		57.18		46
[42,44)		77.7		57
[44,46)		96.28		119
[46,48)		109.19		102
[48,50)		113.79		156
[50,52)		109.33		118
[52,54)		97.15		86
[54,56)		80.08		59
[56,58)		61.39		62
[58,60)		43.89		39
[60,62)		29.32		34
[62,64)		18.35		21
[64,67)		14.22		19
[67,inf)		8.37		5
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.206 [pool-1731-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (103 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.Well1024aTest)
[Chisquare test failed for mean = 49.0 p-value = 5.100849906869431E-4 chisquare statistic = 42.819692148254305. 
bin		expected	observed
[1,34)		10.05		7
[34,36)		12.48		10
[36,38)		23.04		22
[38,40)		38.19		38
[40,42)		57.18		46
[42,44)		77.7		57
[44,46)		96.28		119
[46,48)		109.19		102
[48,50)		113.79		156
[50,52)		109.33		118
[52,54)		97.15		86
[54,56)		80.08		59
[56,58)		61.39		62
[58,60)		43.89		39
[60,62)		29.32		34
[62,64)		18.35		21
[64,67)		14.22		19
[67,inf)		8.37		5
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 49.0 p-value = 5.100849906869431E-4 chisquare statistic = 42.819692148254305. 
bin		expected	observed
[1,34)		10.05		7
[34,36)		12.48		10
[36,38)		23.04		22
[38,40)		38.19		38
[40,42)		57.18		46
[42,44)		77.7		57
[44,46)		96.28		119
[46,48)		109.19		102
[48,50)		113.79		156
[50,52)		109.33		118
[52,54)		97.15		86
[54,56)		80.08		59
[56,58)		61.39		62
[58,60)		43.89		39
[60,62)		29.32		34
[62,64)		18.35		21
[64,67)		14.22		19
[67,inf)		8.37		5
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:00.248 [pool-1732-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (41 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 252.56600000000006. 
value	expected	observed
1	0.11		103
2	0.11		101
3	0.11		235
4	0.11		108
5	0.11		116
6	0.11		103
7	0.11		121
8	0.11		113
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:00.250 [pool-1733-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.Well1024aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 252.56600000000006. 
value	expected	observed
1	0.11		103
2	0.11		101
3	0.11		235
4	0.11		108
5	0.11		116
6	0.11		103
7	0.11		121
8	0.11		113
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 252.56600000000006. 
value	expected	observed
1	0.11		103
2	0.11		101
3	0.11		235
4	0.11		108
5	0.11		116
6	0.11		103
7	0.11		121
8	0.11		113
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.251 [pool-1734-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPermutation(org.apache.commons.math3.random.Well1024aTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:00.252 [pool-1735-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntPositiveRange(org.apache.commons.math3.random.Well1024aTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:00.253 [pool-1736-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.257 [pool-1737-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:00.258 [pool-1738-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongPositiveRange(org.apache.commons.math3.random.Well1024aTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:00.258 [pool-1739-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.260 [pool-1740-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.260 [pool-1741-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.261 [pool-1742-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.261 [pool-1743-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.262 [pool-1744-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.262 [pool-1745-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.263 [pool-1746-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.263 [pool-1747-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.265 [pool-1748-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.265 [pool-1749-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.266 [pool-1750-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.4 to fraction (2,971,215,073/-1,836,311,903)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.FractionTest.testEpsilonLimitConstructor(FractionTest.java:153)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.268 [pool-1751-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testEpsilonLimitConstructor(org.apache.commons.math3.fraction.FractionTest)
[illegal state: Overflow trying to convert 0.4 to fraction (2,971,215,073/-1,836,311,903)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.4 to fraction (2,971,215,073/-1,836,311,903)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.FractionTest.testEpsilonLimitConstructor(FractionTest.java:153)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.5 to fraction (2,971,215,073/-1,836,311,903)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(FractionTest.java:222)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:00.269 [pool-1752-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)
[illegal state: Overflow trying to convert 0.5 to fraction (2,971,215,073/-1,836,311,903)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.5 to fraction (2,971,215,073/-1,836,311,903)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(FractionTest.java:222)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.5 to fraction (2,971,215,073/-1,836,311,903)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(FractionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:00.271 [pool-1753-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)
[illegal state: Overflow trying to convert 0.5 to fraction (2,971,215,073/-1,836,311,903)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.5 to fraction (2,971,215,073/-1,836,311,903)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(FractionTest.java:78)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<2> but was:<13>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math3.fraction.FractionTest.assertFraction(FractionTest.java:34)
00:26:00.272 [pool-1754-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDigitLimitConstructor(org.apache.commons.math3.fraction.FractionTest)
[expected:<2> but was:<13>]
java.lang.AssertionError: expected:<2> but was:<13>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math3.fraction.FractionTest.assertFraction(FractionTest.java:34)

00:26:00.273 [pool-1755-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.274 [pool-1756-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.275 [pool-1757-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0 to fraction (2,971,215,073/-1,836,311,903)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionTest.testConstructor(FractionTest.java:64)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:00.277 [pool-1758-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testConstructor(org.apache.commons.math3.fraction.FractionTest)
[illegal state: Overflow trying to convert 0 to fraction (2,971,215,073/-1,836,311,903)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0 to fraction (2,971,215,073/-1,836,311,903)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionTest.testConstructor(FractionTest.java:64)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:00.639 [pool-1759-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (362 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.643 [pool-1760-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.647 [pool-1761-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.654 [pool-1762-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.655 [pool-1763-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.655 [pool-1764-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: illegal state: Unable to convert 1 to fraction after 100 iterations
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.linear.MatrixUtilsTest.asFraction(MatrixUtilsTest.java:288)
    at org.apache.commons.math3.linear.MatrixUtilsTest.testcreateFieldMatrix(MatrixUtilsTest.java:93)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.657 [pool-1765-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testcreateFieldMatrix(org.apache.commons.math3.linear.MatrixUtilsTest)
[illegal state: Unable to convert 1 to fraction after 100 iterations]
java.lang.AssertionError: illegal state: Unable to convert 1 to fraction after 100 iterations    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.linear.MatrixUtilsTest.asFraction(MatrixUtilsTest.java:288)
    at org.apache.commons.math3.linear.MatrixUtilsTest.testcreateFieldMatrix(MatrixUtilsTest.java:93)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: illegal state: Unable to convert 1 to fraction after 100 iterations
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.linear.MatrixUtilsTest.asFraction(MatrixUtilsTest.java:300)
    at org.apache.commons.math3.linear.MatrixUtilsTest.testCreateRowFieldMatrix(MatrixUtilsTest.java:137)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.658 [pool-1766-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCreateRowFieldMatrix(org.apache.commons.math3.linear.MatrixUtilsTest)
[illegal state: Unable to convert 1 to fraction after 100 iterations]
java.lang.AssertionError: illegal state: Unable to convert 1 to fraction after 100 iterations    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.linear.MatrixUtilsTest.asFraction(MatrixUtilsTest.java:300)
    at org.apache.commons.math3.linear.MatrixUtilsTest.testCreateRowFieldMatrix(MatrixUtilsTest.java:137)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: illegal state: Unable to convert 0 to fraction after 100 iterations
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.linear.MatrixUtilsTest.asFraction(MatrixUtilsTest.java:300)
    at org.apache.commons.math3.linear.MatrixUtilsTest.testCreateColumnFieldMatrix(MatrixUtilsTest.java:175)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.659 [pool-1767-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCreateColumnFieldMatrix(org.apache.commons.math3.linear.MatrixUtilsTest)
[illegal state: Unable to convert 0 to fraction after 100 iterations]
java.lang.AssertionError: illegal state: Unable to convert 0 to fraction after 100 iterations    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.linear.MatrixUtilsTest.asFraction(MatrixUtilsTest.java:300)
    at org.apache.commons.math3.linear.MatrixUtilsTest.testCreateColumnFieldMatrix(MatrixUtilsTest.java:175)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 0 to fraction after 10,000 iterations
    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:323)
    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:232)
    at org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.createH(KolmogorovSmirnovDistribution.java:286)
    at org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.roundedK(KolmogorovSmirnovDistribution.java:229)
    at org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.cdf(KolmogorovSmirnovDistribution.java:179)
    at org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest.testCumulativeDensityFunction(KolmogorovSmirnovDistributionTest.java:54)
00:26:00.675 [pool-1768-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCumulativeDensityFunction(org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest)
[illegal state: Unable to convert 0 to fraction after 10,000 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 0 to fraction after 10,000 iterations    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:323)
    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:232)
    at org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.createH(KolmogorovSmirnovDistribution.java:286)
    at org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.roundedK(KolmogorovSmirnovDistribution.java:229)
    at org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.cdf(KolmogorovSmirnovDistribution.java:179)
    at org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest.testCumulativeDensityFunction(KolmogorovSmirnovDistributionTest.java:54)

java.lang.ArrayIndexOutOfBoundsException
00:26:00.681 [pool-1770-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 258.0380000000001. 
value	expected	observed
1	0.11		106
2	0.11		114
3	0.11		237
4	0.11		121
5	0.11		107
6	0.11		93
7	0.11		111
8	0.11		111
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:00.682 [pool-1771-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.Well512aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 258.0380000000001. 
value	expected	observed
1	0.11		106
2	0.11		114
3	0.11		237
4	0.11		121
5	0.11		107
6	0.11		93
7	0.11		111
8	0.11		111
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 258.0380000000001. 
value	expected	observed
1	0.11		106
2	0.11		114
3	0.11		237
4	0.11		121
5	0.11		107
6	0.11		93
7	0.11		111
8	0.11		111
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:26:00.684 [pool-1772-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 55.0 p-value = 4.4860807845903405E-4 chisquare statistic = 44.76129078166581. 
bin		expected	observed
[1,39)		9.93		10
[39,41)		11.32		9
[41,43)		20.31		11
[43,45)		33.15		38
[45,47)		49.42		37
[47,49)		67.57		48
[49,51)		85.05		86
[51,53)		98.86		89
[53,55)		106.45		151
[55,57)		106.46		131
[57,59)		99.17		89
[59,61)		86.24		77
[61,63)		70.18		69
[63,65)		53.55		47
[65,67)		38.4		46
[67,69)		25.91		27
[69,71)		16.49		13
[71,74)		13.15		14
[74,inf)		8.36		8
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.810 [pool-1773-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (126 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.Well512aTest)
[Chisquare test failed for mean = 55.0 p-value = 4.4860807845903405E-4 chisquare statistic = 44.76129078166581. 
bin		expected	observed
[1,39)		9.93		10
[39,41)		11.32		9
[41,43)		20.31		11
[43,45)		33.15		38
[45,47)		49.42		37
[47,49)		67.57		48
[49,51)		85.05		86
[51,53)		98.86		89
[53,55)		106.45		151
[55,57)		106.46		131
[57,59)		99.17		89
[59,61)		86.24		77
[61,63)		70.18		69
[63,65)		53.55		47
[65,67)		38.4		46
[67,69)		25.91		27
[69,71)		16.49		13
[71,74)		13.15		14
[74,inf)		8.36		8
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 55.0 p-value = 4.4860807845903405E-4 chisquare statistic = 44.76129078166581. 
bin		expected	observed
[1,39)		9.93		10
[39,41)		11.32		9
[41,43)		20.31		11
[43,45)		33.15		38
[45,47)		49.42		37
[47,49)		67.57		48
[49,51)		85.05		86
[51,53)		98.86		89
[53,55)		106.45		151
[55,57)		106.46		131
[57,59)		99.17		89
[59,61)		86.24		77
[61,63)		70.18		69
[63,65)		53.55		47
[65,67)		38.4		46
[67,69)		25.91		27
[69,71)		16.49		13
[71,74)		13.15		14
[74,inf)		8.36		8
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:00.854 [pool-1774-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (43 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 258.0380000000001. 
value	expected	observed
1	0.11		106
2	0.11		114
3	0.11		237
4	0.11		121
5	0.11		107
6	0.11		93
7	0.11		111
8	0.11		111
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:00.856 [pool-1775-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.Well512aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 258.0380000000001. 
value	expected	observed
1	0.11		106
2	0.11		114
3	0.11		237
4	0.11		121
5	0.11		107
6	0.11		93
7	0.11		111
8	0.11		111
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 258.0380000000001. 
value	expected	observed
1	0.11		106
2	0.11		114
3	0.11		237
4	0.11		121
5	0.11		107
6	0.11		93
7	0.11		111
8	0.11		111
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:00.857 [pool-1776-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPermutation(org.apache.commons.math3.random.Well512aTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:00.858 [pool-1777-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntPositiveRange(org.apache.commons.math3.random.Well512aTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:00.859 [pool-1778-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:00.863 [pool-1779-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:00.922 [pool-1780-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongPositiveRange(org.apache.commons.math3.random.Well512aTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:00.923 [pool-1781-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException
00:26:00.929 [pool-1783-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 213.39800000000005. 
value	expected	observed
1	0.11		113
2	0.11		110
3	0.11		216
4	0.11		126
5	0.11		112
6	0.11		109
7	0.11		100
8	0.11		114
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:00.931 [pool-1784-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.MersenneTwisterTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 213.39800000000005. 
value	expected	observed
1	0.11		113
2	0.11		110
3	0.11		216
4	0.11		126
5	0.11		112
6	0.11		109
7	0.11		100
8	0.11		114
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 213.39800000000005. 
value	expected	observed
1	0.11		113
2	0.11		110
3	0.11		216
4	0.11		126
5	0.11		112
6	0.11		109
7	0.11		100
8	0.11		114
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:26:00.933 [pool-1785-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 46.0 p-value = 8.135343076698387E-4 chisquare statistic = 39.86930324644072. 
bin		expected	observed
[1,31)		7.98		5
[31,33)		10.96		12
[33,35)		21.2		24
[35,37)		36.5		36
[37,39)		56.27		44
[39,41)		78.14		74
[41,43)		98.25		76
[43,45)		112.38		113
[45,47)		117.43		172
[47,49)		112.54		105
[49,51)		99.26		87
[51,53)		80.85		76
[53,55)		61		64
[55,57)		42.74		52
[57,59)		27.89		26
[59,63)		26.68		26
[63,inf)		9.93		8
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:01.010 [pool-1786-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (77 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.MersenneTwisterTest)
[Chisquare test failed for mean = 46.0 p-value = 8.135343076698387E-4 chisquare statistic = 39.86930324644072. 
bin		expected	observed
[1,31)		7.98		5
[31,33)		10.96		12
[33,35)		21.2		24
[35,37)		36.5		36
[37,39)		56.27		44
[39,41)		78.14		74
[41,43)		98.25		76
[43,45)		112.38		113
[45,47)		117.43		172
[47,49)		112.54		105
[49,51)		99.26		87
[51,53)		80.85		76
[53,55)		61		64
[55,57)		42.74		52
[57,59)		27.89		26
[59,63)		26.68		26
[63,inf)		9.93		8
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 46.0 p-value = 8.135343076698387E-4 chisquare statistic = 39.86930324644072. 
bin		expected	observed
[1,31)		7.98		5
[31,33)		10.96		12
[33,35)		21.2		24
[35,37)		36.5		36
[37,39)		56.27		44
[39,41)		78.14		74
[41,43)		98.25		76
[43,45)		112.38		113
[45,47)		117.43		172
[47,49)		112.54		105
[49,51)		99.26		87
[51,53)		80.85		76
[53,55)		61		64
[55,57)		42.74		52
[57,59)		27.89		26
[59,63)		26.68		26
[63,inf)		9.93		8
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:01.055 [pool-1787-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (45 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 213.39800000000005. 
value	expected	observed
1	0.11		113
2	0.11		110
3	0.11		216
4	0.11		126
5	0.11		112
6	0.11		109
7	0.11		100
8	0.11		114
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:01.057 [pool-1788-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.MersenneTwisterTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 213.39800000000005. 
value	expected	observed
1	0.11		113
2	0.11		110
3	0.11		216
4	0.11		126
5	0.11		112
6	0.11		109
7	0.11		100
8	0.11		114
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 213.39800000000005. 
value	expected	observed
1	0.11		113
2	0.11		110
3	0.11		216
4	0.11		126
5	0.11		112
6	0.11		109
7	0.11		100
8	0.11		114
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:01.059 [pool-1789-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPermutation(org.apache.commons.math3.random.MersenneTwisterTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:01.060 [pool-1790-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntPositiveRange(org.apache.commons.math3.random.MersenneTwisterTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:01.063 [pool-1791-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.067 [pool-1792-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:01.068 [pool-1793-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongPositiveRange(org.apache.commons.math3.random.MersenneTwisterTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:01.069 [pool-1794-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.069 [pool-1795-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<-0.09383501264517874> but was:<-0.093834905678729>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest.testLessThanOnePeriodCoverage(UnivariatePeriodicInterpolatorTest.java:107)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:01.070 [pool-1796-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testLessThanOnePeriodCoverage(org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest)
[expected:<-0.09383501264517874> but was:<-0.093834905678729>]
java.lang.AssertionError: expected:<-0.09383501264517874> but was:<-0.093834905678729>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest.testLessThanOnePeriodCoverage(UnivariatePeriodicInterpolatorTest.java:107)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: x=46.414488435751245 expected:<0.6508153777044516> but was:<0.6508153777044512>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest.testSine(UnivariatePeriodicInterpolatorTest.java:66)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:01.071 [pool-1797-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSine(org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest)
[x=46.414488435751245 expected:<0.6508153777044516> but was:<0.6508153777044512>]
java.lang.AssertionError: x=46.414488435751245 expected:<0.6508153777044516> but was:<0.6508153777044512>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest.testSine(UnivariatePeriodicInterpolatorTest.java:66)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<-0.6760391625125304> but was:<0.6059089941250386>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest.testMoreThanOnePeriodCoverage(UnivariatePeriodicInterpolatorTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:01.072 [pool-1798-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMoreThanOnePeriodCoverage(org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest)
[expected:<-0.6760391625125304> but was:<0.6059089941250386>]
java.lang.AssertionError: expected:<-0.6760391625125304> but was:<0.6059089941250386>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest.testMoreThanOnePeriodCoverage(UnivariatePeriodicInterpolatorTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:26:01.075 [pool-1799-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.076 [pool-1800-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.077 [pool-1801-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.079 [pool-1802-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.079 [pool-1803-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.080 [pool-1804-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.094 [pool-1805-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.095 [pool-1806-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.096 [pool-1807-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.098 [pool-1808-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.099 [pool-1809-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.100 [pool-1810-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.100 [pool-1811-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.101 [pool-1812-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.124 [pool-1813-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (22 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.152 [pool-1814-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (27 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.153 [pool-1815-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.154 [pool-1816-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.156 [pool-1817-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.156 [pool-1818-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.294 [pool-1819-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (138 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.295 [pool-1820-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.296 [pool-1821-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.757 [pool-1822-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (460 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.758 [pool-1823-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.758 [pool-1824-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.764 [pool-1825-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.766 [pool-1826-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.767 [pool-1827-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.768 [pool-1828-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.772 [pool-1829-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.773 [pool-1830-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.773 [pool-1831-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.774 [pool-1832-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.775 [pool-1833-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.775 [pool-1834-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.776 [pool-1835-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.777 [pool-1836-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.778 [pool-1837-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.NullPointerException
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.createSparseMatrix(SparseFieldMatrixTest.java:700)
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.testSubMatrix(SparseFieldMatrixTest.java:415)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:01.779 [pool-1838-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSubMatrix(org.apache.commons.math3.linear.SparseFieldMatrixTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.linear.SparseFieldMatrixTest.createSparseMatrix(SparseFieldMatrixTest.java:700)
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.testSubMatrix(SparseFieldMatrixTest.java:415)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

00:26:01.780 [pool-1839-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.781 [pool-1840-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.781 [pool-1841-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.782 [pool-1842-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.NullPointerException
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.createSparseMatrix(SparseFieldMatrixTest.java:700)
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.testGetColumnMatrix(SparseFieldMatrixTest.java:501)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:01.783 [pool-1843-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testGetColumnMatrix(org.apache.commons.math3.linear.SparseFieldMatrixTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.linear.SparseFieldMatrixTest.createSparseMatrix(SparseFieldMatrixTest.java:700)
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.testGetColumnMatrix(SparseFieldMatrixTest.java:501)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.NullPointerException
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.createSparseMatrix(SparseFieldMatrixTest.java:700)
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.testGetColumnVector(SparseFieldMatrixTest.java:543)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:01.784 [pool-1844-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testGetColumnVector(org.apache.commons.math3.linear.SparseFieldMatrixTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.linear.SparseFieldMatrixTest.createSparseMatrix(SparseFieldMatrixTest.java:700)
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.testGetColumnVector(SparseFieldMatrixTest.java:543)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

00:26:01.786 [pool-1845-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.787 [pool-1846-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.788 [pool-1847-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.789 [pool-1848-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.NullPointerException
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.createSparseMatrix(SparseFieldMatrixTest.java:700)
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.testGetRowMatrix(SparseFieldMatrixTest.java:480)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:01.791 [pool-1849-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testGetRowMatrix(org.apache.commons.math3.linear.SparseFieldMatrixTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.linear.SparseFieldMatrixTest.createSparseMatrix(SparseFieldMatrixTest.java:700)
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.testGetRowMatrix(SparseFieldMatrixTest.java:480)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

00:26:01.792 [pool-1850-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.NullPointerException
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.createSparseMatrix(SparseFieldMatrixTest.java:700)
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.testGetRowVector(SparseFieldMatrixTest.java:522)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:01.792 [pool-1851-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testGetRowVector(org.apache.commons.math3.linear.SparseFieldMatrixTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math3.linear.SparseFieldMatrixTest.createSparseMatrix(SparseFieldMatrixTest.java:700)
    at org.apache.commons.math3.linear.SparseFieldMatrixTest.testGetRowVector(SparseFieldMatrixTest.java:522)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.select(Percentile.java:348)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:293)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:223)
    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.evaluate(AbstractUnivariateStatistic.java:101)
    at org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testPercentile(PercentileTest.java:67)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:01.793 [pool-1852-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPercentile(org.apache.commons.math3.stat.descriptive.rank.PercentileTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.stat.descriptive.rank.Percentile.select(Percentile.java:348)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:293)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:223)
    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.evaluate(AbstractUnivariateStatistic.java:101)
    at org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testPercentile(PercentileTest.java:67)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<95.1981> but was:<95.19743999999999>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testNISTExample(PercentileTest.java:96)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:01.794 [pool-1853-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNISTExample(org.apache.commons.math3.stat.descriptive.rank.PercentileTest)
[expected:<95.1981> but was:<95.19743999999999>]
java.lang.AssertionError: expected:<95.1981> but was:<95.19743999999999>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testNISTExample(PercentileTest.java:96)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:26:01.794 [pool-1854-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.select(Percentile.java:348)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:293)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:223)
    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.evaluate(AbstractUnivariateStatistic.java:101)
    at org.apache.commons.math3.stat.descriptive.rank.PercentileTest.test5(PercentileTest.java:103)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:01.795 [pool-1855-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ test5(org.apache.commons.math3.stat.descriptive.rank.PercentileTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.stat.descriptive.rank.Percentile.select(Percentile.java:348)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:293)
    at org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(Percentile.java:223)
    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.evaluate(AbstractUnivariateStatistic.java:101)
    at org.apache.commons.math3.stat.descriptive.rank.PercentileTest.test5(PercentileTest.java:103)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:26:01.795 [pool-1856-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testSpecialValues(PercentileTest.java:141)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:01.796 [pool-1857-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSpecialValues(org.apache.commons.math3.stat.descriptive.rank.PercentileTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testSpecialValues(PercentileTest.java:141)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<20.82> but was:<23.96500000000001>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest.testCopy(UnivariateStatisticAbstractTest.java:150)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:01.797 [pool-1858-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCopy(org.apache.commons.math3.stat.descriptive.rank.PercentileTest)
[expected:<20.82> but was:<23.96500000000001>]
java.lang.AssertionError: expected:<20.82> but was:<23.96500000000001>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest.testCopy(UnivariateStatisticAbstractTest.java:150)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<20.82> but was:<23.96500000000001>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(UnivariateStatisticAbstractTest.java:97)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:01.798 [pool-1859-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testEvaluation(org.apache.commons.math3.stat.descriptive.rank.PercentileTest)
[expected:<20.82> but was:<23.96500000000001>]
java.lang.AssertionError: expected:<20.82> but was:<23.96500000000001>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(UnivariateStatisticAbstractTest.java:97)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:26:01.799 [pool-1860-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.804 [pool-1861-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.806 [pool-1862-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.807 [pool-1863-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.811 [pool-1864-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.817 [pool-1865-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.821 [pool-1866-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.825 [pool-1867-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.830 [pool-1868-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.832 [pool-1869-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.837 [pool-1870-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.838 [pool-1871-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.842 [pool-1872-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.847 [pool-1873-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.852 [pool-1874-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.856 [pool-1875-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.857 [pool-1876-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.858 [pool-1877-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.859 [pool-1878-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.860 [pool-1879-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.861 [pool-1880-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.863 [pool-1881-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.864 [pool-1882-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.866 [pool-1883-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.868 [pool-1884-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.869 [pool-1885-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.871 [pool-1886-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.872 [pool-1887-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.873 [pool-1888-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.882 [pool-1889-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.884 [pool-1890-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.885 [pool-1891-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.886 [pool-1892-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.887 [pool-1893-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.888 [pool-1894-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.888 [pool-1895-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.889 [pool-1896-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: going backard in time! (0.0 < 11.01)
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:125)
    at org.apache.commons.math3.ode.events.EventState.reinitializeBegin(EventState.java:156)
    at org.apache.commons.math3.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:299)
    at org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:300)
00:26:01.890 [pool-1897-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue695(org.apache.commons.math3.ode.events.EventStateTest)
[going backard in time! (0.0 < 11.01)]
java.lang.AssertionError: going backard in time! (0.0 < 11.01)    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:125)
    at org.apache.commons.math3.ode.events.EventState.reinitializeBegin(EventState.java:156)
    at org.apache.commons.math3.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:299)
    at org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:300)

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: double ceil(1.1102230246251565E-16) expected 3ff0000000000000 actual 0000000000000000 entries [9]
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:01.895 [pool-1898-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ test1[36](org.apache.commons.math3.util.FastMathStrictComparisonTest)
[double ceil(1.1102230246251565E-16) expected 3ff0000000000000 actual 0000000000000000 entries [9]]
java.lang.AssertionError: double ceil(1.1102230246251565E-16) expected 3ff0000000000000 actual 0000000000000000 entries [9]    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: double floor(-0.0) expected -0.0 actual -1.0 entries [1]
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:01.898 [pool-1899-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ test1[37](org.apache.commons.math3.util.FastMathStrictComparisonTest)
[double floor(-0.0) expected -0.0 actual -1.0 entries [1]]
java.lang.AssertionError: double floor(-0.0) expected -0.0 actual -1.0 entries [1]    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: double rint(0.0) expected 0.0 actual -0.0 entries [2]
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:01.902 [pool-1900-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ test1[38](org.apache.commons.math3.util.FastMathStrictComparisonTest)
[double rint(0.0) expected 0.0 actual -0.0 entries [2]]
java.lang.AssertionError: double rint(0.0) expected 0.0 actual -0.0 entries [2]    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: int round(-0.0) expected 0 actual -1 entries [1]
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:01.906 [pool-1901-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ test1[39](org.apache.commons.math3.util.FastMathStrictComparisonTest)
[int round(-0.0) expected 0 actual -1 entries [1]]
java.lang.AssertionError: int round(-0.0) expected 0 actual -1 entries [1]    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.addExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.addExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.multiplyExact(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.multiplyExact(long,long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.subtractExact(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.subtractExact(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.toIntExact(long)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorDiv(long,long)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorDiv(int,int)
Cannot find FastMath method corresponding to: public static int java.lang.StrictMath.floorMod(int,int)
Cannot find FastMath method corresponding to: public static long java.lang.StrictMath.floorMod(long,long)
Cannot find FastMath method corresponding to: public static float java.lang.StrictMath.nextDown(float)
Cannot find FastMath method corresponding to: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: long round(-0.0) expected 0 actual -1 entries [1]
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:01.909 [pool-1902-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ test1[40](org.apache.commons.math3.util.FastMathStrictComparisonTest)
[long round(-0.0) expected 0 actual -1 entries [1]]
java.lang.AssertionError: long round(-0.0) expected 0 actual -1 entries [1]    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.reportFailedResults(FastMathStrictComparisonTest.java:154)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.callMethods(FastMathStrictComparisonTest.java:167)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.setupMethodCall(FastMathStrictComparisonTest.java:192)
    at org.apache.commons.math3.util.FastMathStrictComparisonTest.test1(FastMathStrictComparisonTest.java:88)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:26:01.910 [pool-1903-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.952 [pool-1904-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (42 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.954 [pool-1905-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.954 [pool-1906-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.955 [pool-1907-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.956 [pool-1908-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.956 [pool-1909-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.957 [pool-1910-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.957 [pool-1911-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.958 [pool-1912-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.958 [pool-1913-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.959 [pool-1914-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.960 [pool-1915-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.961 [pool-1916-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.961 [pool-1917-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.962 [pool-1918-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.962 [pool-1919-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.963 [pool-1920-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.963 [pool-1921-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.964 [pool-1922-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:01.966 [pool-1923-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls(GraggBulirschStoerIntegratorTest.java:155)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:02.000 [pool-1924-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (33 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegratorControls(org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls(GraggBulirschStoerIntegratorTest.java:155)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:02.001 [pool-1925-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.001 [pool-1926-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.004 [pool-1927-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.004 [pool-1928-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.018 [pool-1929-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(GraggBulirschStoerIntegratorTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:02.020 [pool-1930-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIncreasingTolerance(org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(GraggBulirschStoerIntegratorTest.java:129)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:02.021 [pool-1931-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.021 [pool-1932-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.25 to fraction (2,971,215,073/-1,836,311,903)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.linear.SparseFieldVectorTest.testBasicFunctions(SparseFieldVectorTest.java:150)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:02.023 [pool-1933-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBasicFunctions(org.apache.commons.math3.linear.SparseFieldVectorTest)
[illegal state: Overflow trying to convert 0.25 to fraction (2,971,215,073/-1,836,311,903)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.25 to fraction (2,971,215,073/-1,836,311,903)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.linear.SparseFieldVectorTest.testBasicFunctions(SparseFieldVectorTest.java:150)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:02.024 [pool-1934-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.5 to fraction (2,971,215,073/-1,836,311,903)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.linear.SparseFieldVectorTest.testMapFunctions(SparseFieldVectorTest.java:90)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:02.026 [pool-1935-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMapFunctions(org.apache.commons.math3.linear.SparseFieldVectorTest)
[illegal state: Overflow trying to convert 0.5 to fraction (2,971,215,073/-1,836,311,903)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.5 to fraction (2,971,215,073/-1,836,311,903)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.linear.SparseFieldVectorTest.testMapFunctions(SparseFieldVectorTest.java:90)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:02.027 [pool-1936-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.028 [pool-1937-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.028 [pool-1938-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException
00:26:02.033 [pool-1940-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 190.59200000000004. 
value	expected	observed
1	0.11		115
2	0.11		109
3	0.11		204
4	0.11		110
5	0.11		121
6	0.11		109
7	0.11		112
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)
00:26:02.035 [pool-1941-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.BitsStreamGeneratorTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 190.59200000000004. 
value	expected	observed
1	0.11		115
2	0.11		109
3	0.11		204
4	0.11		110
5	0.11		121
6	0.11		109
7	0.11		112
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 190.59200000000004. 
value	expected	observed
1	0.11		115
2	0.11		109
3	0.11		204
4	0.11		110
5	0.11		121
6	0.11		109
7	0.11		112
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)

00:26:02.036 [pool-1942-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 46.0 p-value = 6.383496943498379E-4 chisquare statistic = 40.588860055077. 
bin		expected	observed
[1,31)		7.98		7
[31,33)		10.96		14
[33,35)		21.2		14
[35,37)		36.5		35
[37,39)		56.27		50
[39,41)		78.14		73
[41,43)		98.25		87
[43,45)		112.38		118
[45,47)		117.43		172
[47,49)		112.54		122
[49,51)		99.26		92
[51,53)		80.85		80
[53,55)		61		56
[55,57)		42.74		32
[57,59)		27.89		18
[59,63)		26.68		22
[63,inf)		9.93		8
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:02.143 [pool-1943-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (105 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.BitsStreamGeneratorTest)
[Chisquare test failed for mean = 46.0 p-value = 6.383496943498379E-4 chisquare statistic = 40.588860055077. 
bin		expected	observed
[1,31)		7.98		7
[31,33)		10.96		14
[33,35)		21.2		14
[35,37)		36.5		35
[37,39)		56.27		50
[39,41)		78.14		73
[41,43)		98.25		87
[43,45)		112.38		118
[45,47)		117.43		172
[47,49)		112.54		122
[49,51)		99.26		92
[51,53)		80.85		80
[53,55)		61		56
[55,57)		42.74		32
[57,59)		27.89		18
[59,63)		26.68		22
[63,inf)		9.93		8
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 46.0 p-value = 6.383496943498379E-4 chisquare statistic = 40.588860055077. 
bin		expected	observed
[1,31)		7.98		7
[31,33)		10.96		14
[33,35)		21.2		14
[35,37)		36.5		35
[37,39)		56.27		50
[39,41)		78.14		73
[41,43)		98.25		87
[43,45)		112.38		118
[45,47)		117.43		172
[47,49)		112.54		122
[49,51)		99.26		92
[51,53)		80.85		80
[53,55)		61		56
[55,57)		42.74		32
[57,59)		27.89		18
[59,63)		26.68		22
[63,inf)		9.93		8
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

00:26:02.185 [pool-1944-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (42 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 190.59200000000004. 
value	expected	observed
1	0.11		115
2	0.11		109
3	0.11		204
4	0.11		110
5	0.11		121
6	0.11		109
7	0.11		112
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
00:26:02.188 [pool-1945-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.BitsStreamGeneratorTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 190.59200000000004. 
value	expected	observed
1	0.11		115
2	0.11		109
3	0.11		204
4	0.11		110
5	0.11		121
6	0.11		109
7	0.11		112
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 190.59200000000004. 
value	expected	observed
1	0.11		115
2	0.11		109
3	0.11		204
4	0.11		110
5	0.11		121
6	0.11		109
7	0.11		112
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:02.189 [pool-1946-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPermutation(org.apache.commons.math3.random.BitsStreamGeneratorTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:02.190 [pool-1947-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntPositiveRange(org.apache.commons.math3.random.BitsStreamGeneratorTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:02.191 [pool-1948-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.194 [pool-1949-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:02.195 [pool-1950-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongPositiveRange(org.apache.commons.math3.random.BitsStreamGeneratorTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:02.201 [pool-1951-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException
00:26:02.208 [pool-1953-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 271.07000000000005. 
value	expected	observed
1	0.11		106
2	0.11		116
3	0.11		243
4	0.11		102
5	0.11		107
6	0.11		106
7	0.11		100
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)
00:26:02.210 [pool-1954-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.Well44497aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 271.07000000000005. 
value	expected	observed
1	0.11		106
2	0.11		116
3	0.11		243
4	0.11		102
5	0.11		107
6	0.11		106
7	0.11		100
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 271.07000000000005. 
value	expected	observed
1	0.11		106
2	0.11		116
3	0.11		243
4	0.11		102
5	0.11		107
6	0.11		106
7	0.11		100
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)

00:26:02.211 [pool-1955-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 9.816332773087133E-4 chisquare statistic = 37.751951983532834. 
bin		expected	observed
[1,26)		7.57		13
[26,28)		11.77		10
[28,30)		23.89		18
[30,32)		42.29		35
[32,34)		65.88		51
[34,36)		91.01		91
[36,38)		112.24		92
[38,40)		124.32		155
[40,42)		124.36		163
[42,44)		112.89		118
[44,46)		93.43		88
[46,48)		70.77		57
[48,50)		49.25		45
[50,52)		31.59		30
[52,56)		29.06		26
[56,inf)		9.68		8
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:02.280 [pool-1956-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (68 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.Well44497aTest)
[Chisquare test failed for mean = 40.0 p-value = 9.816332773087133E-4 chisquare statistic = 37.751951983532834. 
bin		expected	observed
[1,26)		7.57		13
[26,28)		11.77		10
[28,30)		23.89		18
[30,32)		42.29		35
[32,34)		65.88		51
[34,36)		91.01		91
[36,38)		112.24		92
[38,40)		124.32		155
[40,42)		124.36		163
[42,44)		112.89		118
[44,46)		93.43		88
[46,48)		70.77		57
[48,50)		49.25		45
[50,52)		31.59		30
[52,56)		29.06		26
[56,inf)		9.68		8
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 40.0 p-value = 9.816332773087133E-4 chisquare statistic = 37.751951983532834. 
bin		expected	observed
[1,26)		7.57		13
[26,28)		11.77		10
[28,30)		23.89		18
[30,32)		42.29		35
[32,34)		65.88		51
[34,36)		91.01		91
[36,38)		112.24		92
[38,40)		124.32		155
[40,42)		124.36		163
[42,44)		112.89		118
[44,46)		93.43		88
[46,48)		70.77		57
[48,50)		49.25		45
[50,52)		31.59		30
[52,56)		29.06		26
[56,inf)		9.68		8
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

00:26:02.323 [pool-1957-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (42 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 271.07000000000005. 
value	expected	observed
1	0.11		106
2	0.11		116
3	0.11		243
4	0.11		102
5	0.11		107
6	0.11		106
7	0.11		100
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
00:26:02.325 [pool-1958-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.Well44497aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 271.07000000000005. 
value	expected	observed
1	0.11		106
2	0.11		116
3	0.11		243
4	0.11		102
5	0.11		107
6	0.11		106
7	0.11		100
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 271.07000000000005. 
value	expected	observed
1	0.11		106
2	0.11		116
3	0.11		243
4	0.11		102
5	0.11		107
6	0.11		106
7	0.11		100
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:02.326 [pool-1959-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPermutation(org.apache.commons.math3.random.Well44497aTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:02.327 [pool-1960-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntPositiveRange(org.apache.commons.math3.random.Well44497aTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:02.328 [pool-1961-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.332 [pool-1962-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:02.333 [pool-1963-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongPositiveRange(org.apache.commons.math3.random.Well44497aTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.exception.NotPositiveException: length (-1)
    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(AbstractUnivariateStatistic.java:172)
    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(AbstractUnivariateStatistic.java:137)
    at org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(AbstractStorelessUnivariateStatistic.java:146)
    at org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testCopyConsistency(StorelessUnivariateStatisticAbstractTest.java:198)
    at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:02.334 [pool-1964-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCopyConsistency(org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest)
[length (-1)]
org.apache.commons.math3.exception.NotPositiveException: length (-1)    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(AbstractUnivariateStatistic.java:172)
    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(AbstractUnivariateStatistic.java:137)
    at org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(AbstractStorelessUnivariateStatistic.java:146)
    at org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testCopyConsistency(StorelessUnivariateStatisticAbstractTest.java:198)
    at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.util.MathUtilsTest.testNormalizeAngle(MathUtilsTest.java:136)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:02.339 [pool-1965-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNormalizeAngle(org.apache.commons.math3.util.MathUtilsTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.util.MathUtilsTest.testNormalizeAngle(MathUtilsTest.java:136)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:02.340 [pool-1966-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.341 [pool-1967-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<10.722> but was:<22.944000005722046>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.util.MathUtilsTest.testReduce(MathUtilsTest.java:161)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:02.341 [pool-1968-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testReduce(org.apache.commons.math3.util.MathUtilsTest)
[expected:<10.722> but was:<22.944000005722046>]
java.lang.AssertionError: expected:<10.722> but was:<22.944000005722046>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.util.MathUtilsTest.testReduce(MathUtilsTest.java:161)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:26:02.342 [pool-1969-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<20> but was:<21>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math3.genetics.ElitisticListPopulationTest.testNextGeneration(ElitisticListPopulationTest.java:41)
00:26:02.343 [pool-1970-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextGeneration(org.apache.commons.math3.genetics.ElitisticListPopulationTest)
[expected:<20> but was:<21>]
java.lang.AssertionError: expected:<20> but was:<21>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math3.genetics.ElitisticListPopulationTest.testNextGeneration(ElitisticListPopulationTest.java:41)

java.lang.ArrayIndexOutOfBoundsException
00:26:02.349 [pool-1972-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 220.34600000000006. 
value	expected	observed
1	0.11		106
2	0.11		116
3	0.11		220
4	0.11		125
5	0.11		107
6	0.11		108
7	0.11		110
8	0.11		108
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)
00:26:02.385 [pool-1973-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.AbstractRandomGeneratorTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 220.34600000000006. 
value	expected	observed
1	0.11		106
2	0.11		116
3	0.11		220
4	0.11		125
5	0.11		107
6	0.11		108
7	0.11		110
8	0.11		108
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 220.34600000000006. 
value	expected	observed
1	0.11		106
2	0.11		116
3	0.11		220
4	0.11		125
5	0.11		107
6	0.11		108
7	0.11		110
8	0.11		108
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)

00:26:02.387 [pool-1974-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 46.0 p-value = 5.117760571757834E-4 chisquare statistic = 41.23976917718961. 
bin		expected	observed
[1,31)		7.98		11
[31,33)		10.96		8
[33,35)		21.2		31
[35,37)		36.5		40
[37,39)		56.27		72
[39,41)		78.14		73
[41,43)		98.25		93
[43,45)		112.38		108
[45,47)		117.43		158
[47,49)		112.54		121
[49,51)		99.26		86
[51,53)		80.85		58
[53,55)		61		53
[55,57)		42.74		38
[57,59)		27.89		20
[59,63)		26.68		25
[63,inf)		9.93		5
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:02.484 [pool-1975-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (96 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.AbstractRandomGeneratorTest)
[Chisquare test failed for mean = 46.0 p-value = 5.117760571757834E-4 chisquare statistic = 41.23976917718961. 
bin		expected	observed
[1,31)		7.98		11
[31,33)		10.96		8
[33,35)		21.2		31
[35,37)		36.5		40
[37,39)		56.27		72
[39,41)		78.14		73
[41,43)		98.25		93
[43,45)		112.38		108
[45,47)		117.43		158
[47,49)		112.54		121
[49,51)		99.26		86
[51,53)		80.85		58
[53,55)		61		53
[55,57)		42.74		38
[57,59)		27.89		20
[59,63)		26.68		25
[63,inf)		9.93		5
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 46.0 p-value = 5.117760571757834E-4 chisquare statistic = 41.23976917718961. 
bin		expected	observed
[1,31)		7.98		11
[31,33)		10.96		8
[33,35)		21.2		31
[35,37)		36.5		40
[37,39)		56.27		72
[39,41)		78.14		73
[41,43)		98.25		93
[43,45)		112.38		108
[45,47)		117.43		158
[47,49)		112.54		121
[49,51)		99.26		86
[51,53)		80.85		58
[53,55)		61		53
[55,57)		42.74		38
[57,59)		27.89		20
[59,63)		26.68		25
[63,inf)		9.93		5
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

00:26:02.527 [pool-1976-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (41 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 220.34600000000006. 
value	expected	observed
1	0.11		106
2	0.11		116
3	0.11		220
4	0.11		125
5	0.11		107
6	0.11		108
7	0.11		110
8	0.11		108
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
00:26:02.529 [pool-1977-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.AbstractRandomGeneratorTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 220.34600000000006. 
value	expected	observed
1	0.11		106
2	0.11		116
3	0.11		220
4	0.11		125
5	0.11		107
6	0.11		108
7	0.11		110
8	0.11		108
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 220.34600000000006. 
value	expected	observed
1	0.11		106
2	0.11		116
3	0.11		220
4	0.11		125
5	0.11		107
6	0.11		108
7	0.11		110
8	0.11		108
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:02.530 [pool-1978-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPermutation(org.apache.commons.math3.random.AbstractRandomGeneratorTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:02.531 [pool-1979-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntPositiveRange(org.apache.commons.math3.random.AbstractRandomGeneratorTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:02.532 [pool-1980-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.535 [pool-1981-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:02.537 [pool-1982-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongPositiveRange(org.apache.commons.math3.random.AbstractRandomGeneratorTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:02.538 [pool-1983-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.539 [pool-1984-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.540 [pool-1985-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.541 [pool-1986-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException
00:26:02.545 [pool-1988-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.37600000000003. 
value	expected	observed
1	0.11		123
2	0.11		113
3	0.11		213
4	0.11		106
5	0.11		116
6	0.11		100
7	0.11		108
8	0.11		121
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)
00:26:02.547 [pool-1989-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.ISAACTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 208.37600000000003. 
value	expected	observed
1	0.11		123
2	0.11		113
3	0.11		213
4	0.11		106
5	0.11		116
6	0.11		100
7	0.11		108
8	0.11		121
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.37600000000003. 
value	expected	observed
1	0.11		123
2	0.11		113
3	0.11		213
4	0.11		106
5	0.11		116
6	0.11		100
7	0.11		108
8	0.11		121
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)

00:26:02.549 [pool-1990-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 87.0 p-value = 7.991571841747813E-5 chisquare statistic = 44.882338631955456. 
bin		expected	observed
[1,66)		8.36		6
[66,69)		12.2		23
[69,72)		24.31		24
[72,75)		42.68		32
[75,78)		66.38		52
[78,81)		91.88		98
[81,84)		113.69		114
[84,87)		126.24		136
[87,90)		126.27		171
[90,93)		114.17		94
[93,96)		93.63		81
[96,99)		69.84		57
[99,102)		47.53		47
[102,105)		29.59		24
[105,111)		25.76		29
[111,inf)		7.46		12
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:02.869 [pool-1991-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (320 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.ISAACTest)
[Chisquare test failed for mean = 87.0 p-value = 7.991571841747813E-5 chisquare statistic = 44.882338631955456. 
bin		expected	observed
[1,66)		8.36		6
[66,69)		12.2		23
[69,72)		24.31		24
[72,75)		42.68		32
[75,78)		66.38		52
[78,81)		91.88		98
[81,84)		113.69		114
[84,87)		126.24		136
[87,90)		126.27		171
[90,93)		114.17		94
[93,96)		93.63		81
[96,99)		69.84		57
[99,102)		47.53		47
[102,105)		29.59		24
[105,111)		25.76		29
[111,inf)		7.46		12
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 87.0 p-value = 7.991571841747813E-5 chisquare statistic = 44.882338631955456. 
bin		expected	observed
[1,66)		8.36		6
[66,69)		12.2		23
[69,72)		24.31		24
[72,75)		42.68		32
[75,78)		66.38		52
[78,81)		91.88		98
[81,84)		113.69		114
[84,87)		126.24		136
[87,90)		126.27		171
[90,93)		114.17		94
[93,96)		93.63		81
[96,99)		69.84		57
[99,102)		47.53		47
[102,105)		29.59		24
[105,111)		25.76		29
[111,inf)		7.46		12
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

00:26:02.910 [pool-1992-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.37600000000003. 
value	expected	observed
1	0.11		123
2	0.11		113
3	0.11		213
4	0.11		106
5	0.11		116
6	0.11		100
7	0.11		108
8	0.11		121
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
00:26:02.912 [pool-1993-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.ISAACTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 208.37600000000003. 
value	expected	observed
1	0.11		123
2	0.11		113
3	0.11		213
4	0.11		106
5	0.11		116
6	0.11		100
7	0.11		108
8	0.11		121
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.37600000000003. 
value	expected	observed
1	0.11		123
2	0.11		113
3	0.11		213
4	0.11		106
5	0.11		116
6	0.11		100
7	0.11		108
8	0.11		121
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:02.914 [pool-1994-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPermutation(org.apache.commons.math3.random.ISAACTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:02.914 [pool-1995-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntPositiveRange(org.apache.commons.math3.random.ISAACTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:02.916 [pool-1996-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.925 [pool-1997-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:02.926 [pool-1998-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongPositiveRange(org.apache.commons.math3.random.ISAACTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:02.930 [pool-1999-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.938 [pool-2000-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<2.094395102393195> but was:<8.377580409572781>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.checkAngle(RotationTest.java:545)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testAxisAngle(RotationTest.java:62)
00:26:02.939 [pool-2001-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAxisAngle(org.apache.commons.math3.geometry.euclidean.threed.RotationTest)
[expected:<2.094395102393195> but was:<8.377580409572781>]
java.lang.AssertionError: expected:<2.094395102393195> but was:<8.377580409572781>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.checkAngle(RotationTest.java:545)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testAxisAngle(RotationTest.java:62)

java.lang.AssertionError: expected:<3.141592653589793> but was:<9.42477796076938>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.checkAngle(RotationTest.java:545)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testVectorTwoPairs(RotationTest.java:129)
00:26:02.940 [pool-2002-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testVectorTwoPairs(org.apache.commons.math3.geometry.euclidean.threed.RotationTest)
[expected:<3.141592653589793> but was:<9.42477796076938>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<9.42477796076938>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.checkAngle(RotationTest.java:545)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testVectorTwoPairs(RotationTest.java:129)

java.lang.AssertionError: expected:<0.0> but was:<6.283185307179586>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.checkAngle(RotationTest.java:545)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testIdentity(RotationTest.java:37)
00:26:02.941 [pool-2003-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIdentity(org.apache.commons.math3.geometry.euclidean.threed.RotationTest)
[expected:<0.0> but was:<6.283185307179586>]
java.lang.AssertionError: expected:<0.0> but was:<6.283185307179586>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.checkAngle(RotationTest.java:545)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testIdentity(RotationTest.java:37)

java.lang.AssertionError: expected:<0.09999999999999976> but was:<6.383185307179586>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.checkAngle(RotationTest.java:545)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testAngles(RotationTest.java:312)
00:26:02.942 [pool-2004-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationTest)
[expected:<0.09999999999999976> but was:<6.383185307179586>]
java.lang.AssertionError: expected:<0.09999999999999976> but was:<6.383185307179586>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.checkAngle(RotationTest.java:545)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testAngles(RotationTest.java:312)

java.lang.AssertionError: expected:<3.141592653589793> but was:<9.42477796076938>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.checkAngle(RotationTest.java:545)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testVectorOnePair(RotationTest.java:100)
00:26:02.942 [pool-2005-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testVectorOnePair(org.apache.commons.math3.geometry.euclidean.threed.RotationTest)
[expected:<3.141592653589793> but was:<9.42477796076938>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<9.42477796076938>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.checkAngle(RotationTest.java:545)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testVectorOnePair(RotationTest.java:100)

java.lang.AssertionError: expected:<3.141592653589793> but was:<9.42477796076938>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.checkAngle(RotationTest.java:545)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testMatrix(RotationTest.java:283)
00:26:02.943 [pool-2006-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMatrix(org.apache.commons.math3.geometry.euclidean.threed.RotationTest)
[expected:<3.141592653589793> but was:<9.42477796076938>]
java.lang.AssertionError: expected:<3.141592653589793> but was:<9.42477796076938>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.checkAngle(RotationTest.java:545)
    at org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testMatrix(RotationTest.java:283)

java.lang.AssertionError: expected:<1.5707963267948966> but was:<7.853981633974483>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.geometry.euclidean.twod.LineTest.testTransform(LineTest.java:106)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:02.944 [pool-2007-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testTransform(org.apache.commons.math3.geometry.euclidean.twod.LineTest)
[expected:<1.5707963267948966> but was:<7.853981633974483>]
java.lang.AssertionError: expected:<1.5707963267948966> but was:<7.853981633974483>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.geometry.euclidean.twod.LineTest.testTransform(LineTest.java:106)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:26:02.944 [pool-2008-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.948 [pool-2009-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.958 [pool-2010-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.961 [pool-2011-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.962 [pool-2012-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.965 [pool-2013-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.969 [pool-2014-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: 100 choose 10 expected:<1.731030945644E13> but was:<1.7310309456439E13>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.util.ArithmeticUtilsTest.testBinomialCoefficient(ArithmeticUtilsTest.java:124)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:02.970 [pool-2015-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBinomialCoefficient(org.apache.commons.math3.util.ArithmeticUtilsTest)
[100 choose 10 expected:<1.731030945644E13> but was:<1.7310309456439E13>]
java.lang.AssertionError: 100 choose 10 expected:<1.731030945644E13> but was:<1.7310309456439E13>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.util.ArithmeticUtilsTest.testBinomialCoefficient(ArithmeticUtilsTest.java:124)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.ArrayIndexOutOfBoundsException
java.lang.AssertionError: 67 choose 2 expected:<1.0> but was:<0.9995477159656264>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.util.ArithmeticUtilsTest.testBinomialCoefficientLarge(ArithmeticUtilsTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:02.981 [pool-2017-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBinomialCoefficientLarge(org.apache.commons.math3.util.ArithmeticUtilsTest)
[67 choose 2 expected:<1.0> but was:<0.9995477159656264>]
java.lang.AssertionError: 67 choose 2 expected:<1.0> but was:<0.9995477159656264>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.util.ArithmeticUtilsTest.testBinomialCoefficientLarge(ArithmeticUtilsTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:02.982 [pool-2018-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.983 [pool-2019-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<2.5> but was:<2.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:55)
    at org.apache.commons.math3.stat.StatUtilsTest.testPercentile(StatUtilsTest.java:414)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:02.984 [pool-2020-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testPercentile(org.apache.commons.math3.stat.StatUtilsTest)
[expected:<2.5> but was:<2.0>]
java.lang.AssertionError: expected:<2.5> but was:<2.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:55)
    at org.apache.commons.math3.stat.StatUtilsTest.testPercentile(StatUtilsTest.java:414)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:26:02.992 [pool-2021-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.997 [pool-2022-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:02.998 [pool-2023-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<1.2350000143051147> but was:<1.2339999675750732>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.util.PrecisionTest.testRoundFloat(PrecisionTest.java:375)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:02.999 [pool-2024-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testRoundFloat(org.apache.commons.math3.util.PrecisionTest)
[expected:<1.2350000143051147> but was:<1.2339999675750732>]
java.lang.AssertionError: expected:<1.2350000143051147> but was:<1.2339999675750732>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.util.PrecisionTest.testRoundFloat(PrecisionTest.java:375)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:26:03.006 [pool-2025-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Array comparison failure
 Elements at index 1 differ.  expected = 4.0 observed = 2.0
 Elements at index 4 differ.  expected = 3.0 observed = 1.0
 Elements at index 8 differ.  expected = 4.0 observed = 2.0
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.stat.ranking.NaturalRankingTest.testNaNsFixedTiesRandom(NaturalRankingTest.java:166)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:03.007 [pool-2026-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNaNsFixedTiesRandom(org.apache.commons.math3.stat.ranking.NaturalRankingTest)
[Array comparison failure
 Elements at index 1 differ.  expected = 4.0 observed = 2.0
 Elements at index 4 differ.  expected = 3.0 observed = 1.0
 Elements at index 8 differ.  expected = 4.0 observed = 2.0]
java.lang.AssertionError: Array comparison failure
 Elements at index 1 differ.  expected = 4.0 observed = 2.0
 Elements at index 4 differ.  expected = 3.0 observed = 1.0
 Elements at index 8 differ.  expected = 4.0 observed = 2.0    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.stat.ranking.NaturalRankingTest.testNaNsFixedTiesRandom(NaturalRankingTest.java:166)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: Array comparison failure
 Elements at index 1 differ.  expected = 2.0 observed = 1.0
 Elements at index 4 differ.  expected = 3.0 observed = 2.0
 Elements at index 7 differ.  expected = 4.0 observed = 3.0
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.stat.ranking.NaturalRankingTest.testNaNsRemovedTiesSequential(NaturalRankingTest.java:93)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:03.008 [pool-2027-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNaNsRemovedTiesSequential(org.apache.commons.math3.stat.ranking.NaturalRankingTest)
[Array comparison failure
 Elements at index 1 differ.  expected = 2.0 observed = 1.0
 Elements at index 4 differ.  expected = 3.0 observed = 2.0
 Elements at index 7 differ.  expected = 4.0 observed = 3.0]
java.lang.AssertionError: Array comparison failure
 Elements at index 1 differ.  expected = 2.0 observed = 1.0
 Elements at index 4 differ.  expected = 3.0 observed = 2.0
 Elements at index 7 differ.  expected = 4.0 observed = 3.0    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.stat.ranking.NaturalRankingTest.testNaNsRemovedTiesSequential(NaturalRankingTest.java:93)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.ArrayIndexOutOfBoundsException
00:26:03.013 [pool-2029-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.75400000000005. 
value	expected	observed
1	0.11		110
2	0.11		105
3	0.11		212
4	0.11		131
5	0.11		116
6	0.11		104
7	0.11		102
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)
00:26:03.014 [pool-2030-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.Well44497bTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 208.75400000000005. 
value	expected	observed
1	0.11		110
2	0.11		105
3	0.11		212
4	0.11		131
5	0.11		116
6	0.11		104
7	0.11		102
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.75400000000005. 
value	expected	observed
1	0.11		110
2	0.11		105
3	0.11		212
4	0.11		131
5	0.11		116
6	0.11		104
7	0.11		102
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)

00:26:03.016 [pool-2031-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.150 [pool-2032-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2133 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.192 [pool-2033-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (41 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.75400000000005. 
value	expected	observed
1	0.11		110
2	0.11		105
3	0.11		212
4	0.11		131
5	0.11		116
6	0.11		104
7	0.11		102
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
00:26:05.194 [pool-2034-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.Well44497bTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 208.75400000000005. 
value	expected	observed
1	0.11		110
2	0.11		105
3	0.11		212
4	0.11		131
5	0.11		116
6	0.11		104
7	0.11		102
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 208.75400000000005. 
value	expected	observed
1	0.11		110
2	0.11		105
3	0.11		212
4	0.11		131
5	0.11		116
6	0.11		104
7	0.11		102
8	0.11		120
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:05.196 [pool-2035-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPermutation(org.apache.commons.math3.random.Well44497bTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:05.198 [pool-2036-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntPositiveRange(org.apache.commons.math3.random.Well44497bTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:05.199 [pool-2037-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.202 [pool-2038-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:05.203 [pool-2039-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongPositiveRange(org.apache.commons.math3.random.Well44497bTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:05.205 [pool-2040-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.206 [pool-2041-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.207 [pool-2042-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.207 [pool-2043-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.4 to fraction (2,971,215,073/-1,836,311,903)
    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:304)
    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:232)
    at org.apache.commons.math3.fraction.BigFractionTest.testEpsilonLimitConstructor(BigFractionTest.java:161)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:05.209 [pool-2044-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testEpsilonLimitConstructor(org.apache.commons.math3.fraction.BigFractionTest)
[illegal state: Overflow trying to convert 0.4 to fraction (2,971,215,073/-1,836,311,903)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.4 to fraction (2,971,215,073/-1,836,311,903)    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:304)
    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:232)
    at org.apache.commons.math3.fraction.BigFractionTest.testEpsilonLimitConstructor(BigFractionTest.java:161)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.5 to fraction (2,971,215,073/-1,836,311,903)
    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:304)
    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:232)
    at org.apache.commons.math3.fraction.BigFractionTest.testDoubleConstructor(BigFractionTest.java:103)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:05.210 [pool-2045-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoubleConstructor(org.apache.commons.math3.fraction.BigFractionTest)
[illegal state: Overflow trying to convert 0.5 to fraction (2,971,215,073/-1,836,311,903)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.5 to fraction (2,971,215,073/-1,836,311,903)    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:304)
    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:232)
    at org.apache.commons.math3.fraction.BigFractionTest.testDoubleConstructor(BigFractionTest.java:103)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: expected:<2> but was:<13>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math3.fraction.BigFractionTest.assertFraction(BigFractionTest.java:35)
00:26:05.211 [pool-2046-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDigitLimitConstructor(org.apache.commons.math3.fraction.BigFractionTest)
[expected:<2> but was:<13>]
java.lang.AssertionError: expected:<2> but was:<13>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math3.fraction.BigFractionTest.assertFraction(BigFractionTest.java:35)

00:26:05.213 [pool-2047-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.214 [pool-2048-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0 to fraction (2,971,215,073/-1,836,311,903)
    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:304)
    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:232)
    at org.apache.commons.math3.fraction.BigFractionTest.testConstructor(BigFractionTest.java:59)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:05.215 [pool-2049-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testConstructor(org.apache.commons.math3.fraction.BigFractionTest)
[illegal state: Overflow trying to convert 0 to fraction (2,971,215,073/-1,836,311,903)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0 to fraction (2,971,215,073/-1,836,311,903)    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:304)
    at org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:232)
    at org.apache.commons.math3.fraction.BigFractionTest.testConstructor(BigFractionTest.java:59)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:05.216 [pool-2050-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.217 [pool-2051-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.231 [pool-2052-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.232 [pool-2053-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.287 [pool-2054-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (55 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.289 [pool-2055-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.291 [pool-2056-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.292 [pool-2057-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.293 [pool-2058-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.404 [pool-2059-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (111 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<12.0> but was:<12.1>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest.testCopy(UnivariateStatisticAbstractTest.java:150)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:05.406 [pool-2060-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCopy(org.apache.commons.math3.stat.descriptive.rank.MedianTest)
[expected:<12.0> but was:<12.1>]
java.lang.AssertionError: expected:<12.0> but was:<12.1>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest.testCopy(UnivariateStatisticAbstractTest.java:150)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<12.0> but was:<12.1>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(UnivariateStatisticAbstractTest.java:97)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:05.406 [pool-2061-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testEvaluation(org.apache.commons.math3.stat.descriptive.rank.MedianTest)
[expected:<12.0> but was:<12.1>]
java.lang.AssertionError: expected:<12.0> but was:<12.1>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(UnivariateStatisticAbstractTest.java:97)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:26:05.407 [pool-2062-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest.testSinMin(UnivariateMultiStartOptimizerTest.java:44)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:05.408 [pool-2063-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSinMin(org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest.testSinMin(UnivariateMultiStartOptimizerTest.java:44)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:05.426 [pool-2064-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.468 [pool-2065-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (42 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.exception.NotPositiveException: length (-1)
    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(AbstractUnivariateStatistic.java:172)
    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(AbstractUnivariateStatistic.java:137)
    at org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(AbstractStorelessUnivariateStatistic.java:146)
    at org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testCopyConsistency(StorelessUnivariateStatisticAbstractTest.java:198)
    at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:05.470 [pool-2066-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testCopyConsistency(org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest)
[length (-1)]
org.apache.commons.math3.exception.NotPositiveException: length (-1)    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(AbstractUnivariateStatistic.java:172)
    at org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(AbstractUnivariateStatistic.java:137)
    at org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(AbstractStorelessUnivariateStatistic.java:146)
    at org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testCopyConsistency(StorelessUnivariateStatisticAbstractTest.java:198)
    at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

org.apache.commons.math3.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [1, 1.072], values: [1, 1]
    at org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyBracketing(UnivariateSolverUtils.java:376)
    at org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.verifyBracketing(BaseAbstractUnivariateSolver.java:282)
    at org.apache.commons.math3.analysis.solvers.BaseSecantSolver.doSolve(BaseSecantSolver.java:148)
    at org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(BaseAbstractUnivariateSolver.java:190)
    at org.apache.commons.math3.analysis.solvers.BaseSecantSolver.solve(BaseSecantSolver.java:118)
    at org.apache.commons.math3.analysis.solvers.BaseSecantSolver.solve(BaseSecantSolver.java:110)
00:26:05.472 [pool-2067-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testOverlappingEvents0(org.apache.commons.math3.ode.events.OverlappingEventsTest)
[function values at endpoints do not have different signs, endpoints: [1, 1.072], values: [1, 1]]
org.apache.commons.math3.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [1, 1.072], values: [1, 1]    at org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyBracketing(UnivariateSolverUtils.java:376)
    at org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.verifyBracketing(BaseAbstractUnivariateSolver.java:282)
    at org.apache.commons.math3.analysis.solvers.BaseSecantSolver.doSolve(BaseSecantSolver.java:148)
    at org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(BaseAbstractUnivariateSolver.java:190)
    at org.apache.commons.math3.analysis.solvers.BaseSecantSolver.solve(BaseSecantSolver.java:118)
    at org.apache.commons.math3.analysis.solvers.BaseSecantSolver.solve(BaseSecantSolver.java:110)

00:26:05.473 [pool-2068-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
-3	111.11		101
-2	111.11		107
-1	111.11		240
0	111.11		104
1	111.11		118
2	111.11		120
3	111.11		109
4	111.11		101
5	111.11		0
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:447)
    at org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.testSampling(IntegerDistributionAbstractTest.java:263)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:05.475 [pool-2069-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSampling(org.apache.commons.math3.distribution.UniformIntegerDistributionTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
-3	111.11		101
-2	111.11		107
-1	111.11		240
0	111.11		104
1	111.11		118
2	111.11		120
3	111.11		109
4	111.11		101
5	111.11		0
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005. 
value	expected	observed
-3	111.11		101
-2	111.11		107
-1	111.11		240
0	111.11		104
1	111.11		118
2	111.11		120
3	111.11		109
4	111.11		101
5	111.11		0
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:447)
    at org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.testSampling(IntegerDistributionAbstractTest.java:263)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:05.477 [pool-2070-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.479 [pool-2071-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.484 [pool-2072-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.491 [pool-2073-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.501 [pool-2074-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.503 [pool-2075-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.504 [pool-2076-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.505 [pool-2077-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.506 [pool-2078-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.507 [pool-2079-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.508 [pool-2080-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.509 [pool-2081-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.509 [pool-2082-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.510 [pool-2083-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.511 [pool-2084-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.512 [pool-2085-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.524 [pool-2086-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.525 [pool-2087-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.526 [pool-2088-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.527 [pool-2089-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.528 [pool-2090-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.529 [pool-2091-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.530 [pool-2092-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.531 [pool-2093-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.532 [pool-2094-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.533 [pool-2095-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.534 [pool-2096-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.535 [pool-2097-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.535 [pool-2098-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.536 [pool-2099-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.537 [pool-2100-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.538 [pool-2101-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.539 [pool-2102-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.540 [pool-2103-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.541 [pool-2104-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.541 [pool-2105-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.542 [pool-2106-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.543 [pool-2107-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.544 [pool-2108-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.545 [pool-2109-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.546 [pool-2110-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.547 [pool-2111-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.548 [pool-2112-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.549 [pool-2113-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.550 [pool-2114-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.551 [pool-2115-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.551 [pool-2116-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.552 [pool-2117-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.553 [pool-2118-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.554 [pool-2119-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.555 [pool-2120-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.556 [pool-2121-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.556 [pool-2122-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.557 [pool-2123-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.567 [pool-2124-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.568 [pool-2125-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.569 [pool-2126-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.570 [pool-2127-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.571 [pool-2128-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.572 [pool-2129-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.580 [pool-2130-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.582 [pool-2131-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.584 [pool-2132-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.585 [pool-2133-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.594 [pool-2134-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.595 [pool-2135-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.596 [pool-2136-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.598 [pool-2137-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.599 [pool-2138-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.600 [pool-2139-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.601 [pool-2140-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.602 [pool-2141-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.603 [pool-2142-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.604 [pool-2143-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.604 [pool-2144-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.605 [pool-2145-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.606 [pool-2146-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.607 [pool-2147-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.608 [pool-2148-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.609 [pool-2149-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.610 [pool-2150-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.611 [pool-2151-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.611 [pool-2152-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.612 [pool-2153-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.613 [pool-2154-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.614 [pool-2155-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.615 [pool-2156-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.616 [pool-2157-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.685 [pool-2158-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.686 [pool-2159-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.688 [pool-2160-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.689 [pool-2161-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.690 [pool-2162-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.691 [pool-2163-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.691 [pool-2164-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.692 [pool-2165-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.693 [pool-2166-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.694 [pool-2167-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.695 [pool-2168-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.696 [pool-2169-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.697 [pool-2170-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.698 [pool-2171-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.699 [pool-2172-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.699 [pool-2173-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.742 [pool-2174-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (42 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.743 [pool-2175-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 10 to fraction after 100 iterations
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionFormat.format(FractionFormat.java:180)
    at org.apache.commons.math3.fraction.AbstractFormat.format(AbstractFormat.java:207)
    at java.text.NumberFormat.format(NumberFormat.java:316)
00:26:05.745 [pool-2176-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testLongFormat(org.apache.commons.math3.fraction.FractionFormatTest)
[illegal state: Unable to convert 10 to fraction after 100 iterations]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Unable to convert 10 to fraction after 100 iterations    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:227)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionFormat.format(FractionFormat.java:180)
    at org.apache.commons.math3.fraction.AbstractFormat.format(AbstractFormat.java:207)
    at java.text.NumberFormat.format(NumberFormat.java:316)

org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 3.142 to fraction (4,106,118,243/2,971,215,073)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionFormat.format(FractionFormat.java:180)
    at org.apache.commons.math3.fraction.AbstractFormat.format(AbstractFormat.java:190)
    at java.text.NumberFormat.format(NumberFormat.java:296)
00:26:05.746 [pool-2177-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDoubleFormat(org.apache.commons.math3.fraction.FractionFormatTest)
[illegal state: Overflow trying to convert 3.142 to fraction (4,106,118,243/2,971,215,073)]
org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 3.142 to fraction (4,106,118,243/2,971,215,073)    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:99)
    at org.apache.commons.math3.fraction.FractionFormat.format(FractionFormat.java:180)
    at org.apache.commons.math3.fraction.AbstractFormat.format(AbstractFormat.java:190)
    at java.text.NumberFormat.format(NumberFormat.java:296)

00:26:05.748 [pool-2178-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.748 [pool-2179-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.749 [pool-2180-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.750 [pool-2181-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.750 [pool-2182-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.751 [pool-2183-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.751 [pool-2184-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.751 [pool-2185-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.752 [pool-2186-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.752 [pool-2187-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.753 [pool-2188-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.753 [pool-2189-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.754 [pool-2190-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.754 [pool-2191-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.755 [pool-2192-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.755 [pool-2193-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.756 [pool-2194-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.756 [pool-2195-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.757 [pool-2196-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.757 [pool-2197-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.758 [pool-2198-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.759 [pool-2199-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.759 [pool-2200-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.760 [pool-2201-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.761 [pool-2202-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.762 [pool-2203-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.763 [pool-2204-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.763 [pool-2205-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.764 [pool-2206-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<4.1> but was:<10.370767347484495>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.test1PercentError(HarmonicFitterTest.java:98)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:05.766 [pool-2207-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ test1PercentError(org.apache.commons.math3.optimization.fitting.HarmonicFitterTest)
[expected:<4.1> but was:<10.370767347484495>]
java.lang.AssertionError: expected:<4.1> but was:<10.370767347484495>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.test1PercentError(HarmonicFitterTest.java:98)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<4.1> but was:<10.366858623656343>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testInitialGuess(HarmonicFitterTest.java:134)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:05.769 [pool-2208-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testInitialGuess(org.apache.commons.math3.optimization.fitting.HarmonicFitterTest)
[expected:<4.1> but was:<10.366858623656343>]
java.lang.AssertionError: expected:<4.1> but was:<10.366858623656343>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testInitialGuess(HarmonicFitterTest.java:134)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<4.1> but was:<10.368189493011789>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testUnsorted(HarmonicFitterTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:26:05.772 [pool-2209-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testUnsorted(org.apache.commons.math3.optimization.fitting.HarmonicFitterTest)
[expected:<4.1> but was:<10.368189493011789>]
java.lang.AssertionError: expected:<4.1> but was:<10.368189493011789>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testUnsorted(HarmonicFitterTest.java:177)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

00:26:05.774 [pool-2210-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.775 [pool-2211-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.775 [pool-2212-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<4> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math3.util.ResizableDoubleArrayTest.testAddElementRolling(ResizableDoubleArrayTest.java:257)
00:26:05.776 [pool-2213-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAddElementRolling(org.apache.commons.math3.util.ResizableDoubleArrayTest)
[expected:<4> but was:<3>]
java.lang.AssertionError: expected:<4> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math3.util.ResizableDoubleArrayTest.testAddElementRolling(ResizableDoubleArrayTest.java:257)

00:26:05.777 [pool-2214-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.778 [pool-2215-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.779 [pool-2216-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.779 [pool-2217-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.780 [pool-2218-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<4> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math3.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(ResizableDoubleArrayTest.java:186)
00:26:05.780 [pool-2219-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testSetElementArbitraryExpansion(org.apache.commons.math3.util.ResizableDoubleArrayTest)
[expected:<4> but was:<3>]
java.lang.AssertionError: expected:<4> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math3.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(ResizableDoubleArrayTest.java:186)

00:26:05.781 [pool-2220-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.781 [pool-2221-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.783 [pool-2222-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.790 [pool-2223-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.795 [pool-2224-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.801 [pool-2225-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.804 [pool-2226-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.810 [pool-2227-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.813 [pool-2228-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.820 [pool-2229-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.3076923076923077 observed = 0.38461538461538464
 Elements at index 1 differ.  expected = 0.5384615384615384 observed = 0.6153846153846154
 Elements at index 2 differ.  expected = 0.6923076923076923 observed = 0.7692307692307693
 Elements at index 3 differ.  expected = 0.8461538461538461 observed = 0.9230769230769231
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.EmpiricalDistributionTest.testGetBinUpperBounds(EmpiricalDistributionTest.java:212)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:26:05.822 [pool-2230-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testGetBinUpperBounds(org.apache.commons.math3.random.EmpiricalDistributionTest)
[Array comparison failure
 Elements at index 0 differ.  expected = 0.3076923076923077 observed = 0.38461538461538464
 Elements at index 1 differ.  expected = 0.5384615384615384 observed = 0.6153846153846154
 Elements at index 2 differ.  expected = 0.6923076923076923 observed = 0.7692307692307693
 Elements at index 3 differ.  expected = 0.8461538461538461 observed = 0.9230769230769231]
java.lang.AssertionError: Array comparison failure
 Elements at index 0 differ.  expected = 0.3076923076923077 observed = 0.38461538461538464
 Elements at index 1 differ.  expected = 0.5384615384615384 observed = 0.6153846153846154
 Elements at index 2 differ.  expected = 0.6923076923076923 observed = 0.7692307692307693
 Elements at index 3 differ.  expected = 0.8461538461538461 observed = 0.9230769230769231    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:365)
    at org.apache.commons.math3.TestUtils.assertEquals(TestUtils.java:102)
    at org.apache.commons.math3.random.EmpiricalDistributionTest.testGetBinUpperBounds(EmpiricalDistributionTest.java:212)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

00:26:05.827 [pool-2231-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:05.832 [pool-2232-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.ArrayIndexOutOfBoundsException
00:26:05.836 [pool-2234-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 266.624. 
value	expected	observed
1	0.11		116
2	0.11		107
3	0.11		240
4	0.11		109
5	0.11		93
6	0.11		121
7	0.11		98
8	0.11		116
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)
00:26:05.838 [pool-2235-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntNegativeToPositiveRange(org.apache.commons.math3.random.Well19937aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 266.624. 
value	expected	observed
1	0.11		116
2	0.11		107
3	0.11		240
4	0.11		109
5	0.11		93
6	0.11		121
7	0.11		98
8	0.11		116
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 266.624. 
value	expected	observed
1	0.11		116
2	0.11		107
3	0.11		240
4	0.11		109
5	0.11		93
6	0.11		121
7	0.11		98
8	0.11		116
9	0.11		0
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:153)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntNegativeToPositiveRange(RandomDataTest.java:113)
    at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)

00:26:05.839 [pool-2236-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed for mean = 59.0 p-value = 8.524891980450366E-4 chisquare statistic = 34.980652390443815. 
bin		expected	observed
[1,42)		8.55		4
[42,45)		16.95		22
[45,48)		37.79		44
[48,51)		69.65		73
[51,54)		107.3		106
[54,57)		139.59		140
[57,60)		154.71		204
[60,63)		147.27		146
[63,66)		121.27		102
[66,69)		86.97		66
[69,72)		54.64		40
[72,75)		30.24		30
[75,79)		17.63		13
[79,inf)		7.43		10
This test can fail randomly due to sampling error with probability 0.001.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:05.996 [pool-2237-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (156 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPoissonConsistency(org.apache.commons.math3.random.Well19937aTest)
[Chisquare test failed for mean = 59.0 p-value = 8.524891980450366E-4 chisquare statistic = 34.980652390443815. 
bin		expected	observed
[1,42)		8.55		4
[42,45)		16.95		22
[45,48)		37.79		44
[48,51)		69.65		73
[51,54)		107.3		106
[54,57)		139.59		140
[57,60)		154.71		204
[60,63)		147.27		146
[63,66)		121.27		102
[66,69)		86.97		66
[69,72)		54.64		40
[72,75)		30.24		30
[75,79)		17.63		13
[79,inf)		7.43		10
This test can fail randomly due to sampling error with probability 0.001.]
java.lang.AssertionError: Chisquare test failed for mean = 59.0 p-value = 8.524891980450366E-4 chisquare statistic = 34.980652390443815. 
bin		expected	observed
[1,42)		8.55		4
[42,45)		16.95		22
[45,48)		37.79		44
[48,51)		69.65		73
[51,54)		107.3		106
[54,57)		139.59		140
[57,60)		154.71		204
[60,63)		147.27		146
[63,66)		121.27		102
[66,69)		86.97		66
[69,72)		54.64		40
[72,75)		30.24		30
[75,79)		17.63		13
[79,inf)		7.43		10
This test can fail randomly due to sampling error with probability 0.001.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.random.RandomDataTest.checkNextPoissonConsistency(RandomDataTest.java:508)
    at org.apache.commons.math3.random.RandomDataTest.testNextPoissonConsistency(RandomDataTest.java:370)
    at sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

00:26:06.037 [pool-2238-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (40 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 266.624. 
value	expected	observed
1	0.11		116
2	0.11		107
3	0.11		240
4	0.11		109
5	0.11		93
6	0.11		121
7	0.11		98
8	0.11		116
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)
00:26:06.040 [pool-2239-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongNegativeToPositiveRange(org.apache.commons.math3.random.Well19937aTest)
[Chisquare test failed p-value = 0.0 chisquare statistic = 266.624. 
value	expected	observed
1	0.11		116
2	0.11		107
3	0.11		240
4	0.11		109
5	0.11		93
6	0.11		121
7	0.11		98
8	0.11		116
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.]
java.lang.AssertionError: Chisquare test failed p-value = 0.0 chisquare statistic = 266.624. 
value	expected	observed
1	0.11		116
2	0.11		107
3	0.11		240
4	0.11		109
5	0.11		93
6	0.11		121
7	0.11		98
8	0.11		116
9	0.11		0
This test can fail randomly due to sampling error with probability 0.01.    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:429)
    at org.apache.commons.math3.TestUtils.assertChiSquareAccept(TestUtils.java:463)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:207)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongNegativeToPositiveRange(RandomDataTest.java:169)
    at sun.reflect.GeneratedMethodAccessor98.invoke(Unknown Source)

java.lang.ArrayIndexOutOfBoundsException: -1
    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
00:26:06.041 [pool-2240-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextPermutation(org.apache.commons.math3.random.Well19937aTest)
[-1]
java.lang.ArrayIndexOutOfBoundsException: -1    at org.apache.commons.math3.random.RandomDataImpl.shuffle(RandomDataImpl.java:1031)
    at org.apache.commons.math3.random.RandomDataImpl.nextPermutation(RandomDataImpl.java:945)
    at org.apache.commons.math3.random.RandomDataTest.testNextPermutation(RandomDataTest.java:931)
    at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: nextInt range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:06.042 [pool-2241-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextIntPositiveRange(org.apache.commons.math3.random.Well19937aTest)
[nextInt range]
java.lang.AssertionError: nextInt range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextIntUniform(RandomDataTest.java:140)
    at org.apache.commons.math3.random.RandomDataTest.testNextIntPositiveRange(RandomDataTest.java:129)
    at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:06.044 [pool-2242-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:26:06.047 [pool-2243-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: nextLong range
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:26:06.048 [pool-2244-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testNextLongPositiveRange(org.apache.commons.math3.random.Well19937aTest)
[nextLong range]
java.lang.AssertionError: nextLong range    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.random.RandomDataTest.checkNextLongUniform(RandomDataTest.java:194)
    at org.apache.commons.math3.random.RandomDataTest.testNextLongPositiveRange(RandomDataTest.java:185)
    at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:26:28.694 [pool-2245-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (22565 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

00:29:48.695 [pool-1031-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
00:29:48.695 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
00:29:48.695 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
00:29:48.695 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3249 which is executed by 605 tests
1033054629
00:29:49.012 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:49.041 [pool-2248-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:29:50.329 [pool-2247-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:1883: error: variable y might not have been initialized
        if ((x < 0) && (y != x)) {
                        ^
FastMath.java:1886: error: variable y might not have been initialized
        if (y == 0) {
            ^
00:29:51.194 [pool-2247-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class FastMath {
    public static final double PI = (1.05414357E8 / 3.3554432E7) + 1.984187159361081E-9;

    public static final double E = (2850325.0 / 1048576.0) + 8.254840070411029E-8;

    static final int EXP_INT_TABLE_MAX_INDEX = 750;

    static final int EXP_INT_TABLE_LEN = (org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX) * 2;

    static final int LN_MANT_LEN = 1024;

    static final int EXP_FRAC_TABLE_LEN = 1025;

    private static final boolean RECOMPUTE_TABLES_AT_RUNTIME = false;

    private static final double LN_2_A = 0.6931470632553101;

    private static final double LN_2_B = 1.1730463525082348E-7;

    private static final double[][] LN_QUICK_COEF = new double[][]{ new double[]{ 1.0, 5.669184079525E-24 }, new double[]{ -0.25, -0.25 }, new double[]{ 0.3333333134651184, 1.986821492305628E-8 }, new double[]{ -0.25, -6.663542893624021E-14 }, new double[]{ 0.19999998807907104, 1.1921056801463227E-8 }, new double[]{ -0.1666666567325592, -7.800414592973399E-9 }, new double[]{ 0.1428571343421936, 5.650007086920087E-9 }, new double[]{ -0.12502530217170715, -7.44321345601866E-11 }, new double[]{ 0.11113807559013367, 9.219544613762692E-9 } };

    private static final double[][] LN_HI_PREC_COEF = new double[][]{ new double[]{ 1.0, -6.032174644509064E-23 }, new double[]{ -0.25, -0.25 }, new double[]{ 0.3333333134651184, 1.9868161777724352E-8 }, new double[]{ -0.2499999701976776, -2.957007209750105E-8 }, new double[]{ 0.19999954104423523, 1.5830993332061267E-10 }, new double[]{ -0.16624879837036133, -2.6033824355191673E-8 } };

    private static final int SINE_TABLE_LEN = 14;

    private static final double[] SINE_TABLE_A = new double[]{ +0.0, +0.1246747374534607, +0.24740394949913025, +0.366272509098053, +0.4794255495071411, +0.5850973129272461, +0.6816387176513672, +0.7675435543060303, +0.8414709568023682, +0.902267575263977, +0.9489846229553223, +0.9808930158615112, +0.9974949359893799, +0.9985313415527344 };

    private static final double[] SINE_TABLE_B = new double[]{ +0.0, -4.068233003401932E-9, +9.755392680573412E-9, +1.9987994582857286E-8, -1.0902938113007961E-8, -3.9986783938944604E-8, +4.23719669792332E-8, -5.207000323380292E-8, +2.800552834259E-8, +1.883511811213715E-8, -3.5997360512765566E-9, +4.116164446561962E-8, +5.0614674548127384E-8, -1.0129027912496858E-9 };

    private static final double[] COSINE_TABLE_A = new double[]{ +1.0, +0.9921976327896118, +0.9689123630523682, +0.9305076599121094, +0.8775825500488281, +0.8109631538391113, +0.7316888570785522, +0.6409968137741089, +0.5403022766113281, +0.4311765432357788, +0.3153223395347595, +0.19454771280288696, +0.07073719799518585, -0.05417713522911072 };

    private static final double[] COSINE_TABLE_B = new double[]{ +0.0, +3.4439717236742845E-8, +5.865827662008209E-8, -3.7999795083850525E-8, +1.184154459111628E-8, -3.43338934259355E-8, +1.1795268640216787E-8, +4.438921624363781E-8, +2.925681159240093E-8, -2.6437112632041807E-8, +2.2860509143963117E-8, -4.813899778443457E-9, +3.6725170580355583E-9, +2.0217439756338078E-10 };

    private static final double[] TANGENT_TABLE_A = new double[]{ +0.0, +0.1256551444530487, +0.25534194707870483, +0.3936265707015991, +0.5463024377822876, +0.7214844226837158, +0.9315965175628662, +1.1974215507507324, +1.5574076175689697, +2.092571258544922, +3.0095696449279785, +5.041914939880371, +14.101419448852539, -18.430862426757812 };

    private static final double[] TANGENT_TABLE_B = new double[]{ +0.0, -7.877917738262007E-9, -2.5857668567479893E-8, +5.2240336371356666E-9, +5.206150291559893E-8, +1.8307188599677033E-8, -5.7618793749770706E-8, +7.848361555046424E-8, +1.0708593250394448E-7, +1.7827257129423813E-8, +2.893485277253286E-8, +3.1660099222737955E-7, +4.983191803254889E-7, -3.356118100840571E-7 };

    private static final long[] RECIP_2PI = new long[]{ (683565275L << 32) | 2475754826L, (2131351028L << 32) | 2102212464L, (920167782L << 32) | 1326507024L, (2140428522L << 32) | 4155437400L, (1841896334L << 32) | 2425582776L, (26364858L << 32) | 2188665991L, (1065843399L << 32) | 743074255L, (3122695549L << 32) | 1269748001L, (979835913L << 32) | 2904022928L, (1315206542L << 32) | 1624559229L, (656480226L << 32) | 4018031118L, (3355321855L << 32) | 4152452611L, (4224435298L << 32) | 3598883655L, (3679297459L << 32) | 3388129901L, (3553726425L << 32) | 2811755147L, (1565126321L << 32) | 4210654302L, (3477196413L << 32) | 3801392314L, 2600392684L << 32 };

    private static final long[] PI_O_4_BITS = new long[]{ (3373259426L << 32) | 560513588L, (3301335691L << 32) | 2161908945L };

    private static final double[] EIGHTHS = new double[]{ 0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625 };

    private static final double[] CBRTTWO = new double[]{ 0.6299605249474366, 0.7937005259840998, 1.0, 1.2599210498948732, 1.5874010519681994 };

    private static final long HEX_40000000 = 1073741824L;

    private static final long MASK_30BITS = (-1L) - ((org.apache.commons.math3.util.FastMath.HEX_40000000) - 1);

    private static final double TWO_POWER_52 = 4.503599627370496E15;

    private static final double F_1_3 = 1.0 / 3.0;

    private static final double F_1_5 = 1.0 / 5.0;

    private static final double F_1_7 = 1.0 / 7.0;

    private static final double F_1_9 = 1.0 / 9.0;

    private static final double F_1_11 = 1.0 / 11.0;

    private static final double F_1_13 = 1.0 / 13.0;

    private static final double F_1_15 = 1.0 / 15.0;

    private static final double F_1_17 = 1.0 / 17.0;

    private static final double F_3_4 = 3.0 / 4.0;

    private static final double F_15_16 = 15.0 / 16.0;

    private static final double F_13_14 = 13.0 / 14.0;

    private static final double F_11_12 = 11.0 / 12.0;

    private static final double F_9_10 = 9.0 / 10.0;

    private static final double F_7_8 = 7.0 / 8.0;

    private static final double F_5_6 = 5.0 / 6.0;

    private static final double F_1_2 = 1.0 / 2.0;

    private static final double F_1_4 = 1.0 / 4.0;

    private FastMath() {
    }

    private static double doubleHighPart(double d) {
        if ((d > (-(org.apache.commons.math3.util.Precision.SAFE_MIN))) && (d < (org.apache.commons.math3.util.Precision.SAFE_MIN))) {
            return d;
        }
        long xl = java.lang.Double.doubleToLongBits(d);
        xl = xl & (org.apache.commons.math3.util.FastMath.MASK_30BITS);
        return java.lang.Double.longBitsToDouble(xl);
    }

    public static double sqrt(final double a) {
        return java.lang.Math.sqrt(a);
    }

    public static double cosh(double x) {
        if (x != x) {
            return x;
        }
        if (x > 20.0) {
            return (org.apache.commons.math3.util.FastMath.exp(x)) / 2.0;
        }
        if (x < (-20)) {
            return (org.apache.commons.math3.util.FastMath.exp((-x))) / 2.0;
        }
        double[] hiPrec = new double[2];
        if (x < 0.0) {
            x = -x;
        }
        org.apache.commons.math3.util.FastMath.exp(x, 0.0, hiPrec);
        double ya = (hiPrec[0]) + (hiPrec[1]);
        double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
        double temp = ya * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        double yaa = (ya + temp) - temp;
        double yab = ya - yaa;
        double recip = 1.0 / ya;
        temp = recip * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        double recipa = (recip + temp) - temp;
        double recipb = recip - recipa;
        recipb += ((((1.0 - (yaa * recipa)) - (yaa * recipb)) - (yab * recipa)) - (yab * recipb)) * recip;
        recipb += ((-yb) * recip) * recip;
        temp = ya + recipa;
        yb += -((temp - ya) - recipa);
        ya = temp;
        temp = ya + recipb;
        yb += -((temp - ya) - recipb);
        ya = temp;
        double result = ya + yb;
        result *= 0.5;
        return result;
    }

    public static double sinh(double x) {
        boolean negate = false;
        if (x != x) {
            return x;
        }
        if (x > 20.0) {
            return (org.apache.commons.math3.util.FastMath.exp(x)) / 2.0;
        }
        if (x < (-20)) {
            return (-(org.apache.commons.math3.util.FastMath.exp((-x)))) / 2.0;
        }
        if (x == 0) {
            return x;
        }
        if (x < 0.0) {
            x = -x;
            negate = true;
        }
        double result;
        if (x > 0.25) {
            double[] hiPrec = new double[2];
            org.apache.commons.math3.util.FastMath.exp(x, 0.0, hiPrec);
            double ya = (hiPrec[0]) + (hiPrec[1]);
            double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
            double temp = ya * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            double yaa = (ya + temp) - temp;
            double yab = ya - yaa;
            double recip = 1.0 / ya;
            temp = recip * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            double recipa = (recip + temp) - temp;
            double recipb = recip - recipa;
            recipb += ((((1.0 - (yaa * recipa)) - (yaa * recipb)) - (yab * recipa)) - (yab * recipb)) * recip;
            recipb += ((-yb) * recip) * recip;
            recipa = -recipa;
            recipb = -recipb;
            temp = ya + recipa;
            yb += -((temp - ya) - recipa);
            ya = temp;
            temp = ya + recipb;
            yb += -((temp - ya) - recipb);
            ya = temp;
            result = ya + yb;
            result *= 0.5;
        }else {
            double[] hiPrec = new double[2];
            org.apache.commons.math3.util.FastMath.expm1(x, hiPrec);
            double ya = (hiPrec[0]) + (hiPrec[1]);
            double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
            double denom = 1.0 + ya;
            double denomr = 1.0 / denom;
            double denomb = (-((denom - 1.0) - ya)) + yb;
            double ratio = ya * denomr;
            double temp = ratio * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            double ra = (ratio + temp) - temp;
            double rb = ratio - ra;
            temp = denom * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            double za = (denom + temp) - temp;
            double zb = denom - za;
            rb += ((((ya - (za * ra)) - (za * rb)) - (zb * ra)) - (zb * rb)) * denomr;
            rb += yb * denomr;
            rb += (((-ya) * denomb) * denomr) * denomr;
            temp = ya + ra;
            yb += -((temp - ya) - ra);
            ya = temp;
            temp = ya + rb;
            yb += -((temp - ya) - rb);
            ya = temp;
            result = ya + yb;
            result *= 0.5;
        }
        if (negate) {
            result = -result;
        }
        return result;
    }

    public static double tanh(double x) {
        boolean negate = false;
        if (x != x) {
            return x;
        }
        if (x > 20.0) {
            return 1.0;
        }
        if (x < (-20)) {
            return -1.0;
        }
        if (x == 0) {
            return x;
        }
        if (x < 0.0) {
            x = -x;
            negate = true;
        }
        double result;
        if (x >= 0.5) {
            double[] hiPrec = new double[2];
            org.apache.commons.math3.util.FastMath.exp((x * 2.0), 0.0, hiPrec);
            double ya = (hiPrec[0]) + (hiPrec[1]);
            double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
            double na = (-1.0) + ya;
            double nb = -((na + 1.0) - ya);
            double temp = na + yb;
            nb += -((temp - na) - yb);
            na = temp;
            double da = 1.0 + ya;
            double db = -((da - 1.0) - ya);
            temp = da + yb;
            db += -((temp - da) - yb);
            da = temp;
            temp = da * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            double daa = (da + temp) - temp;
            double dab = da - daa;
            double ratio = na / da;
            temp = ratio * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            double ratioa = (ratio + temp) - temp;
            double ratiob = ratio - ratioa;
            ratiob += ((((na - (daa * ratioa)) - (daa * ratiob)) - (dab * ratioa)) - (dab * ratiob)) / da;
            ratiob += nb / da;
            ratiob += (((-db) * na) / da) / da;
            result = ratioa + ratiob;
        }else {
            double[] hiPrec = new double[2];
            org.apache.commons.math3.util.FastMath.expm1((x * 2.0), hiPrec);
            double ya = (hiPrec[0]) + (hiPrec[1]);
            double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
            double na = ya;
            double nb = yb;
            double da = 2.0 + ya;
            double db = -((da - 2.0) - ya);
            double temp = da + yb;
            db += -((temp - da) - yb);
            da = temp;
            temp = da * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            double daa = (da + temp) - temp;
            double dab = da - daa;
            double ratio = na / da;
            temp = ratio * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            double ratioa = (ratio + temp) - temp;
            double ratiob = ratio - ratioa;
            ratiob += ((((na - (daa * ratioa)) - (daa * ratiob)) - (dab * ratioa)) - (dab * ratiob)) / da;
            ratiob += nb / da;
            ratiob += (((-db) * na) / da) / da;
            result = ratioa + ratiob;
        }
        if (negate) {
            result = -result;
        }
        return result;
    }

    public static double acosh(final double a) {
        return org.apache.commons.math3.util.FastMath.log((a + (org.apache.commons.math3.util.FastMath.sqrt(((a * a) - 1)))));
    }

    public static double asinh(double a) {
        boolean negative = false;
        if (a < 0) {
            negative = true;
            a = -a;
        }
        double absAsinh;
        if (a > 0.167) {
            absAsinh = org.apache.commons.math3.util.FastMath.log(((org.apache.commons.math3.util.FastMath.sqrt(((a * a) + 1))) + a));
        }else {
            final double a2 = a * a;
            if (a > 0.097) {
                absAsinh = a * (1 - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_3) - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_5) - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_7) - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_9) - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_11) - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_13) - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_15) - ((a2 * (org.apache.commons.math3.util.FastMath.F_1_17)) * (org.apache.commons.math3.util.FastMath.F_15_16)))) * (org.apache.commons.math3.util.FastMath.F_13_14)))) * (org.apache.commons.math3.util.FastMath.F_11_12)))) * (org.apache.commons.math3.util.FastMath.F_9_10)))) * (org.apache.commons.math3.util.FastMath.F_7_8)))) * (org.apache.commons.math3.util.FastMath.F_5_6)))) * (org.apache.commons.math3.util.FastMath.F_3_4)))) * (org.apache.commons.math3.util.FastMath.F_1_2)));
            }else
                if (a > 0.036) {
                    absAsinh = a * (1 - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_3) - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_5) - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_7) - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_9) - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_11) - ((a2 * (org.apache.commons.math3.util.FastMath.F_1_13)) * (org.apache.commons.math3.util.FastMath.F_11_12)))) * (org.apache.commons.math3.util.FastMath.F_9_10)))) * (org.apache.commons.math3.util.FastMath.F_7_8)))) * (org.apache.commons.math3.util.FastMath.F_5_6)))) * (org.apache.commons.math3.util.FastMath.F_3_4)))) * (org.apache.commons.math3.util.FastMath.F_1_2)));
                }else
                    if (a > 0.0036) {
                        absAsinh = a * (1 - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_3) - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_5) - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_7) - ((a2 * (org.apache.commons.math3.util.FastMath.F_1_9)) * (org.apache.commons.math3.util.FastMath.F_7_8)))) * (org.apache.commons.math3.util.FastMath.F_5_6)))) * (org.apache.commons.math3.util.FastMath.F_3_4)))) * (org.apache.commons.math3.util.FastMath.F_1_2)));
                    }else {
                        absAsinh = a * (1 - ((a2 * ((org.apache.commons.math3.util.FastMath.F_1_3) - ((a2 * (org.apache.commons.math3.util.FastMath.F_1_5)) * (org.apache.commons.math3.util.FastMath.F_3_4)))) * (org.apache.commons.math3.util.FastMath.F_1_2)));
                    }


        }
        return negative ? -absAsinh : absAsinh;
    }

    public static double atanh(double a) {
        boolean negative = false;
        if (a < 0) {
            negative = true;
            a = -a;
        }
        double absAtanh;
        if (a > 0.15) {
            absAtanh = 0.5 * (org.apache.commons.math3.util.FastMath.log(((1 + a) / (1 - a))));
        }else {
            final double a2 = a * a;
            if (a > 0.087) {
                absAtanh = a * (1 + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_3) + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_5) + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_7) + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_9) + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_11) + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_13) + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_15) + (a2 * (org.apache.commons.math3.util.FastMath.F_1_17)))))))))))))))));
            }else
                if (a > 0.031) {
                    absAtanh = a * (1 + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_3) + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_5) + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_7) + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_9) + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_11) + (a2 * (org.apache.commons.math3.util.FastMath.F_1_13)))))))))))));
                }else
                    if (a > 0.003) {
                        absAtanh = a * (1 + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_3) + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_5) + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_7) + (a2 * (org.apache.commons.math3.util.FastMath.F_1_9)))))))));
                    }else {
                        absAtanh = a * (1 + (a2 * ((org.apache.commons.math3.util.FastMath.F_1_3) + (a2 * (org.apache.commons.math3.util.FastMath.F_1_5)))));
                    }


        }
        return negative ? -absAtanh : absAtanh;
    }

    public static double signum(final double a) {
        return a < 0.0 ? -1.0 : a > 0.0 ? 1.0 : a;
    }

    public static float signum(final float a) {
        return a < 0.0F ? -1.0F : a > 0.0F ? 1.0F : a;
    }

    public static double nextUp(final double a) {
        return org.apache.commons.math3.util.FastMath.nextAfter(a, java.lang.Double.POSITIVE_INFINITY);
    }

    public static float nextUp(final float a) {
        return org.apache.commons.math3.util.FastMath.nextAfter(a, java.lang.Float.POSITIVE_INFINITY);
    }

    public static double random() {
        return java.lang.Math.random();
    }

    public static double exp(double x) {
        return org.apache.commons.math3.util.FastMath.exp(x, 0.0, null);
    }

    private static double exp(double x, double extra, double[] hiPrec) {
        double intPartA;
        double intPartB;
        int intVal;
        if (x < 0.0) {
            intVal = ((int) (-x));
            if (intVal > 746) {
                if (hiPrec != null) {
                    hiPrec[0] = 0.0;
                    hiPrec[1] = 0.0;
                }
                return 0.0;
            }
            if (intVal > 709) {
                final double result = (org.apache.commons.math3.util.FastMath.exp((x + 40.19140625), extra, hiPrec)) / 2.85040095144011776E17;
                if (hiPrec != null) {
                    hiPrec[0] /= 2.85040095144011776E17;
                    hiPrec[1] /= 2.85040095144011776E17;
                }
                return result;
            }
            if (intVal == 709) {
                final double result = (org.apache.commons.math3.util.FastMath.exp((x + 1.494140625), extra, hiPrec)) / 4.455505956692757;
                if (hiPrec != null) {
                    hiPrec[0] /= 4.455505956692757;
                    hiPrec[1] /= 4.455505956692757;
                }
                return result;
            }
            intVal++;
            intPartA = org.apache.commons.math3.util.FastMath.ExpIntTable.EXP_INT_TABLE_A[((org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX) - intVal)];
            intPartB = org.apache.commons.math3.util.FastMath.ExpIntTable.EXP_INT_TABLE_B[((org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX) - intVal)];
            intVal = -intVal;
        }else {
            intVal = ((int) (x));
            if (intVal > 709) {
                if (hiPrec != null) {
                    hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
                    hiPrec[1] = 0.0;
                }
                return java.lang.Double.POSITIVE_INFINITY;
            }
            intPartA = org.apache.commons.math3.util.FastMath.ExpIntTable.EXP_INT_TABLE_A[((org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX) + intVal)];
            intPartB = org.apache.commons.math3.util.FastMath.ExpIntTable.EXP_INT_TABLE_B[((org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX) + intVal)];
        }
        final int intFrac = ((int) ((x - intVal) * 1024.0));
        final double fracPartA = org.apache.commons.math3.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A[intFrac];
        final double fracPartB = org.apache.commons.math3.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B[intFrac];
        final double epsilon = x - (intVal + (intFrac / 1024.0));
        double z = 0.04168701738764507;
        z = (z * epsilon) + 0.1666666505023083;
        z = (z * epsilon) + 0.5000000000042687;
        z = (z * epsilon) + 1.0;
        z = (z * epsilon) + (-3.940510424527919E-20);
        double tempA = intPartA * fracPartA;
        double tempB = ((intPartA * fracPartB) + (intPartB * fracPartA)) + (intPartB * fracPartB);
        final double tempC = tempB + tempA;
        final double result;
        if (extra != 0.0) {
            result = (((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB) + tempA;
        }else {
            result = ((tempC * z) + tempB) + tempA;
        }
        if (hiPrec != null) {
            hiPrec[0] = tempA;
            hiPrec[1] = ((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB;
        }
        return result;
    }

    public static double expm1(double x) {
        return org.apache.commons.math3.util.FastMath.expm1(x, null);
    }

    private static double expm1(double x, double[] hiPrecOut) {
        if ((x != x) || (x == 0.0)) {
            return x;
        }
        if ((x <= (-1.0)) || (x >= 1.0)) {
            double[] hiPrec = new double[2];
            org.apache.commons.math3.util.FastMath.exp(x, 0.0, hiPrec);
            if (x > 0.0) {
                return ((-1.0) + (hiPrec[0])) + (hiPrec[1]);
            }else {
                final double ra = (-1.0) + (hiPrec[0]);
                double rb = -((ra + 1.0) - (hiPrec[0]));
                rb += hiPrec[1];
                return ra + rb;
            }
        }
        double baseA;
        double baseB;
        double epsilon;
        boolean negative = false;
        if (x < 0.0) {
            x = -x;
            negative = true;
        }
        {
            int intFrac = ((int) (x * 1024.0));
            double tempA = (org.apache.commons.math3.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A[intFrac]) - 1.0;
            double tempB = org.apache.commons.math3.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B[intFrac];
            double temp = tempA + tempB;
            tempB = -((temp - tempA) - tempB);
            tempA = temp;
            temp = tempA * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            baseA = (tempA + temp) - temp;
            baseB = tempB + (tempA - baseA);
            epsilon = x - (intFrac / 1024.0);
        }
        double zb = 0.008336750013465571;
        zb = (zb * epsilon) + 0.041666663879186654;
        zb = (zb * epsilon) + 0.16666666666745392;
        zb = (zb * epsilon) + 0.49999999999999994;
        zb = zb * epsilon;
        zb = zb * epsilon;
        double za = epsilon;
        double temp = za + zb;
        zb = -((temp - za) - zb);
        za = temp;
        temp = za * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        temp = (za + temp) - temp;
        zb += za - temp;
        za = temp;
        double ya = za * baseA;
        temp = ya + (za * baseB);
        double yb = -((temp - ya) - (za * baseB));
        ya = temp;
        temp = ya + (zb * baseA);
        yb += -((temp - ya) - (zb * baseA));
        ya = temp;
        temp = ya + (zb * baseB);
        yb += -((temp - ya) - (zb * baseB));
        ya = temp;
        temp = ya + baseA;
        yb += -((temp - baseA) - ya);
        ya = temp;
        temp = ya + za;
        yb += -((temp - ya) - za);
        ya = temp;
        temp = ya + baseB;
        yb += -((temp - ya) - baseB);
        ya = temp;
        temp = ya + zb;
        yb += -((temp - ya) - zb);
        ya = temp;
        if (negative) {
            double denom = 1.0 + ya;
            double denomr = 1.0 / denom;
            double denomb = (-((denom - 1.0) - ya)) + yb;
            double ratio = ya * denomr;
            temp = ratio * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            final double ra = (ratio + temp) - temp;
            double rb = ratio - ra;
            temp = denom * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            za = (denom + temp) - temp;
            zb = denom - za;
            rb += ((((ya - (za * ra)) - (za * rb)) - (zb * ra)) - (zb * rb)) * denomr;
            rb += yb * denomr;
            rb += (((-ya) * denomb) * denomr) * denomr;
            ya = -ra;
            yb = -rb;
        }
        if (hiPrecOut != null) {
            hiPrecOut[0] = ya;
            hiPrecOut[1] = yb;
        }
        return ya + yb;
    }

    public static double log(final double x) {
        return org.apache.commons.math3.util.FastMath.log(x, null);
    }

    private static double log(final double x, final double[] hiPrec) {
        if (x == 0) {
            return java.lang.Double.NEGATIVE_INFINITY;
        }
        long bits = java.lang.Double.doubleToLongBits(x);
        if (((bits & -9223372036854775808L) != 0) || (x != x)) {
            if (x != 0.0) {
                if (hiPrec != null) {
                    hiPrec[0] = java.lang.Double.NaN;
                }
                return java.lang.Double.NaN;
            }
        }
        if (x == (java.lang.Double.POSITIVE_INFINITY)) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
            }
            return java.lang.Double.POSITIVE_INFINITY;
        }
        int exp = ((int) (bits >> 52)) - 1023;
        if ((bits & 9218868437227405312L) == 0) {
            if (x == 0) {
                if (hiPrec != null) {
                    hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
                }
                return java.lang.Double.NEGATIVE_INFINITY;
            }
            bits <<= 1;
            while ((bits & 4503599627370496L) == 0) {
                exp--;
                bits <<= 1;
            } 
        }
        if ((exp == (-1)) || (exp == 0)) {
            if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
                double xa = x - 1.0;
                double xb = (xa - x) + 1.0;
                double tmp = xa * (org.apache.commons.math3.util.FastMath.HEX_40000000);
                double aa = (xa + tmp) - tmp;
                double ab = xa - aa;
                xa = aa;
                xb = ab;
                double ya = org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math3.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
                double yb = org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math3.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
                for (int i = (org.apache.commons.math3.util.FastMath.LN_QUICK_COEF.length) - 2; i >= 0; i--) {
                    aa = ya * xa;
                    ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                    tmp = aa * (org.apache.commons.math3.util.FastMath.HEX_40000000);
                    ya = (aa + tmp) - tmp;
                    yb = (aa - ya) + ab;
                    aa = ya + (org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[i][0]);
                    ab = yb + (org.apache.commons.math3.util.FastMath.LN_QUICK_COEF[i][1]);
                    tmp = aa * (org.apache.commons.math3.util.FastMath.HEX_40000000);
                    ya = (aa + tmp) - tmp;
                    yb = (aa - ya) + ab;
                }
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math3.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                return ya + yb;
            }
        }
        double[] lnm = org.apache.commons.math3.util.FastMath.lnMant.LN_MANT[((int) ((bits & 4499201580859392L) >> 42))];
        double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math3.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
        double lnza = 0.0;
        double lnzb = 0.0;
        if (hiPrec != null) {
            double tmp = epsilon * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            double aa = (epsilon + tmp) - tmp;
            double ab = epsilon - aa;
            double xa = aa;
            double xb = ab;
            double numer = bits & 4398046511103L;
            double denom = (org.apache.commons.math3.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
            aa = (numer - (xa * denom)) - (xb * denom);
            xb += aa / denom;
            double ya = org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
            double yb = org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF.length) - 2; i >= 0; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math3.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[i][0]);
                ab = yb + (org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF[i][1]);
                tmp = aa * (org.apache.commons.math3.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            lnza = aa + ab;
            lnzb = -((lnza - aa) - ab);
        }else {
            lnza = -0.16624882440418567;
            lnza = (lnza * epsilon) + 0.19999954120254515;
            lnza = (lnza * epsilon) + (-0.2499999997677497);
            lnza = (lnza * epsilon) + 0.3333333333332802;
            lnza = (lnza * epsilon) + (-0.5);
            lnza = (lnza * epsilon) + 1.0;
            lnza = lnza * epsilon;
        }
        double a = (org.apache.commons.math3.util.FastMath.LN_2_A) * exp;
        double b = 0.0;
        double c = a + (lnm[0]);
        double d = -((c - a) - (lnm[0]));
        a = c;
        b = b + d;
        c = a + lnza;
        d = -((c - a) - lnza);
        a = c;
        b = b + d;
        c = a + ((org.apache.commons.math3.util.FastMath.LN_2_B) * exp);
        d = -((c - a) - ((org.apache.commons.math3.util.FastMath.LN_2_B) * exp));
        a = c;
        b = b + d;
        c = a + (lnm[1]);
        d = -((c - a) - (lnm[1]));
        a = c;
        b = b + d;
        c = a + lnzb;
        d = -((c - a) - lnzb);
        a = c;
        b = b + d;
        if (hiPrec != null) {
            hiPrec[0] = a;
            hiPrec[1] = b;
        }
        return a + b;
    }

    public static double log1p(final double x) {
        if (x == (-1)) {
            return x / 0.0;
        }
        if ((x > 0) && ((1 / x) == 0)) {
            return x;
        }
        if ((x > 1.0E-6) || (x < (-1.0E-6))) {
            double xpa = 1.0 + x;
            double xpb = -((xpa - 1.0) - x);
            double[] hiPrec = new double[2];
            final double lores = org.apache.commons.math3.util.FastMath.log(xpa, hiPrec);
            if (java.lang.Double.isInfinite(lores)) {
                return lores;
            }
            double fx1 = xpb / xpa;
            double epsilon = (0.5 * fx1) + 1.0;
            epsilon = epsilon * fx1;
            return (epsilon + (hiPrec[1])) + (hiPrec[0]);
        }
        double y = (x * (org.apache.commons.math3.util.FastMath.F_1_3)) - (org.apache.commons.math3.util.FastMath.F_1_2);
        y = (y * x) + 1.0;
        y = y * x;
        return y;
    }

    public static double log10(final double x) {
        final double[] hiPrec = new double[2];
        final double lores = org.apache.commons.math3.util.FastMath.log(x, hiPrec);
        if (java.lang.Double.isInfinite(lores)) {
            return lores;
        }
        final double tmp = (hiPrec[0]) * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        final double lna = ((hiPrec[0]) + tmp) - tmp;
        final double lnb = ((hiPrec[0]) - lna) + (hiPrec[1]);
        final double rln10a = 0.4342944622039795;
        final double rln10b = 1.9699272335463627E-8;
        return (((rln10b * lnb) + (rln10b * lna)) + (rln10a * lnb)) + (rln10a * lna);
    }

    public static double log(double base, double x) {
        return (org.apache.commons.math3.util.FastMath.log(x)) / (org.apache.commons.math3.util.FastMath.log(base));
    }

    public static double pow(double x, double y) {
        final double[] lns = new double[2];
        if (y == 0.0) {
            return 1.0;
        }
        if (x != x) {
            return x;
        }
        if (x == 0) {
            long bits = java.lang.Double.doubleToLongBits(x);
            if ((bits & -9223372036854775808L) != 0) {
                long yi = ((long) (y));
                if (((y < 0) && (y == yi)) && ((yi & 1) == 1)) {
                    return java.lang.Double.NEGATIVE_INFINITY;
                }
                if (((y > 0) && (y == yi)) && ((yi & 1) == 1)) {
                    return -0.0;
                }
            }
            if (y < 0) {
                return java.lang.Double.POSITIVE_INFINITY;
            }
            if (y > 0) {
                return 0.0;
            }
            return java.lang.Double.NaN;
        }
        if (x == (java.lang.Double.POSITIVE_INFINITY)) {
            if (y != y) {
                return y;
            }
            if (y < 0.0) {
                return 0.0;
            }else {
                return java.lang.Double.POSITIVE_INFINITY;
            }
        }
        if (y == (java.lang.Double.POSITIVE_INFINITY)) {
            if ((x * x) == 1.0) {
                return java.lang.Double.NaN;
            }
            if ((x * x) > 1.0) {
                return java.lang.Double.POSITIVE_INFINITY;
            }else {
                return 0.0;
            }
        }
        if (x == (java.lang.Double.NEGATIVE_INFINITY)) {
            if (y != y) {
                return y;
            }
            if (y < 0) {
                long yi = ((long) (y));
                if ((y == yi) && ((yi & 1) == 1)) {
                    return -0.0;
                }
                return 0.0;
            }
            if (y > 0) {
                long yi = ((long) (y));
                if ((y == yi) && ((yi & 1) == 1)) {
                    return java.lang.Double.NEGATIVE_INFINITY;
                }
                return java.lang.Double.POSITIVE_INFINITY;
            }
        }
        if (y == (java.lang.Double.NEGATIVE_INFINITY)) {
            if ((x * x) == 1.0) {
                return java.lang.Double.NaN;
            }
            if ((x * x) < 1.0) {
                return java.lang.Double.POSITIVE_INFINITY;
            }else {
                return 0.0;
            }
        }
        if (x < 0) {
            if ((y >= (org.apache.commons.math3.util.FastMath.TWO_POWER_52)) || (y <= (-(org.apache.commons.math3.util.FastMath.TWO_POWER_52)))) {
                return org.apache.commons.math3.util.FastMath.pow((-x), y);
            }
            if (y == ((long) (y))) {
                return (((long) (y)) & 1) == 0 ? org.apache.commons.math3.util.FastMath.pow((-x), y) : -(org.apache.commons.math3.util.FastMath.pow((-x), y));
            }else {
                return java.lang.Double.NaN;
            }
        }
        double ya;
        double yb;
        if ((y < 8.0E298) && (y > (-8.0E298))) {
            double tmp1 = y * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            ya = (y + tmp1) - tmp1;
            yb = y - ya;
        }else {
            double tmp1 = y * 9.313225746154785E-10;
            double tmp2 = tmp1 * 9.313225746154785E-10;
            ya = (((tmp1 + tmp2) - tmp1) * (org.apache.commons.math3.util.FastMath.HEX_40000000)) * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            yb = y - ya;
        }
        final double lores = org.apache.commons.math3.util.FastMath.log(x, lns);
        if (java.lang.Double.isInfinite(lores)) {
            return lores;
        }
        double lna = lns[0];
        double lnb = lns[1];
        double tmp1 = lna * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        double tmp2 = (lna + tmp1) - tmp1;
        lnb += lna - tmp2;
        lna = tmp2;
        final double aa = lna * ya;
        final double ab = ((lna * yb) + (lnb * ya)) + (lnb * yb);
        lna = aa + ab;
        lnb = -((lna - aa) - ab);
        double z = 1.0 / 120.0;
        z = (z * lnb) + (1.0 / 24.0);
        z = (z * lnb) + (1.0 / 6.0);
        z = (z * lnb) + 0.5;
        z = (z * lnb) + 1.0;
        z = z * lnb;
        final double result = org.apache.commons.math3.util.FastMath.exp(lna, z, null);
        return result;
    }

    private static double polySine(final double x) {
        double x2 = x * x;
        double p = 2.7553817452272217E-6;
        p = (p * x2) + (-1.9841269659586505E-4);
        p = (p * x2) + 0.008333333333329196;
        p = (p * x2) + (-0.16666666666666666);
        p = (p * x2) * x;
        return p;
    }

    private static double polyCosine(double x) {
        double x2 = x * x;
        double p = 2.479773539153719E-5;
        p = (p * x2) + (-0.0013888888689039883);
        p = (p * x2) + 0.041666666666621166;
        p = (p * x2) + (-0.49999999999999994);
        p *= x2;
        return p;
    }

    private static double sinQ(double xa, double xb) {
        int idx = ((int) ((xa * 8.0) + 0.5));
        final double epsilon = xa - (org.apache.commons.math3.util.FastMath.EIGHTHS[idx]);
        final double sintA = org.apache.commons.math3.util.FastMath.SINE_TABLE_A[idx];
        final double sintB = org.apache.commons.math3.util.FastMath.SINE_TABLE_B[idx];
        final double costA = org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[idx];
        final double costB = org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[idx];
        double sinEpsA = epsilon;
        double sinEpsB = org.apache.commons.math3.util.FastMath.polySine(epsilon);
        final double cosEpsA = 1.0;
        final double cosEpsB = org.apache.commons.math3.util.FastMath.polyCosine(epsilon);
        final double temp = sinEpsA * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        double temp2 = (sinEpsA + temp) - temp;
        sinEpsB += sinEpsA - temp2;
        sinEpsA = temp2;
        double result;
        double a = 0;
        double b = 0;
        double t = sintA;
        double c = a + t;
        double d = -((c - a) - t);
        a = c;
        b = b + d;
        t = costA * sinEpsA;
        c = a + t;
        d = -((c - a) - t);
        a = c;
        b = b + d;
        b = (b + (sintA * cosEpsB)) + (costA * sinEpsB);
        b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB);
        if (xb != 0.0) {
            t = (((costA + costB) * (cosEpsA + cosEpsB)) - ((sintA + sintB) * (sinEpsA + sinEpsB))) * xb;
            c = a + t;
            d = -((c - a) - t);
            a = c;
            b = b + d;
        }
        result = a + b;
        return result;
    }

    private static double cosQ(double xa, double xb) {
        final double pi2a = 1.5707963267948966;
        final double pi2b = 6.123233995736766E-17;
        final double a = pi2a - xa;
        double b = -((a - pi2a) + xa);
        b += pi2b - xb;
        return org.apache.commons.math3.util.FastMath.sinQ(a, b);
    }

    private static double tanQ(double xa, double xb, boolean cotanFlag) {
        int idx = ((int) ((xa * 8.0) + 0.5));
        final double epsilon = xa - (org.apache.commons.math3.util.FastMath.EIGHTHS[idx]);
        final double sintA = org.apache.commons.math3.util.FastMath.SINE_TABLE_A[idx];
        final double sintB = org.apache.commons.math3.util.FastMath.SINE_TABLE_B[idx];
        final double costA = org.apache.commons.math3.util.FastMath.COSINE_TABLE_A[idx];
        final double costB = org.apache.commons.math3.util.FastMath.COSINE_TABLE_B[idx];
        double sinEpsA = epsilon;
        double sinEpsB = org.apache.commons.math3.util.FastMath.polySine(epsilon);
        final double cosEpsA = 1.0;
        final double cosEpsB = org.apache.commons.math3.util.FastMath.polyCosine(epsilon);
        double temp = sinEpsA * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        double temp2 = (sinEpsA + temp) - temp;
        sinEpsB += sinEpsA - temp2;
        sinEpsA = temp2;
        double a = 0;
        double b = 0;
        double t = sintA;
        double c = a + t;
        double d = -((c - a) - t);
        a = c;
        b = b + d;
        t = costA * sinEpsA;
        c = a + t;
        d = -((c - a) - t);
        a = c;
        b = b + d;
        b = (b + (sintA * cosEpsB)) + (costA * sinEpsB);
        b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB);
        double sina = a + b;
        double sinb = -((sina - a) - b);
        a = b = c = d = 0.0;
        t = costA * cosEpsA;
        c = a + t;
        d = -((c - a) - t);
        a = c;
        b = b + d;
        t = (-sintA) * sinEpsA;
        c = a + t;
        d = -((c - a) - t);
        a = c;
        b = b + d;
        b = ((b + (costB * cosEpsA)) + (costA * cosEpsB)) + (costB * cosEpsB);
        b = b - (((sintB * sinEpsA) + (sintA * sinEpsB)) + (sintB * sinEpsB));
        double cosa = a + b;
        double cosb = -((cosa - a) - b);
        if (cotanFlag) {
            double tmp;
            tmp = cosa;
            cosa = sina;
            sina = tmp;
            tmp = cosb;
            cosb = sinb;
            sinb = tmp;
        }
        double est = sina / cosa;
        temp = est * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        double esta = (est + temp) - temp;
        double estb = est - esta;
        temp = cosa * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        double cosaa = (cosa + temp) - temp;
        double cosab = cosa - cosaa;
        double err = ((((sina - (esta * cosaa)) - (esta * cosab)) - (estb * cosaa)) - (estb * cosab)) / cosa;
        err += sinb / cosa;
        err += (((-sina) * cosb) / cosa) / cosa;
        if (xb != 0.0) {
            double xbadj = xb + ((est * est) * xb);
            if (cotanFlag) {
                xbadj = -xbadj;
            }
            err += xbadj;
        }
        return est + err;
    }

    private static void reducePayneHanek(double x, double[] result) {
        long inbits = java.lang.Double.doubleToLongBits(x);
        int exponent = ((int) ((inbits >> 52) & 2047)) - 1023;
        inbits &= 4503599627370495L;
        inbits |= 4503599627370496L;
        exponent++;
        inbits <<= 11;
        long shpi0;
        long shpiA;
        long shpiB;
        int idx = exponent >> 6;
        int shift = exponent - (idx << 6);
        if (shift != 0) {
            shpi0 = (idx == 0) ? 0 : (org.apache.commons.math3.util.FastMath.RECIP_2PI[(idx - 1)]) << shift;
            shpi0 |= (org.apache.commons.math3.util.FastMath.RECIP_2PI[idx]) >>> (64 - shift);
            shpiA = ((org.apache.commons.math3.util.FastMath.RECIP_2PI[idx]) << shift) | ((org.apache.commons.math3.util.FastMath.RECIP_2PI[(idx + 1)]) >>> (64 - shift));
            shpiB = ((org.apache.commons.math3.util.FastMath.RECIP_2PI[(idx + 1)]) << shift) | ((org.apache.commons.math3.util.FastMath.RECIP_2PI[(idx + 2)]) >>> (64 - shift));
        }else {
            shpi0 = (idx == 0) ? 0 : org.apache.commons.math3.util.FastMath.RECIP_2PI[(idx - 1)];
            shpiA = org.apache.commons.math3.util.FastMath.RECIP_2PI[idx];
            shpiB = org.apache.commons.math3.util.FastMath.RECIP_2PI[(idx + 1)];
        }
        long a = inbits >>> 32;
        long b = inbits & 4294967295L;
        long c = shpiA >>> 32;
        long d = shpiA & 4294967295L;
        long ac = a * c;
        long bd = b * d;
        long bc = b * c;
        long ad = a * d;
        long prodB = bd + (ad << 32);
        long prodA = ac + (ad >>> 32);
        boolean bita = (bd & -9223372036854775808L) != 0;
        boolean bitb = (ad & 2147483648L) != 0;
        boolean bitsum = (prodB & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prodA++;
        }
        bita = (prodB & -9223372036854775808L) != 0;
        bitb = (bc & 2147483648L) != 0;
        prodB = prodB + (bc << 32);
        prodA = prodA + (bc >>> 32);
        bitsum = (prodB & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prodA++;
        }
        c = shpiB >>> 32;
        d = shpiB & 4294967295L;
        ac = a * c;
        bc = b * c;
        ad = a * d;
        ac = ac + ((bc + ad) >>> 32);
        bita = (prodB & -9223372036854775808L) != 0;
        bitb = (ac & -9223372036854775808L) != 0;
        prodB += ac;
        bitsum = (prodB & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prodA++;
        }
        c = shpi0 >>> 32;
        d = shpi0 & 4294967295L;
        bd = b * d;
        bc = b * c;
        ad = a * d;
        prodA += bd + ((bc + ad) << 32);
        int intPart = ((int) (prodA >>> 62));
        prodA <<= 2;
        prodA |= prodB >>> 62;
        prodB <<= 2;
        a = prodA >>> 32;
        b = prodA & 4294967295L;
        c = (org.apache.commons.math3.util.FastMath.PI_O_4_BITS[0]) >>> 32;
        d = (org.apache.commons.math3.util.FastMath.PI_O_4_BITS[0]) & 4294967295L;
        ac = a * c;
        bd = b * d;
        bc = b * c;
        ad = a * d;
        long prod2B = bd + (ad << 32);
        long prod2A = ac + (ad >>> 32);
        bita = (bd & -9223372036854775808L) != 0;
        bitb = (ad & 2147483648L) != 0;
        bitsum = (prod2B & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prod2A++;
        }
        bita = (prod2B & -9223372036854775808L) != 0;
        bitb = (bc & 2147483648L) != 0;
        prod2B = prod2B + (bc << 32);
        prod2A = prod2A + (bc >>> 32);
        bitsum = (prod2B & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prod2A++;
        }
        c = (org.apache.commons.math3.util.FastMath.PI_O_4_BITS[1]) >>> 32;
        d = (org.apache.commons.math3.util.FastMath.PI_O_4_BITS[1]) & 4294967295L;
        ac = a * c;
        bc = b * c;
        ad = a * d;
        ac = ac + ((bc + ad) >>> 32);
        bita = (prod2B & -9223372036854775808L) != 0;
        bitb = (ac & -9223372036854775808L) != 0;
        prod2B += ac;
        bitsum = (prod2B & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prod2A++;
        }
        a = prodB >>> 32;
        b = prodB & 4294967295L;
        c = (org.apache.commons.math3.util.FastMath.PI_O_4_BITS[0]) >>> 32;
        d = (org.apache.commons.math3.util.FastMath.PI_O_4_BITS[0]) & 4294967295L;
        ac = a * c;
        bc = b * c;
        ad = a * d;
        ac = ac + ((bc + ad) >>> 32);
        bita = (prod2B & -9223372036854775808L) != 0;
        bitb = (ac & -9223372036854775808L) != 0;
        prod2B += ac;
        bitsum = (prod2B & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prod2A++;
        }
        double tmpA = (prod2A >>> 12) / (org.apache.commons.math3.util.FastMath.TWO_POWER_52);
        double tmpB = ((((prod2A & 4095L) << 40) + (prod2B >>> 24)) / (org.apache.commons.math3.util.FastMath.TWO_POWER_52)) / (org.apache.commons.math3.util.FastMath.TWO_POWER_52);
        double sumA = tmpA + tmpB;
        double sumB = -((sumA - tmpA) - tmpB);
        result[0] = intPart;
        result[1] = sumA * 2.0;
        result[2] = sumB * 2.0;
    }

    public static double sin(double x) {
        boolean negative = false;
        int quadrant = 0;
        double xa;
        double xb = 0.0;
        xa = x;
        if (x < 0) {
            negative = true;
            xa = -xa;
        }
        if (xa == 0.0) {
            long bits = java.lang.Double.doubleToLongBits(x);
            if (bits < 0) {
                return -0.0;
            }
            return 0.0;
        }
        if ((xa != xa) || (xa == (java.lang.Double.POSITIVE_INFINITY))) {
            return java.lang.Double.NaN;
        }
        if (xa > 3294198.0) {
            double[] reduceResults = new double[3];
            org.apache.commons.math3.util.FastMath.reducePayneHanek(xa, reduceResults);
            quadrant = ((int) (reduceResults[0])) & 3;
            xa = reduceResults[1];
            xb = reduceResults[2];
        }else
            if (xa > 1.5707963267948966) {
                final org.apache.commons.math3.util.FastMath.CodyWaite cw = new org.apache.commons.math3.util.FastMath.CodyWaite(xa, xb);
                quadrant = (cw.getK()) & 3;
                xa = cw.getRemA();
                xb = cw.getRemB();
            }

        if (negative) {
            quadrant ^= 2;
        }
        switch (quadrant) {
            case 0 :
                return org.apache.commons.math3.util.FastMath.sinQ(xa, xb);
            case 1 :
                return org.apache.commons.math3.util.FastMath.cosQ(xa, xb);
            case 2 :
                return -(org.apache.commons.math3.util.FastMath.sinQ(xa, xb));
            case 3 :
                return -(org.apache.commons.math3.util.FastMath.cosQ(xa, xb));
            default :
                return java.lang.Double.NaN;
        }
    }

    public static double cos(double x) {
        int quadrant = 0;
        double xa = x;
        if (x < 0) {
            xa = -xa;
        }
        if ((xa != xa) || (xa == (java.lang.Double.POSITIVE_INFINITY))) {
            return java.lang.Double.NaN;
        }
        double xb = 0;
        if (xa > 3294198.0) {
            double[] reduceResults = new double[3];
            org.apache.commons.math3.util.FastMath.reducePayneHanek(xa, reduceResults);
            quadrant = ((int) (reduceResults[0])) & 3;
            xa = reduceResults[1];
            xb = reduceResults[2];
        }else
            if (xa > 1.5707963267948966) {
                final org.apache.commons.math3.util.FastMath.CodyWaite cw = new org.apache.commons.math3.util.FastMath.CodyWaite(xa, xb);
                quadrant = (cw.getK()) & 3;
                xa = cw.getRemA();
                xb = cw.getRemB();
            }

        switch (quadrant) {
            case 0 :
                return org.apache.commons.math3.util.FastMath.cosQ(xa, xb);
            case 1 :
                return -(org.apache.commons.math3.util.FastMath.sinQ(xa, xb));
            case 2 :
                return -(org.apache.commons.math3.util.FastMath.cosQ(xa, xb));
            case 3 :
                return org.apache.commons.math3.util.FastMath.sinQ(xa, xb);
            default :
                return java.lang.Double.NaN;
        }
    }

    public static double tan(double x) {
        boolean negative = false;
        int quadrant = 0;
        double xa = x;
        if (x < 0) {
            negative = true;
            xa = -xa;
        }
        if (xa == 0.0) {
            long bits = java.lang.Double.doubleToLongBits(x);
            if (bits < 0) {
                return -0.0;
            }
            return 0.0;
        }
        if ((xa != xa) || (xa == (java.lang.Double.POSITIVE_INFINITY))) {
            return java.lang.Double.NaN;
        }
        double xb = 0;
        if (xa > 3294198.0) {
            double[] reduceResults = new double[3];
            org.apache.commons.math3.util.FastMath.reducePayneHanek(xa, reduceResults);
            quadrant = ((int) (reduceResults[0])) & 3;
            xa = reduceResults[1];
            xb = reduceResults[2];
        }else
            if (xa > 1.5707963267948966) {
                final org.apache.commons.math3.util.FastMath.CodyWaite cw = new org.apache.commons.math3.util.FastMath.CodyWaite(xa, xb);
                quadrant = (cw.getK()) & 3;
                xa = cw.getRemA();
                xb = cw.getRemB();
            }

        if (xa > 1.5) {
            final double pi2a = 1.5707963267948966;
            final double pi2b = 6.123233995736766E-17;
            final double a = pi2a - xa;
            double b = -((a - pi2a) + xa);
            b += pi2b - xb;
            xa = a + b;
            xb = -((xa - a) - b);
            quadrant ^= 1;
            negative ^= true;
        }
        double result;
        if ((quadrant & 1) == 0) {
            result = org.apache.commons.math3.util.FastMath.tanQ(xa, xb, false);
        }else {
            result = -(org.apache.commons.math3.util.FastMath.tanQ(xa, xb, true));
        }
        if (negative) {
            result = -result;
        }
        return result;
    }

    public static double atan(double x) {
        return org.apache.commons.math3.util.FastMath.atan(x, 0.0, false);
    }

    private static double atan(double xa, double xb, boolean leftPlane) {
        boolean negate = false;
        int idx;
        if (xa == 0.0) {
            return leftPlane ? org.apache.commons.math3.util.FastMath.copySign(java.lang.Math.PI, xa) : xa;
        }
        if (xa < 0) {
            xa = -xa;
            xb = -xb;
            negate = true;
        }
        if (xa > 1.633123935319537E16) {
            return negate ^ leftPlane ? (-(java.lang.Math.PI)) * (org.apache.commons.math3.util.FastMath.F_1_2) : (java.lang.Math.PI) * (org.apache.commons.math3.util.FastMath.F_1_2);
        }
        if (xa < 1) {
            idx = ((int) ((((((-1.7168146928204135) * xa) * xa) + 8.0) * xa) + 0.5));
        }else {
            final double oneOverXa = 1 / xa;
            idx = ((int) ((-(((((-1.7168146928204135) * oneOverXa) * oneOverXa) + 8.0) * oneOverXa)) + 13.07));
        }
        double epsA = xa - (org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[idx]);
        double epsB = -((epsA - xa) + (org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[idx]));
        epsB += xb - (org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[idx]);
        double temp = epsA + epsB;
        epsB = -((temp - epsA) - epsB);
        epsA = temp;
        temp = xa * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        double ya = (xa + temp) - temp;
        double yb = (xb + xa) - ya;
        xa = ya;
        xb += yb;
        if (idx == 0) {
            final double denom = 1.0 / (1.0 + ((xa + xb) * ((org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[idx]) + (org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[idx]))));
            ya = epsA * denom;
            yb = epsB * denom;
        }else {
            double temp2 = xa * (org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[idx]);
            double za = 1.0 + temp2;
            double zb = -((za - 1.0) - temp2);
            temp2 = (xb * (org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A[idx])) + (xa * (org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[idx]));
            temp = za + temp2;
            zb += -((temp - za) - temp2);
            za = temp;
            zb += xb * (org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B[idx]);
            ya = epsA / za;
            temp = ya * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            final double yaa = (ya + temp) - temp;
            final double yab = ya - yaa;
            temp = za * (org.apache.commons.math3.util.FastMath.HEX_40000000);
            final double zaa = (za + temp) - temp;
            final double zab = za - zaa;
            yb = ((((epsA - (yaa * zaa)) - (yaa * zab)) - (yab * zaa)) - (yab * zab)) / za;
            yb += (((-epsA) * zb) / za) / za;
            yb += epsB / za;
        }
        epsA = ya;
        epsB = yb;
        final double epsA2 = epsA * epsA;
        yb = 0.07490822288864472;
        yb = (yb * epsA2) + (-0.09088450866185192);
        yb = (yb * epsA2) + 0.11111095942313305;
        yb = (yb * epsA2) + (-0.1428571423679182);
        yb = (yb * epsA2) + 0.19999999999923582;
        yb = (yb * epsA2) + (-0.33333333333333287);
        yb = (yb * epsA2) * epsA;
        ya = epsA;
        temp = ya + yb;
        yb = -((temp - ya) - yb);
        ya = temp;
        yb += epsB / (1.0 + (epsA * epsA));
        double za = (org.apache.commons.math3.util.FastMath.EIGHTHS[idx]) + ya;
        double zb = -((za - (org.apache.commons.math3.util.FastMath.EIGHTHS[idx])) - ya);
        temp = za + yb;
        zb += -((temp - za) - yb);
        za = temp;
        double result = za + zb;
        double resultb = -((result - za) - zb);
        if (leftPlane) {
            final double pia = 1.5707963267948966 * 2;
            final double pib = 6.123233995736766E-17 * 2;
            za = pia - result;
            zb = -((za - pia) + result);
            zb += pib - resultb;
            result = za + zb;
            resultb = -((result - za) - zb);
        }
        if (negate ^ leftPlane) {
            result = -result;
        }
        return result;
    }

    public static double atan2(double y, double x) {
        if ((x != x) || (y != y)) {
            return java.lang.Double.NaN;
        }
        if (y == 0) {
            final double result = x * y;
            final double invx = 1.0 / x;
            final double invy = 1.0 / y;
            if (invx == 0) {
                if (x > 0) {
                    return y;
                }else {
                    return org.apache.commons.math3.util.FastMath.copySign(java.lang.Math.PI, y);
                }
            }
            if ((x < 0) || (invx < 0)) {
                if ((y < 0) || (invy < 0)) {
                    return -(java.lang.Math.PI);
                }else {
                    return java.lang.Math.PI;
                }
            }else {
                return result;
            }
        }
        if (y == (java.lang.Double.POSITIVE_INFINITY)) {
            if (x == (java.lang.Double.POSITIVE_INFINITY)) {
                return (java.lang.Math.PI) * (org.apache.commons.math3.util.FastMath.F_1_4);
            }
            if (x == (java.lang.Double.NEGATIVE_INFINITY)) {
                return (java.lang.Math.PI) * (org.apache.commons.math3.util.FastMath.F_3_4);
            }
            return (java.lang.Math.PI) * (org.apache.commons.math3.util.FastMath.F_1_2);
        }
        if (y == (java.lang.Double.NEGATIVE_INFINITY)) {
            if (x == (java.lang.Double.POSITIVE_INFINITY)) {
                return (-(java.lang.Math.PI)) * (org.apache.commons.math3.util.FastMath.F_1_4);
            }
            if (x == (java.lang.Double.NEGATIVE_INFINITY)) {
                return (-(java.lang.Math.PI)) * (org.apache.commons.math3.util.FastMath.F_3_4);
            }
            return (-(java.lang.Math.PI)) * (org.apache.commons.math3.util.FastMath.F_1_2);
        }
        if (x == (java.lang.Double.POSITIVE_INFINITY)) {
            if ((y > 0) || ((1 / y) > 0)) {
                return 0.0;
            }
            if ((y < 0) || ((1 / y) < 0)) {
                return -0.0;
            }
        }
        if (x == (java.lang.Double.NEGATIVE_INFINITY)) {
            if ((y > 0.0) || ((1 / y) > 0.0)) {
                return java.lang.Math.PI;
            }
            if ((y < 0) || ((1 / y) < 0)) {
                return -(java.lang.Math.PI);
            }
        }
        if (x == 0) {
            if ((y > 0) || ((1 / y) > 0)) {
                return (java.lang.Math.PI) * (org.apache.commons.math3.util.FastMath.F_1_2);
            }
            if ((y < 0) || ((1 / y) < 0)) {
                return (-(java.lang.Math.PI)) * (org.apache.commons.math3.util.FastMath.F_1_2);
            }
        }
        final double r = y / x;
        if (java.lang.Double.isInfinite(r)) {
            return org.apache.commons.math3.util.FastMath.atan(r, 0, (x < 0));
        }
        double ra = org.apache.commons.math3.util.FastMath.doubleHighPart(r);
        double rb = r - ra;
        final double xa = org.apache.commons.math3.util.FastMath.doubleHighPart(x);
        final double xb = x - xa;
        rb += ((((y - (ra * xa)) - (ra * xb)) - (rb * xa)) - (rb * xb)) / x;
        final double temp = ra + rb;
        rb = -((temp - ra) - rb);
        ra = temp;
        if (ra == 0) {
            ra = org.apache.commons.math3.util.FastMath.copySign(0.0, y);
        }
        final double result = org.apache.commons.math3.util.FastMath.atan(ra, rb, (x < 0));
        return result;
    }

    public static double asin(double x) {
        if (x != x) {
            return java.lang.Double.NaN;
        }
        if ((x > 1.0) || (x < (-1.0))) {
            return java.lang.Double.NaN;
        }
        if (x == 1.0) {
            return (java.lang.Math.PI) / 2.0;
        }
        if (x == (-1.0)) {
            return (-(java.lang.Math.PI)) / 2.0;
        }
        if (x == 0.0) {
            return x;
        }
        double temp = x * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        final double xa = (x + temp) - temp;
        final double xb = x - xa;
        double ya = xa * xa;
        double yb = ((xa * xb) * 2.0) + (xb * xb);
        ya = -ya;
        yb = -yb;
        double za = 1.0 + ya;
        double zb = -((za - 1.0) - ya);
        temp = za + yb;
        zb += -((temp - za) - yb);
        za = temp;
        double y;
        y = org.apache.commons.math3.util.FastMath.sqrt(za);
        temp = y * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        ya = (y + temp) - temp;
        yb = y - ya;
        yb += (((za - (ya * ya)) - ((2 * ya) * yb)) - (yb * yb)) / (2.0 * y);
        double dx = zb / (2.0 * y);
        double r = x / y;
        temp = r * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        double ra = (r + temp) - temp;
        double rb = r - ra;
        rb += ((((x - (ra * ya)) - (ra * yb)) - (rb * ya)) - (rb * yb)) / y;
        rb += (((-x) * dx) / y) / y;
        temp = ra + rb;
        rb = -((temp - ra) - rb);
        ra = temp;
        return org.apache.commons.math3.util.FastMath.atan(ra, rb, false);
    }

    public static double acos(double x) {
        if (x != x) {
            return java.lang.Double.NaN;
        }
        if ((x > 1.0) || (x < (-1.0))) {
            return java.lang.Double.NaN;
        }
        if (x == (-1.0)) {
            return java.lang.Math.PI;
        }
        if (x == 1.0) {
            return 0.0;
        }
        if (x == 0) {
            return (java.lang.Math.PI) / 2.0;
        }
        double temp = x * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        final double xa = (x + temp) - temp;
        final double xb = x - xa;
        double ya = xa * xa;
        double yb = ((xa * xb) * 2.0) + (xb * xb);
        ya = -ya;
        yb = -yb;
        double za = 1.0 + ya;
        double zb = -((za - 1.0) - ya);
        temp = za + yb;
        zb += -((temp - za) - yb);
        za = temp;
        double y = org.apache.commons.math3.util.FastMath.sqrt(za);
        temp = y * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        ya = (y + temp) - temp;
        yb = y - ya;
        yb += (((za - (ya * ya)) - ((2 * ya) * yb)) - (yb * yb)) / (2.0 * y);
        yb += zb / (2.0 * y);
        y = ya + yb;
        yb = -((y - ya) - yb);
        double r = y / x;
        if (java.lang.Double.isInfinite(r)) {
            return (java.lang.Math.PI) / 2;
        }
        double ra = org.apache.commons.math3.util.FastMath.doubleHighPart(r);
        double rb = r - ra;
        rb += ((((y - (ra * xa)) - (ra * xb)) - (rb * xa)) - (rb * xb)) / x;
        rb += yb / x;
        temp = ra + rb;
        rb = -((temp - ra) - rb);
        ra = temp;
        return org.apache.commons.math3.util.FastMath.atan(ra, rb, (x < 0));
    }

    public static double cbrt(double x) {
        long inbits = java.lang.Double.doubleToLongBits(x);
        int exponent = ((int) ((inbits >> 52) & 2047)) - 1023;
        boolean subnormal = false;
        if (exponent == (-1023)) {
            if (x == 0) {
                return x;
            }
            subnormal = true;
            x *= 1.8014398509481984E16;
            inbits = java.lang.Double.doubleToLongBits(x);
            exponent = ((int) ((inbits >> 52) & 2047)) - 1023;
        }
        if (exponent == 1024) {
            return x;
        }
        int exp3 = exponent / 3;
        double p2 = java.lang.Double.longBitsToDouble(((inbits & -9223372036854775808L) | (((long) ((exp3 + 1023) & 2047)) << 52)));
        final double mant = java.lang.Double.longBitsToDouble(((inbits & 4503599627370495L) | 4607182418800017408L));
        double est = -0.010714690733195933;
        est = (est * mant) + 0.0875862700108075;
        est = (est * mant) + (-0.3058015757857271);
        est = (est * mant) + 0.7249995199969751;
        est = (est * mant) + 0.5039018405998233;
        est *= org.apache.commons.math3.util.FastMath.CBRTTWO[((exponent % 3) + 2)];
        final double xs = x / ((p2 * p2) * p2);
        est += (xs - ((est * est) * est)) / ((3 * est) * est);
        est += (xs - ((est * est) * est)) / ((3 * est) * est);
        double temp = est * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        double ya = (est + temp) - temp;
        double yb = est - ya;
        double za = ya * ya;
        double zb = ((ya * yb) * 2.0) + (yb * yb);
        temp = za * (org.apache.commons.math3.util.FastMath.HEX_40000000);
        double temp2 = (za + temp) - temp;
        zb += za - temp2;
        za = temp2;
        zb = ((za * yb) + (ya * zb)) + (zb * yb);
        za = za * ya;
        double na = xs - za;
        double nb = -((na - xs) + za);
        nb -= zb;
        est += (na + nb) / ((3 * est) * est);
        est *= p2;
        if (subnormal) {
            est *= 3.814697265625E-6;
        }
        return est;
    }

    public static double toRadians(double x) {
        if ((java.lang.Double.isInfinite(x)) || (x == 0.0)) {
            return x;
        }
        final double facta = 0.01745329052209854;
        final double factb = 1.997844754509471E-9;
        double xa = org.apache.commons.math3.util.FastMath.doubleHighPart(x);
        double xb = x - xa;
        double result = (((xb * factb) + (xb * facta)) + (xa * factb)) + (xa * facta);
        if (result == 0) {
            result = result * x;
        }
        return result;
    }

    public static double toDegrees(double x) {
        if ((java.lang.Double.isInfinite(x)) || (x == 0.0)) {
            return x;
        }
        final double facta = 57.2957763671875;
        final double factb = 3.145894820876798E-6;
        double xa = org.apache.commons.math3.util.FastMath.doubleHighPart(x);
        double xb = x - xa;
        return (((xb * factb) + (xb * facta)) + (xa * factb)) + (xa * facta);
    }

    public static int abs(final int x) {
        return x < 0 ? -x : x;
    }

    public static long abs(final long x) {
        return x < 0L ? -x : x;
    }

    public static float abs(final float x) {
        return x < 0.0F ? -x : x == 0.0F ? 0.0F : x;
    }

    public static double abs(double x) {
        return x < 0.0 ? -x : x == 0.0 ? 0.0 : x;
    }

    public static double ulp(double x) {
        if (java.lang.Double.isInfinite(x)) {
            return java.lang.Double.POSITIVE_INFINITY;
        }
        return org.apache.commons.math3.util.FastMath.abs((x - (java.lang.Double.longBitsToDouble(((java.lang.Double.doubleToLongBits(x)) ^ 1)))));
    }

    public static float ulp(float x) {
        if (java.lang.Float.isInfinite(x)) {
            return java.lang.Float.POSITIVE_INFINITY;
        }
        return org.apache.commons.math3.util.FastMath.abs((x - (java.lang.Float.intBitsToFloat(((java.lang.Float.floatToIntBits(x)) ^ 1)))));
    }

    public static double scalb(final double d, final int n) {
        if ((n > (-1023)) && (n < 1024)) {
            return d * (java.lang.Double.longBitsToDouble((((long) (n + 1023)) << 52)));
        }
        if (((java.lang.Double.isNaN(d)) || (java.lang.Double.isInfinite(d))) || (d == 0)) {
            return d;
        }
        if (n < (-2098)) {
            return d > 0 ? 0.0 : -0.0;
        }
        if (n > 2097) {
            return d > 0 ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;
        }
        final long bits = java.lang.Double.doubleToLongBits(d);
        final long sign = bits & -9223372036854775808L;
        int exponent = ((int) (bits >>> 52)) & 2047;
        long mantissa = bits & 4503599627370495L;
        int scaledExponent = exponent + n;
        if (n < 0) {
            if (scaledExponent > 0) {
                return java.lang.Double.longBitsToDouble(((sign | (((long) (scaledExponent)) << 52)) | mantissa));
            }else
                if (scaledExponent > (-53)) {
                    mantissa = mantissa | (1L << 52);
                    final long mostSignificantLostBit = mantissa & (1L << (-scaledExponent));
                    mantissa = mantissa >>> (1 - scaledExponent);
                    if (mostSignificantLostBit != 0) {
                        mantissa++;
                    }
                    return java.lang.Double.longBitsToDouble((sign | mantissa));
                }else {
                    return sign == 0L ? 0.0 : -0.0;
                }

        }else {
            if (exponent == 0) {
                while ((mantissa >>> 52) != 1) {
                    mantissa = mantissa << 1;
                    --scaledExponent;
                } 
                ++scaledExponent;
                mantissa = mantissa & 4503599627370495L;
                if (scaledExponent < 2047) {
                    return java.lang.Double.longBitsToDouble(((sign | (((long) (scaledExponent)) << 52)) | mantissa));
                }else {
                    return sign == 0L ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;
                }
            }else
                if (scaledExponent < 2047) {
                    return java.lang.Double.longBitsToDouble(((sign | (((long) (scaledExponent)) << 52)) | mantissa));
                }else {
                    return sign == 0L ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;
                }

        }
    }

    public static float scalb(final float f, final int n) {
        if ((n > (-127)) && (n < 128)) {
            return f * (java.lang.Float.intBitsToFloat(((n + 127) << 23)));
        }
        if (((java.lang.Float.isNaN(f)) || (java.lang.Float.isInfinite(f))) || (f == 0.0F)) {
            return f;
        }
        if (n < (-277)) {
            return f > 0 ? 0.0F : -0.0F;
        }
        if (n > 276) {
            return f > 0 ? java.lang.Float.POSITIVE_INFINITY : java.lang.Float.NEGATIVE_INFINITY;
        }
        final int bits = java.lang.Float.floatToIntBits(f);
        final int sign = bits & -2147483648;
        int exponent = (bits >>> 23) & 255;
        int mantissa = bits & 8388607;
        int scaledExponent = exponent + n;
        if (n < 0) {
            if (scaledExponent > 0) {
                return java.lang.Float.intBitsToFloat(((sign | (scaledExponent << 23)) | mantissa));
            }else
                if (scaledExponent > (-24)) {
                    mantissa = mantissa | (1 << 23);
                    final int mostSignificantLostBit = mantissa & (1 << (-scaledExponent));
                    mantissa = mantissa >>> (1 - scaledExponent);
                    if (mostSignificantLostBit != 0) {
                        mantissa++;
                    }
                    return java.lang.Float.intBitsToFloat((sign | mantissa));
                }else {
                    return sign == 0 ? 0.0F : -0.0F;
                }

        }else {
            if (exponent == 0) {
                while ((mantissa >>> 23) != 1) {
                    mantissa = mantissa << 1;
                    --scaledExponent;
                } 
                ++scaledExponent;
                mantissa = mantissa & 8388607;
                if (scaledExponent < 255) {
                    return java.lang.Float.intBitsToFloat(((sign | (scaledExponent << 23)) | mantissa));
                }else {
                    return sign == 0 ? java.lang.Float.POSITIVE_INFINITY : java.lang.Float.NEGATIVE_INFINITY;
                }
            }else
                if (scaledExponent < 255) {
                    return java.lang.Float.intBitsToFloat(((sign | (scaledExponent << 23)) | mantissa));
                }else {
                    return sign == 0 ? java.lang.Float.POSITIVE_INFINITY : java.lang.Float.NEGATIVE_INFINITY;
                }

        }
    }

    public static double nextAfter(double d, double direction) {
        if ((java.lang.Double.isNaN(d)) || (java.lang.Double.isNaN(direction))) {
            return java.lang.Double.NaN;
        }else
            if (d == direction) {
                return direction;
            }else
                if (java.lang.Double.isInfinite(d)) {
                    return d < 0 ? -(java.lang.Double.MAX_VALUE) : java.lang.Double.MAX_VALUE;
                }else
                    if (d == 0) {
                        return direction < 0 ? -(java.lang.Double.MIN_VALUE) : java.lang.Double.MIN_VALUE;
                    }



        final long bits = java.lang.Double.doubleToLongBits(d);
        final long sign = bits & -9223372036854775808L;
        if ((direction < d) ^ (sign == 0L)) {
            return java.lang.Double.longBitsToDouble((sign | ((bits & 9223372036854775807L) + 1)));
        }else {
            return java.lang.Double.longBitsToDouble((sign | ((bits & 9223372036854775807L) - 1)));
        }
    }

    public static float nextAfter(final float f, final double direction) {
        if ((java.lang.Double.isNaN(f)) || (java.lang.Double.isNaN(direction))) {
            return java.lang.Float.NaN;
        }else
            if (f == direction) {
                return ((float) (direction));
            }else
                if (java.lang.Float.isInfinite(f)) {
                    return f < 0.0F ? -(java.lang.Float.MAX_VALUE) : java.lang.Float.MAX_VALUE;
                }else
                    if (f == 0.0F) {
                        return direction < 0 ? -(java.lang.Float.MIN_VALUE) : java.lang.Float.MIN_VALUE;
                    }



        final int bits = java.lang.Float.floatToIntBits(f);
        final int sign = bits & -2147483648;
        if ((direction < f) ^ (sign == 0)) {
            return java.lang.Float.intBitsToFloat((sign | ((bits & 2147483647) + 1)));
        }else {
            return java.lang.Float.intBitsToFloat((sign | ((bits & 2147483647) - 1)));
        }
    }

    public static double floor(double x) {
        long y;
        if (x != x) {
            return x;
        }
        if ((x >= (org.apache.commons.math3.util.FastMath.TWO_POWER_52)) || (x <= (-(org.apache.commons.math3.util.FastMath.TWO_POWER_52)))) {
            return x;
        }
        boolean spoonDefaultValue = false;
        try {
            spoonDefaultValue = true;
        } catch (java.lang.Exception __NopolProcessorException) {
        }
        boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
        if (fr.inria.lille.commons.trace.RuntimeValues.instance(77).isEnabled()) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectionStarts();
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.EXP_FRAC_TABLE_LEN",org.apache.commons.math3.util.FastMath.EXP_FRAC_TABLE_LEN);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX",org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_1_13",org.apache.commons.math3.util.FastMath.F_1_13);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_1_11",org.apache.commons.math3.util.FastMath.F_1_11);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_1_17",org.apache.commons.math3.util.FastMath.F_1_17);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_11_12",org.apache.commons.math3.util.FastMath.F_11_12);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_13_14",org.apache.commons.math3.util.FastMath.F_13_14);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_1_15",org.apache.commons.math3.util.FastMath.F_1_15);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_1_2",org.apache.commons.math3.util.FastMath.F_1_2);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_15_16",org.apache.commons.math3.util.FastMath.F_15_16);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.EIGHTHS",org.apache.commons.math3.util.FastMath.EIGHTHS);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_1_3",org.apache.commons.math3.util.FastMath.F_1_3);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.LN_2_A",org.apache.commons.math3.util.FastMath.LN_2_A);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_1_4",org.apache.commons.math3.util.FastMath.F_1_4);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.LN_2_B",org.apache.commons.math3.util.FastMath.LN_2_B);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_1_5",org.apache.commons.math3.util.FastMath.F_1_5);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_3_4",org.apache.commons.math3.util.FastMath.F_3_4);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.PI_O_4_BITS",org.apache.commons.math3.util.FastMath.PI_O_4_BITS);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_1_7",org.apache.commons.math3.util.FastMath.F_1_7);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.RECIP_2PI",org.apache.commons.math3.util.FastMath.RECIP_2PI);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.HEX_40000000",org.apache.commons.math3.util.FastMath.HEX_40000000);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_1_9",org.apache.commons.math3.util.FastMath.F_1_9);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_5_6",org.apache.commons.math3.util.FastMath.F_5_6);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.LN_MANT_LEN",org.apache.commons.math3.util.FastMath.LN_MANT_LEN);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_7_8",org.apache.commons.math3.util.FastMath.F_7_8);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.COSINE_TABLE_B",org.apache.commons.math3.util.FastMath.COSINE_TABLE_B);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.MASK_30BITS",org.apache.commons.math3.util.FastMath.MASK_30BITS);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME",org.apache.commons.math3.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.TWO_POWER_52",org.apache.commons.math3.util.FastMath.TWO_POWER_52);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.PI",org.apache.commons.math3.util.FastMath.PI);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.COSINE_TABLE_A",org.apache.commons.math3.util.FastMath.COSINE_TABLE_A);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.SINE_TABLE_A",org.apache.commons.math3.util.FastMath.SINE_TABLE_A);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.E",org.apache.commons.math3.util.FastMath.E);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_LEN",org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_LEN);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.SINE_TABLE_B",org.apache.commons.math3.util.FastMath.SINE_TABLE_B);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("x",x);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.LN_QUICK_COEF",org.apache.commons.math3.util.FastMath.LN_QUICK_COEF);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.CBRTTWO",org.apache.commons.math3.util.FastMath.CBRTTWO);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.F_9_10",org.apache.commons.math3.util.FastMath.F_9_10);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectInput("org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN",org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN);} catch (Exception ex1) {ex1.printStackTrace();};
            fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectOutput(runtimeAngelicValue);
            fr.inria.lille.commons.trace.RuntimeValues.instance(77).collectionEnds();
        }
        if (runtimeAngelicValue)
            y = ((long) (x));

        if ((x < 0) && (y != x)) {
            y--;
        }
        if (y == 0) {
            return x * y;
        }
        return y;
    }

    public static double ceil(double x) {
        double y;
        if (x != x) {
            return x;
        }
        y = org.apache.commons.math3.util.FastMath.floor(x);
        if (y == x) {
            return y;
        }
        y += 1.0;
        if (y == 0) {
            return x * y;
        }
        return y;
    }

    public static double rint(double x) {
        double y = org.apache.commons.math3.util.FastMath.floor(x);
        double d = x - y;
        if (d > 0.5) {
            if (y == (-1.0)) {
                return -0.0;
            }
            return y + 1.0;
        }
        if (d < 0.5) {
            return y;
        }
        long z = ((long) (y));
        return (z & 1) == 0 ? y : y + 1.0;
    }

    public static long round(double x) {
        return ((long) (org.apache.commons.math3.util.FastMath.floor((x + 0.5))));
    }

    public static int round(final float x) {
        return ((int) (org.apache.commons.math3.util.FastMath.floor((x + 0.5F))));
    }

    public static int min(final int a, final int b) {
        return a <= b ? a : b;
    }

    public static long min(final long a, final long b) {
        return a <= b ? a : b;
    }

    public static float min(final float a, final float b) {
        if (a > b) {
            return b;
        }
        if (a < b) {
            return a;
        }
        if (a != b) {
            return java.lang.Float.NaN;
        }
        int bits = java.lang.Float.floatToRawIntBits(a);
        if (bits == -2147483648) {
            return a;
        }
        return b;
    }

    public static double min(final double a, final double b) {
        if (a > b) {
            return b;
        }
        if (a < b) {
            return a;
        }
        if (a != b) {
            return java.lang.Double.NaN;
        }
        long bits = java.lang.Double.doubleToRawLongBits(a);
        if (bits == -9223372036854775808L) {
            return a;
        }
        return b;
    }

    public static int max(final int a, final int b) {
        return a <= b ? b : a;
    }

    public static long max(final long a, final long b) {
        return a <= b ? b : a;
    }

    public static float max(final float a, final float b) {
        if (a > b) {
            return a;
        }
        if (a < b) {
            return b;
        }
        if (a != b) {
            return java.lang.Float.NaN;
        }
        int bits = java.lang.Float.floatToRawIntBits(a);
        if (bits == -2147483648) {
            return b;
        }
        return a;
    }

    public static double max(final double a, final double b) {
        if (a > b) {
            return a;
        }
        if (a < b) {
            return b;
        }
        if (a != b) {
            return java.lang.Double.NaN;
        }
        long bits = java.lang.Double.doubleToRawLongBits(a);
        if (bits == -9223372036854775808L) {
            return b;
        }
        return a;
    }

    public static double hypot(final double x, final double y) {
        if ((java.lang.Double.isInfinite(x)) || (java.lang.Double.isInfinite(y))) {
            return java.lang.Double.POSITIVE_INFINITY;
        }else
            if ((java.lang.Double.isNaN(x)) || (java.lang.Double.isNaN(y))) {
                return java.lang.Double.NaN;
            }else {
                final int expX = org.apache.commons.math3.util.FastMath.getExponent(x);
                final int expY = org.apache.commons.math3.util.FastMath.getExponent(y);
                if (expX > (expY + 27)) {
                    return org.apache.commons.math3.util.FastMath.abs(x);
                }else
                    if (expY > (expX + 27)) {
                        return org.apache.commons.math3.util.FastMath.abs(y);
                    }else {
                        final int middleExp = (expX + expY) / 2;
                        final double scaledX = org.apache.commons.math3.util.FastMath.scalb(x, (-middleExp));
                        final double scaledY = org.apache.commons.math3.util.FastMath.scalb(y, (-middleExp));
                        final double scaledH = org.apache.commons.math3.util.FastMath.sqrt(((scaledX * scaledX) + (scaledY * scaledY)));
                        return org.apache.commons.math3.util.FastMath.scalb(scaledH, middleExp);
                    }

            }

    }

    public static double IEEEremainder(double dividend, double divisor) {
        return java.lang.StrictMath.IEEEremainder(dividend, divisor);
    }

    public static double copySign(double magnitude, double sign) {
        long m = java.lang.Double.doubleToLongBits(magnitude);
        long s = java.lang.Double.doubleToLongBits(sign);
        if (((m >= 0) && (s >= 0)) || ((m < 0) && (s < 0))) {
            return magnitude;
        }
        return -magnitude;
    }

    public static float copySign(float magnitude, float sign) {
        int m = java.lang.Float.floatToIntBits(magnitude);
        int s = java.lang.Float.floatToIntBits(sign);
        if (((m >= 0) && (s >= 0)) || ((m < 0) && (s < 0))) {
            return magnitude;
        }
        return -magnitude;
    }

    public static int getExponent(final double d) {
        return ((int) (((java.lang.Double.doubleToLongBits(d)) >>> 52) & 2047)) - 1023;
    }

    public static int getExponent(final float f) {
        return (((java.lang.Float.floatToIntBits(f)) >>> 23) & 255) - 127;
    }

    public static void main(java.lang.String[] a) {
        java.io.PrintStream out = java.lang.System.out;
        org.apache.commons.math3.util.FastMathCalc.printarray(out, "EXP_INT_TABLE_A", org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_LEN, org.apache.commons.math3.util.FastMath.ExpIntTable.EXP_INT_TABLE_A);
        org.apache.commons.math3.util.FastMathCalc.printarray(out, "EXP_INT_TABLE_B", org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_LEN, org.apache.commons.math3.util.FastMath.ExpIntTable.EXP_INT_TABLE_B);
        org.apache.commons.math3.util.FastMathCalc.printarray(out, "EXP_FRAC_TABLE_A", org.apache.commons.math3.util.FastMath.EXP_FRAC_TABLE_LEN, org.apache.commons.math3.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A);
        org.apache.commons.math3.util.FastMathCalc.printarray(out, "EXP_FRAC_TABLE_B", org.apache.commons.math3.util.FastMath.EXP_FRAC_TABLE_LEN, org.apache.commons.math3.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B);
        org.apache.commons.math3.util.FastMathCalc.printarray(out, "LN_MANT", org.apache.commons.math3.util.FastMath.LN_MANT_LEN, org.apache.commons.math3.util.FastMath.lnMant.LN_MANT);
        org.apache.commons.math3.util.FastMathCalc.printarray(out, "SINE_TABLE_A", org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math3.util.FastMath.SINE_TABLE_A);
        org.apache.commons.math3.util.FastMathCalc.printarray(out, "SINE_TABLE_B", org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math3.util.FastMath.SINE_TABLE_B);
        org.apache.commons.math3.util.FastMathCalc.printarray(out, "COSINE_TABLE_A", org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math3.util.FastMath.COSINE_TABLE_A);
        org.apache.commons.math3.util.FastMathCalc.printarray(out, "COSINE_TABLE_B", org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math3.util.FastMath.COSINE_TABLE_B);
        org.apache.commons.math3.util.FastMathCalc.printarray(out, "TANGENT_TABLE_A", org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A);
        org.apache.commons.math3.util.FastMathCalc.printarray(out, "TANGENT_TABLE_B", org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B);
    }

    private static class ExpIntTable {
        private static final double[] EXP_INT_TABLE_A;

        private static final double[] EXP_INT_TABLE_B;

        static {
            if (org.apache.commons.math3.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {
                EXP_INT_TABLE_A = new double[org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_LEN];
                EXP_INT_TABLE_B = new double[org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_LEN];
                final double[] tmp = new double[2];
                final double[] recip = new double[2];
                for (int i = 0; i < (org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX); i++) {
                    org.apache.commons.math3.util.FastMathCalc.expint(i, tmp);
                    org.apache.commons.math3.util.FastMath.ExpIntTable.EXP_INT_TABLE_A[(i + (org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX))] = tmp[0];
                    org.apache.commons.math3.util.FastMath.ExpIntTable.EXP_INT_TABLE_B[(i + (org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX))] = tmp[1];
                    if (i != 0) {
                        org.apache.commons.math3.util.FastMathCalc.splitReciprocal(tmp, recip);
                        org.apache.commons.math3.util.FastMath.ExpIntTable.EXP_INT_TABLE_A[((org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX) - i)] = recip[0];
                        org.apache.commons.math3.util.FastMath.ExpIntTable.EXP_INT_TABLE_B[((org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX) - i)] = recip[1];
                    }
                }
            }else {
                EXP_INT_TABLE_A = org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA();
                EXP_INT_TABLE_B = org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB();
            }
        }
    }

    private static class ExpFracTable {
        private static final double[] EXP_FRAC_TABLE_A;

        private static final double[] EXP_FRAC_TABLE_B;

        static {
            if (org.apache.commons.math3.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {
                EXP_FRAC_TABLE_A = new double[org.apache.commons.math3.util.FastMath.EXP_FRAC_TABLE_LEN];
                EXP_FRAC_TABLE_B = new double[org.apache.commons.math3.util.FastMath.EXP_FRAC_TABLE_LEN];
                final double[] tmp = new double[2];
                final double factor = 1.0 / ((org.apache.commons.math3.util.FastMath.EXP_FRAC_TABLE_LEN) - 1);
                for (int i = 0; i < (org.apache.commons.math3.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A.length); i++) {
                    org.apache.commons.math3.util.FastMathCalc.slowexp((i * factor), tmp);
                    org.apache.commons.math3.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A[i] = tmp[0];
                    org.apache.commons.math3.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B[i] = tmp[1];
                }
            }else {
                EXP_FRAC_TABLE_A = org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA();
                EXP_FRAC_TABLE_B = org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB();
            }
        }
    }

    private static class lnMant {
        private static final double[][] LN_MANT;

        static {
            if (org.apache.commons.math3.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {
                LN_MANT = new double[org.apache.commons.math3.util.FastMath.LN_MANT_LEN][];
                for (int i = 0; i < (org.apache.commons.math3.util.FastMath.lnMant.LN_MANT.length); i++) {
                    final double d = java.lang.Double.longBitsToDouble(((((long) (i)) << 42) | 4607182418800017408L));
                    org.apache.commons.math3.util.FastMath.lnMant.LN_MANT[i] = org.apache.commons.math3.util.FastMathCalc.slowLog(d);
                }
            }else {
                LN_MANT = org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant();
            }
        }
    }

    private static class CodyWaite {
        private final int finalK;

        private final double finalRemA;

        private final double finalRemB;

        CodyWaite(double xa, double xb) {
            int k = ((int) (xa * 0.6366197723675814));
            double remA;
            double remB;
            while (true) {
                double a = (-k) * 1.570796251296997;
                remA = xa + a;
                remB = -((remA - xa) - a);
                a = (-k) * 7.549789948768648E-8;
                double b = remA;
                remA = a + b;
                remB += -((remA - b) - a);
                a = (-k) * 6.123233995736766E-17;
                b = remA;
                remA = a + b;
                remB += -((remA - b) - a);
                if (remA > 0) {
                    break;
                }
                --k;
            } 
            this.finalK = k;
            this.finalRemA = remA;
            this.finalRemB = remB;
        }

        int getK() {
            return finalK;
        }

        double getRemA() {
            return finalRemA;
        }

        double getRemB() {
            return finalRemB;
        }
    }
}
00:29:51.196 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
00:29:51.196 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
00:29:51.196 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3245 which is executed by 618 tests
1033054629
00:29:51.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:51.539 [pool-2250-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:52.862 [pool-2251-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:52.863 [pool-2252-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:29:52.864 [pool-2249-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:52.864 [pool-2249-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:52.864 [pool-2249-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.util.FastMath:3245.
00:29:52.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:52.893 [pool-2254-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:54.212 [pool-2255-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:54.213 [pool-2256-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:29:54.214 [pool-2253-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:54.214 [pool-2253-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:54.214 [pool-2253-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.util.FastMath:3245.
00:29:54.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
00:29:54.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:3241 which is executed by 618 tests
1033054629
00:29:54.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:54.556 [pool-2258-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:55.896 [pool-2259-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:55.898 [pool-2260-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:29:55.899 [pool-2257-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:55.899 [pool-2257-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:55.899 [pool-2257-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.util.FastMath:3241.
00:29:55.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:55.928 [pool-2262-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:57.241 [pool-2263-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:57.243 [pool-2264-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:29:57.243 [pool-2261-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:57.244 [pool-2261-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:57.244 [pool-2261-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.util.FastMath:3241.
00:29:57.244 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
00:29:57.244 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ArgUtils:50 which is executed by 721 tests
-1554378724
00:29:57.482 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:57.512 [pool-2266-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:57.801 [pool-2267-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:57.802 [pool-2268-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:29:57.803 [pool-2265-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:57.803 [pool-2265-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:57.803 [pool-2265-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.exception.util.ArgUtils:50.
00:29:57.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
00:29:57.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ArgUtils:45 which is executed by 721 tests
-1554378724
00:29:58.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:58.072 [pool-2270-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:58.357 [pool-2271-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:58.358 [pool-2272-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:29:58.359 [pool-2269-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:58.359 [pool-2269-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:58.359 [pool-2269-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.exception.util.ArgUtils:45.
00:29:58.359 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:58.389 [pool-2274-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:58.709 [pool-2275-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.ClassCastException: java.lang.Double cannot be cast to [Ljava.lang.Object;
    at org.apache.commons.math3.exception.util.ArgUtils.flatten(ArgUtils.java:26)
    at org.apache.commons.math3.exception.util.ExceptionContext.addMessage(ExceptionContext.java:88)
    at org.apache.commons.math3.exception.ConvergenceException.<init>(ConvergenceException.java:49)
    at org.apache.commons.math3.fraction.FractionConversionException.<init>(FractionConversionException.java:53)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)
00:29:58.711 [pool-2276-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[java.lang.Double cannot be cast to [Ljava.lang.Object;]
java.lang.ClassCastException: java.lang.Double cannot be cast to [Ljava.lang.Object;    at org.apache.commons.math3.exception.util.ArgUtils.flatten(ArgUtils.java:26)
    at org.apache.commons.math3.exception.util.ExceptionContext.addMessage(ExceptionContext.java:88)
    at org.apache.commons.math3.exception.ConvergenceException.<init>(ConvergenceException.java:49)
    at org.apache.commons.math3.fraction.FractionConversionException.<init>(FractionConversionException.java:53)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:210)
    at org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:121)

00:29:58.711 [pool-2273-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:58.711 [pool-2273-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): java.lang.Double cannot be cast to [Ljava.lang.Object;]
00:29:58.711 [pool-2273-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.exception.util.ArgUtils:45.
00:29:58.712 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
00:29:58.712 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ExceptionContext:89 which is executed by 858 tests
-310961535
00:29:58.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
00:29:58.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ExceptionContext:88 which is executed by 858 tests
-310961535
00:29:59.213 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:59.244 [pool-2278-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:59.571 [pool-2279-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:59.575 [pool-2280-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:29:59.577 [pool-2277-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:59.577 [pool-2277-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:29:59.577 [pool-2277-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.exception.util.ExceptionContext:88.
00:29:59.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
00:29:59.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ExceptionContext:87 which is executed by 858 tests
-310961535
00:29:59.828 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:29:59.857 [pool-2282-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:30:00.228 [pool-2283-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:30:00.229 [pool-2284-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:30:00.234 [pool-2281-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:30:00.234 [pool-2281-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:30:00.234 [pool-2281-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.exception.util.ExceptionContext:87.
00:30:00.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
00:30:00.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ArgUtils:54 which is executed by 859 tests
-1554378724
00:30:00.471 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
00:30:00.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ArgUtils:44 which is executed by 859 tests
-1554378724
00:30:00.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:30:00.738 [pool-2286-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:30:01.026 [pool-2287-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:30:01.028 [pool-2288-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:30:01.028 [pool-2285-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:30:01.029 [pool-2285-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:30:01.029 [pool-2285-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.exception.util.ArgUtils:44.
00:30:01.029 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
00:30:01.029 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ArgUtils:43 which is executed by 859 tests
-1554378724
00:30:01.272 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:30:01.301 [pool-2290-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:30:01.589 [pool-2291-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:30:01.591 [pool-2292-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:30:01.591 [pool-2289-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:30:01.591 [pool-2289-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:30:01.591 [pool-2289-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.exception.util.ArgUtils:43.
00:30:01.591 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:30:01.620 [pool-2294-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 25
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:30:01.906 [pool-2295-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: an exception should have been thrown
    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:30:01.908 [pool-2296-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)
[an exception should have been thrown]
java.lang.AssertionError: an exception should have been thrown    at org.junit.Assert.fail(Assert.java:88)
    at org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)
    at org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:30:01.908 [pool-2293-thread-1] DEBUG tests.output - Failing tests with false: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:30:01.908 [pool-2293-thread-1] DEBUG tests.output - Failing tests with true: 
[testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest): an exception should have been thrown]
00:30:01.909 [pool-2293-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.exception.util.ArgUtils:43.
00:30:01.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
00:30:01.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.exception.util.ArgUtils:42 which is executed by 859 tests
-1554378724
00:30:02.152 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
00:30:02.152 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:166 which is executed by 999 tests
936233262
00:30:02.401 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
00:30:02.401 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:165 which is executed by 999 tests
936233262
00:30:02.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:30:17.929 [pool-2298-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (15270 ms)
<> Total tests run: 43
<> Ignored tests: 1
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:30:18.456 [pool-2299-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (236 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:30:18.458 [pool-2300-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math3.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1055)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

00:30:18.459 [pool-2297-thread-1] DEBUG tests.output - Failing tests with false: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:30:18.459 [pool-2297-thread-1] DEBUG tests.output - Failing tests with true: 
[checkMissingFastMathClasses(org.apache.commons.math3.util.FastMathTest): FastMath should implement all StrictMath methods]
00:30:18.459 [pool-2297-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math3.random.BitsStreamGenerator:165.
00:30:18.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
00:30:18.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math3.util.FastMath:2927 which is executed by 1552 tests
1033054629
00:30:18.787 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
00:30:19.084 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 587
00:30:19.084 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 3829
00:30:19.084 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 91
00:30:19.084 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
00:30:19.084 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
00:30:19.088 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
00:30:19.088 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
00:30:19.088 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 2661511ms
00:30:19.088 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_ANGELIC_VALUE
Command exited with non-zero status 255
4532.15user 31.75system 44:24.32elapsed 171%CPU (0avgtext+0avgdata 2916472maxresident)k
51048inputs+14832outputs (4major+1527437minor)pagefaults 0swaps


Node: granduc-6.luxembourg.grid5000.fr



Date: Thu Nov 29 00:30:19 EST 2018

